{"version":3,"sources":["pages/Video/Video.module.scss","pages/Audio/Video.module.scss","pages/Lengs/Lengs.module.scss","pages/Poster/Poster.module.scss","pages/Tests/Tests.module.scss","pages/Courses/Courses.module.scss","pages/Playlist/Playlist.module.scss","components/buttonFull/ButtonFull.module.scss","Settings/Components/headerAuth/HeaderAuth.module.scss","Settings/Components/LogoApp/LogoApp.module.scss","components/search/Search.module.scss","components/header/Header.module.scss","components/inputFull/InputFull.module.scss","components/popupForm/PopupForm.module.scss","Settings/Components/BackgroundLogo/BackgroundLogo.module.scss","Settings/Components/GlobalStyle.module.scss","components/textCounter/TextCounter.module.scss","components/header/Form.module.scss","components/filter/Search.module.scss","components/tableCard/TableCard.module.scss","context/authContext.js","const.js","Settings/const.js","hooks/http.hook.js","hooks/auth.hook.js","hooks/translashion.js","components/inputFull/InputFull.js","Settings/Components/ColorsStyles.js","constants/ColorsStyles.js","components/buttonFull/ButtonFull.js","Settings/Components/BackgroundLogo/background-logo.png","Settings/Components/BackgroundLogo/BackgroundLogo.js","Settings/Components/headerAuth/logo.png","Settings/Components/headerAuth/HeaderAuth.js","pages/Auth/Auth.js","context/PopupFormContext.js","hooks/usePopupForm.js","assets/icons/global/GlobalSvgSelector.js","components/header/FormReEmail.js","components/header/FormRePassword.js","components/form/FielsInput.js","components/form/FielsBool.js","components/form/FielsBox.js","components/form/FielsDate.js","components/form/FielsDateFull.js","axios/index.js","services/PostService.js","components/form/FielsFile.js","components/form/FielsVideo.js","components/form/FielsText.js","components/form/Lengs.js","components/form/FielsTextTranslation.js","components/form/FielsFileTranslation.js","components/form/FielsInputTranslation.js","components/form/FielsDoubleFields.js","components/form/FieldTemporaryAccessData.js","components/form/FieldListMenu.js","components/form/FieldListAdditionalFunctionality.js","components/form/FieldInputEditTranslation.js","components/form/FieldIntervalBallTextTranslation.js","components/form/FieldListAnswerBall.js","tools.js","components/form/FieldFileOpen.js","components/form/FielsDropDownList.js","components/form/FieldStatistics.js","components/form/EmptyProps.js","components/form/FieldInputSecret.js","components/form/FieldSelectList.js","components/form/FieldListCustomLength.js","constants/OptionsTable.js","components/pushInfo/PushInfo.js","components/header/FormReTranslation.js","components/header/FormVersion.js","components/header/FormSelect.js","components/header/Header.js","components/search/Search.js","components/tableCard/Forml.js","components/tableCard/TableCard.js","components/paginationTable/PaginationTable.js","components/filter/Filter.js","components/textCounter/TextCounter.js","components/tableCard/functional.js","pages/Users/Users.js","pages/Poster/Poster.js","pages/Video/Video.js","pages/Audio/Audio.js","pages/Tests/Tests.js","pages/Courses/Courses.js","pages/Users/UsersFin.js","pages/Lengs/Lengs.js","pages/Playlist/Playlist.js","provider/PopupFormProvider.js","components/popupForm/PopupForm.js","App.js","Routes.js","index.js","components/tableCard/Form.module.scss","pages/Users/Users.module.scss","pages/Auth/Auth.module.scss","components/paginationTable/PaginationTable.module.scss","components/GlobalStyle.module.scss","components/pushInfo/PushInfo.module.scss"],"names":["module","exports","noop","AuthContext","createContext","token","login","logout","isAuthenticated","email","newEmail","type_admin","name","language","newLanguage","translations","languages_list","get_list_lengs","httpServer","useHttp","auth","useContext","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","status","Error","message","clearError","storageName","checkLanguage","field","find","item","value","length","checkLanguageConst","InputFull","type","secret","className","s","input","placeholder","onChange","change","target","GlobalStyle","CustomFontLite","error_text","ColorsStyles","colorButton","colorTextError","backgroundFooter","colorHr","colorInput","background","backgroundTwo","backgroundTwoHover","backgroundInput","borderInput","width","color","colorTextInput","colorTextFilter","Colors","ButtonFull","button","styles","onClick","block_loader","css","loader","size","CustomFontRegular","button_text","BackgroundLogo","src","backgroundLogoImg","alt","main","HeaderAuth","block","logo","BellotaFontBold","text_glav","Auth","setEmail","password","setPassword","setLoader","setStatus","errorField","setErrorField","AuthHandler","fullName","telephone","errors","helpHandler","root","text_foot","style","inp","top_input","top","but","footer","button_footer_text","button_footer","PopupFormContext","isOpen","openHandler","exitHandler","usePopupForm","GlobalSvgSelector","id","height","viewBox","fill","xmlns","d","FormReEmail","popupForm","setNewEmail","popupError","setPopupError","popupOk","setPopupOk","clearErrorPopup","useEffect","sendNewEmail","new_email","Authorization","root_popup","popup_header","BellotaFontRegular","popup_label","button_close","popup_ok","popup_error","popup_liner_button","popup_button_ok","popup_button_ok_loader","popup_button_ok_text","popup_button_exit","popup_button_exit_text","FormRePassword","newPassword","setNewPassword","newPasswordRe","setNewPasswordRe","sendNewPassword","new_password","FieldInput","label","jin","FieldBool","list_value","st","statusField","setStatusField","toString","clickHandler","wrapper_bool","root_click_","map","index","button_input","clip_active","clip","clip_text","root_click","slice","FieldBox","boxField","setBoxField","boxHandler","arr_1","indexOf","splice","Set","button_input_b","box_active","box","FieldDate","MobileDateTimePicker","newValue","renderInput","params","TextField","sx","marginTop","flexDirection","display","borderRadius","backgroundColor","borderColor","borderWidth","InputProps","disableUnderline","readOnly","paddingTop","FieldDateFull","isNowDate","Date","MobileDatePicker","api","axios","create","baseURL","PostService","image","FormData","formData","append","post","data_answer","this","zip","file","FieldFile","statusOk","setStatusOk","setStatusError","deleteFile","openFile","event","files","postUploadImage","setTimeout","root_file","input_file","button_file","step","FieldVideo","postUploadVideo","FieldText","rows","cols","inputarrea","Lengs","languages","setItemMenu","itemMenu","box_translation","wrapper_language_label","new_itemMenu","code","language_label","FieldTextTranslation","lang","wrpper_field_header","findIndex","new_boxField","index_l","push","editFiled","FieldFileTranslation","updateInfo","valueNew","setr","el","FieldInputTranslation","FieldDoubleFields","fields","wrapper_full","block_field","listField","optionLanguages","FieldTemporaryAccessData","url_get_data","setList_value","getListValue","answer","changeDate","indexElement","arr_copy","wrappe_center","course_id","_id","end_date","setMonth","getMonth","start_date","wrapper_date","st_date","FieldListMenu","labels","list_menu_fields","id_data","liner_menu","liner_menu_item","liner_menu_item_active","FieldListAdditionalFunctionality","labelFunc","additional_functionality","title_add","add_data","wigth_panel","popapStatus","setPopapStatus","newData","setNewData","changeRootMain","itemHandler","gim","item__","forEach","item_menu","element","cloneDeep","default","select","changeRoot","new_data","blur__","root___l","e","stopPropagation","folHandler","root_popup_","block_buttons","popup_button_delete","clearHandler","items","saveHandler","placeholder_max","additional_item","additional_item_text","button_delet","deleteHandler","additional_item_placeholder","button_add_function","FieldInputEditTranslation","translation","jinl","preview","markdown","FieldIntervalBallTextTranslation","setField","new_menu","new_set_Language","editBall","hasColor","wrapper_st","button_delet_","start_balls","input_set","text_list","end_balls","description","editText","input_color","input_text_color","marginLeft","test","addData","FieldListAnswerBall","wrapper_st_","input_wil","lin_b","balls","button_input_b_","is_status","editBox","Tools","FieldFileOpen","justifyContent","button_open","href","FieldDropDownList","valueIn","labelIn","list","setList","getList","console","updateStatusList","marginBottom","drop","dropList","dropListItem","changeHandler","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","BarElement","FieldStatistics","setData","activeIndex","setActiveIndex","dataGraph","setDataGraph","dataG","i","lit","datasets","j","dateToString","result","date_end","date","day","getDate","month","year","getFullYear","options","responsive","plugins","legend","title","root_statistics","data_view","index_view","statisctics_view","statisctics_result","list_index","undefined","viewHandler","statisctics_view_label","diagramma","statisctics_view_active","index_r","statisctics_block","indexResult","delete_index","viewResult","CustomFontMedium","statisctics_label","root_statistics_item_active","statisctics_item","statisctics_item_text","question","EmptyProps","value_new","FieldInputSecret","React","FieldSelectList","url_get_selected","leng","loaderList","setLoadeList","selected","setSelected","getSelect","FieldListCustomLength","wrapper_st_s","editValue","sortNumberFunction","sort","b","number","optionUserView","delete_url","filter","optionUserFin","text","optionCreateUserFin","optionUser","optionCreateUser","optionVersion","optionTranslation","optionTranslationAdmin","optionPlaylist","optionCreatePlaylist","settings","access","optionCustomAccess","optionCreateCourses","video","optionCreateTests","img","answers","optionEditCourses","optionEditLangs","optionEditTests","optionTests","value_tooltip","optionCourses","optionPoster","optionEditVideo","not_see","optionVideo","optionEditAudio","optionAudio","optionCreateVideo","optionCreateAudio","optionCreateLangs","optionCreatePoster","PushInfo","popup_value","blcok_buttons","FormReTranslation","option","fileName","setValue","button_upload","button_upload_text","item_data","item_header_label","FormVersion","reload","FormSelect","value_code","label_code","select_handler","selectedValue","label_menu","label_menu_fin","Header","version","setVersion","active_list_menu","set_active_list_menu","getVersion","profileHandler","menu","to","button_item","activeClassName","button_item_active","item_label","lines","lenBut","block_profile_active","block_profile","block_profile_header","profile","label_profile","list_button","button_profile_item","button_profile_item_text","Search","callback","handler","Form","optionQuestionnaire","optionPassword","optionEdit","optionSettings","questionnaire","setQuestionnaire","setSettings","activeMenu","setActiveMenu","isCustomAccess","setIsCustomAccess","new_option","setNew_option","f_option","custom_access","fieldQuestionnaire","fieldSettings","pop","changeQuestionnaire","changeSettings","changePassword","itemMenuHandler","renderThumbVertical","props","scrollThumbVertical","boxShadow","string_date","string","getHours","getMinutes","string_date_","TableCard","table_name","page","StringLang","langsStringTo","strings","new_string","join","table","cellSpacing","table_tr","CustomFontBold","table_td","table_td_block","table_td_label","td_error","colSpan","td_error_block","td_error_text","data_item","tr_br","tr","field_item","counter","td","tooltip_test","tooltip_test_text","tooltip","reverse","text_item","date_start","user_name","tooltip_course","tooltip_course_text","proc_lessons","String","PaginationTable","endPage","startPage","getData","setPage","next_button_active","next_button","liner","current","hr","end","Modal","section","active","setActive","newActive","placeholder_i","Filter","TextCounter","sortRoot","sortData","Users","setEndPage","search","setSearch","is_admin","setIs_admin","setAccess","setLanguage","data_length","set_data_length","page_","rel","data_search","sortStatus","search_","is_admin_","access_","language_","full_name","count_page","count_data","header","wrapper_header","create_button_ok","create_button_ok_text","Poster","Video","Audio","category","setCategory","genre","setGenre","category_","genre_","Tests","Courses","UsersFin","header_text","Playlist","PopupFormProvider","children","setIsOpen","Provider","PopupForm","rootPopup","blur","theme","createTheme","palette","primary","light","dark","contrastText","secondary","App","setToken","ready","setReady","set_type_admin","set_name","setTranslations","setLanguages_list","localStorage","setItem","jwtToken","removeItem","getTranslations","parse","getItem","useAuth","routes","isAdmin","path","exact","useRoutes","LocalizationProvider","dateAdapter","DateAdapter","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,OAAS,sBAAsB,eAAiB,8BAA8B,OAAS,sBAAsB,iBAAmB,gCAAgC,sBAAwB,uC,oBCArOD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,OAAS,sBAAsB,eAAiB,8BAA8B,OAAS,sBAAsB,iBAAmB,gCAAgC,sBAAwB,uC,oBCArOD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,OAAS,sBAAsB,OAAS,sBAAsB,iBAAmB,gCAAgC,sBAAwB,uC,oBCAtLD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,OAAS,uBAAuB,OAAS,uBAAuB,iBAAmB,iCAAiC,sBAAwB,wC,oBCA1LD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,OAAS,sBAAsB,OAAS,sBAAsB,iBAAmB,gCAAgC,sBAAwB,uC,oBCAtLD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,wBAAwB,OAAS,wBAAwB,iBAAmB,kCAAkC,sBAAwB,yC,oBCA9LD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,OAAS,yBAAyB,OAAS,yBAAyB,iBAAmB,mCAAmC,sBAAwB,0C,oBCAlMD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,YAAc,gCAAgC,aAAe,iCAAiC,OAAS,6B,oBCA7JD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,0BAA0B,KAAO,yBAAyB,UAAY,gC,oBCAhID,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,SAAW,4B,oBCA5DD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,sBAAsB,OAAS,yB,mBCArFD,EAAOC,QAAU,CAAC,WAAa,2BAA2B,aAAe,6BAA6B,MAAQ,sBAAsB,KAAO,qBAAqB,iBAAmB,iCAAiC,UAAY,0BAA0B,YAAc,4BAA4B,aAAe,6BAA6B,YAAc,4BAA4B,YAAc,4BAA4B,SAAW,yBAAyB,OAAS,uBAAuB,MAAQ,sBAAsB,mBAAqB,mCAAmC,gBAAkB,gCAAgC,kBAAoB,kCAAkC,qBAAuB,qCAAqC,uBAAyB,uCAAuC,aAAe,6BAA6B,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,qBAAqB,MAAQ,sBAAsB,MAAQ,sBAAsB,KAAO,qBAAqB,YAAc,4BAA4B,mBAAqB,mCAAmC,qBAAuB,qCAAqC,qBAAuB,qCAAqC,MAAQ,sBAAsB,QAAU,wBAAwB,YAAc,4BAA4B,oBAAsB,oCAAoC,yBAA2B,yCAAyC,cAAgB,gC,oBCAh9CD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,WAAa,8BAA8B,IAAM,uBAAuB,IAAM,yB,oBCAjID,EAAOC,QAAU,CAAC,KAAO,wBAAwB,KAAO,0B,oBCAxDD,EAAOC,QAAU,CAAC,KAAO,+B,oBCAzBD,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,kBAAoB,uCAAuC,iBAAmB,sCAAsC,eAAiB,oCAAoC,gBAAkB,qCAAqC,mBAAqB,wCAAwC,gBAAkB,uC,oBCAtXD,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,kBAAoB,gCAAgC,aAAe,2BAA2B,WAAa,yBAAyB,aAAe,2BAA2B,gBAAkB,8BAA8B,YAAc,0BAA0B,WAAa,yBAAyB,aAAe,2BAA2B,eAAiB,6BAA6B,IAAM,kBAAkB,WAAa,yBAAyB,KAAO,mBAAmB,YAAc,0BAA0B,UAAY,wBAAwB,WAAa,yBAAyB,WAAa,yBAAyB,YAAc,0BAA0B,KAAO,mBAAmB,WAAa,yBAAyB,aAAe,2BAA2B,YAAc,0BAA0B,aAAe,2BAA2B,YAAc,0BAA0B,YAAc,0BAA0B,SAAW,uBAAuB,WAAa,yBAAyB,MAAQ,oBAAoB,mBAAqB,iCAAiC,gBAAkB,8BAA8B,kBAAoB,gCAAgC,oBAAsB,kCAAkC,cAAgB,4BAA4B,qBAAuB,mCAAmC,uBAAyB,qCAAqC,aAAe,2BAA2B,OAAS,qBAAqB,KAAO,mBAAmB,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,KAAO,mBAAmB,YAAc,0BAA0B,mBAAqB,iCAAiC,qBAAuB,mCAAmC,qBAAuB,mCAAmC,MAAQ,oBAAoB,QAAU,sBAAsB,YAAc,0BAA0B,oBAAsB,kCAAkC,yBAA2B,uCAAuC,cAAgB,4BAA4B,WAAa,yBAAyB,gBAAkB,8BAA8B,uBAAyB,qCAAqC,cAAgB,4BAA4B,mBAAqB,mC,yCCAvzED,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,sBAAsB,YAAc,4BAA4B,MAAQ,sBAAsB,OAAS,uBAAuB,WAAa,2BAA2B,aAAe,6BAA6B,YAAc,4BAA4B,aAAe,6BAA6B,cAAgB,8BAA8B,YAAc,4BAA4B,SAAW,yBAAyB,mBAAqB,mCAAmC,gBAAkB,gCAAgC,qBAAuB,qCAAqC,uBAAyB,uCAAuC,kBAAoB,kCAAkC,oBAAsB,oCAAoC,aAAe,6BAA6B,WAAa,2BAA2B,aAAe,6BAA6B,eAAiB,+BAA+B,IAAM,oBAAoB,WAAa,2BAA2B,KAAO,qBAAqB,YAAc,4BAA4B,UAAY,4B,mBCApnCD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,aAAe,gCAAgC,QAAU,2BAA2B,eAAiB,kCAAkC,UAAY,6BAA6B,YAAc,+BAA+B,mBAAqB,sCAAsC,SAAW,4BAA4B,SAAW,4BAA4B,eAAiB,kCAAkC,eAAiB,kCAAkC,OAAS,0BAA0B,cAAgB,iCAAiC,SAAW,4BAA4B,SAAW,4BAA4B,eAAiB,kCAAkC,gBAAkB,mCAAmC,mBAAqB,sCAAsC,kBAAoB,qCAAqC,MAAQ,yBAAyB,GAAK,sBAAsB,GAAK,wB,4FCC97B,SAASC,KAEF,IAAMC,EAAcC,wBAAc,CACrCC,MAAO,KACPC,MAAOJ,EACPK,OAAQL,EACRM,iBAAiB,EACjBC,MAAO,KACPC,SAAU,KACVC,WAAY,KACZC,KAAM,KACNC,SAAU,KACVC,YAAaZ,EACba,aAAc,KACdC,eAAgB,KAChBC,eAAgBf,I,kDCdPgB,ECCa,mCCAbC,EAAU,WACrB,IAAMC,EAAOC,qBAAWlB,GACxB,EAA8BmB,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAUC,sBAAW,uCAAC,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GAC7ET,GAAW,GADe,SAGpBQ,IACFA,EAAOE,KAAKC,UAAUH,GACtBC,EAAQ,gBAAkB,oBALJ,SAQDG,MAAMlB,EAAaW,EAAK,CAACE,SAAQC,OAAMC,YARtC,cAQlBI,EARkB,iBASLA,EAASC,OATJ,WASlBC,EATkB,OAWnBF,EAASG,IAA0B,MAApBH,EAASI,QAC3BrB,EAAKb,SAGF8B,EAASG,GAfU,uBAgBhB,IAAIE,MAAMH,EAAKI,SAAW,kGAhBV,eAmBxBnB,GAAW,GAnBa,kBAqBjBe,GArBiB,wCAuBxBf,GAAW,GACXE,EAAS,KAAEiB,SAxBa,+DAAD,sDA2BxB,IAIH,MAAO,CAAEpB,UAASI,UAASF,QAAOmB,WAFfhB,uBAAY,kBAAMF,EAAS,QAAO,MCnCjDmB,EAAc,W,0ECHPC,EAAgB,SAACC,EAAOlC,GACjC,GAAqB,kBAAVkC,EAAoB,OAAOA,EACtC,IAAIR,EAAI,OAAGQ,QAAH,IAAGA,OAAH,EAAGA,EAAOC,MACd,SAACC,GAAD,aAAc,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMpC,YAAaA,IAAnB,UAA+BoC,EAAKC,aAApC,aAA+B,EAAYC,WAEzD,OAAKZ,EACEA,EAAKW,MADMH,EAAM,GAAGG,OAIlBE,EAAqB,SAACF,EAAOnC,GACtC,OAAKmC,EACEnC,GAAgBA,EAAamC,GAASnC,EAAamC,GAASA,EADhD,I,OCHVG,EAAY,SAAC,GAA4B,IAAD,EAAzBd,EAAyB,EAAzBA,KAAMxB,EAAmB,EAAnBA,aAC9B,OACI,qCACI,uBACIuC,KAAMf,EAAKgB,OACXL,MAAOX,EAAKW,MAEZM,UAAWC,IAAEC,MACbC,YAAaP,EAAmBb,EAAKoB,YAAa5C,GAClD6C,SAAU,SAACV,GAAD,OAAWX,EAAKsB,OAAOX,EAAMY,OAAOZ,WAEjD,UAAAX,EAAKd,aAAL,eAAY0B,QACT,qBACIK,UAAWO,IAAYC,eAAiB,IAAMP,IAAEQ,WADpD,SAGKb,EAAmBb,EAAKd,MAAOV,KAEpC,S,mCCxBHmD,EAAe,CACxBC,YAAa,UACbC,eAAgB,UAChBC,iBAAkB,UAClBC,QAAS,UAETC,WAAY,UACZC,WAAY,OACZC,cAAe,2BACfC,mBAAoB,4BACpBC,gBAAiB,UACjBC,YAAa,CACTC,MAAO,EACPC,MAAO,QAEXC,eAAgB,UAChBC,gBAAiB,WCdRd,EAAe,CACxBC,YAAac,EAAOd,YACpBC,eAAgBa,EAAOb,eACvBC,iBAAkBY,EAAOZ,iBACzBC,QAASW,EAAOZ,iBAChBE,WAAYU,EAAOV,WACnBC,WAAYS,EAAOT,WACnBC,cAAeQ,EAAOR,cACtBC,mBAAoBO,EAAOP,mBAC3BC,gBAAiBM,EAAON,gBACxBC,YAAaK,EAAOL,YACpBG,eAAgBE,EAAOF,gBCLdG,EAAa,SAAC,GAA4B,IAA1B3C,EAAyB,EAAzBA,KAAMxB,EAAmB,EAAnBA,aAC/B,OACI,qBACAyC,UAAWC,IAAE0B,OAAS,MAAW,OAAJ5C,QAAI,IAAJA,OAAA,EAAAA,EAAM6C,QAAS7C,EAAK6C,OAAS,MAC1DC,QAAS,kBAAM9C,EAAKsB,UAFpB,SAIKtB,EAAKhB,QACF,qBAAKiC,UAAWC,IAAE6B,aAAlB,SACI,cAAC,IAAD,CAAYR,MAAOZ,EAAaE,eAAgB7C,SAAS,EAAMgE,IAAK9B,IAAE+B,OAAQC,KAAM,OAGxF,qBAAKjC,UAAWO,IAAY2B,kBAAoB,IAAMjC,IAAEkC,YAAxD,SACKvC,EAAmBb,EAAKW,MAAOnC,Q,kBCpBrC,MAA0B,4CCI5B6E,EAAiB,kBAC1B,qBAAKC,IAAKC,EAAmBC,IAAI,kBAAkBvC,UAAWC,IAAEuC,Q,oCCLrD,MAA0B,iCCM5BC,EAAa,SAAC,GAA2B,EAAzB1D,KAA0B,IAApBxB,EAAmB,EAAnBA,aAC/B,OACI,qBAAKyC,UAAWC,IAAEzB,KAAlB,SACI,sBAAKwB,UAAWC,IAAEyC,MAAlB,UACI,qBAAKL,IAAKM,EAAM3C,UAAWC,IAAE0C,OAE7B,qBACI3C,UAAWO,IAAYqC,gBAAkB,IAAM3C,IAAE4C,UADrD,SAGKjD,EAAmB,kBAAmBrC,WCF9CuF,EAAO,WAChB,IAAMlF,EAAOC,qBAAWlB,GACxB,EAAgDgB,IAAxCQ,EAAR,EAAQA,QAAgBiB,GAAxB,EAAiBnB,MAAjB,EAAwBmB,YAAYrB,EAApC,EAAoCA,QACpC,EAA0BD,mBAAS,IAAnC,mBAAOb,EAAP,KAAc8F,EAAd,KACA,EAAgCjF,mBAAS,IAAzC,mBAAOkF,EAAP,KAAiBC,EAAjB,KACA,EAA4BnF,oBAAS,GAArC,mBAAOkE,EAAP,KAAekB,EAAf,KACA,EAA4BpF,oBAAS,GAArC,mBAAOmB,EAAP,KAAekE,EAAf,KACA,EAAoCrF,mBAAS,CACzCb,MAAO,GACP+F,SAAU,KAFd,mBAAOI,EAAP,KAAmBC,EAAnB,KAKMC,EAAW,uCAAG,4BAAAhF,EAAA,yDAChBc,IACqB,IAAjBnC,EAAM0C,OAFM,yCAGL0D,EAAc,CACjBjG,KAAM,GACNmG,SAAU,GACVC,UAAW,GACXvG,MAAO,oDACP+F,SAAU,MARF,UAWQ,IAApBA,EAASrD,OAXG,yCAYL0D,EAAc,CACjBjG,KAAM,GACNmG,SAAU,GACVC,UAAW,GACXvG,MAAO,GACP+F,SAAU,qFAjBF,cAoBhBK,EAAc,CACVpG,MAAO,GACP+F,SAAU,KAtBE,kBA0BO7E,EAAQ,yBAA0B,OAAQ,CACzDlB,QACA+F,aA5BQ,QA0BNjE,EA1BM,QA8BH0E,OACLJ,EAAc,2BACPD,GADM,kBAERrE,EAAK0E,OAAO,GAAG,GAAK1E,EAAK0E,OAAO,GAAG,MAGxC7F,EAAKd,MAAMiC,EAAKlC,MAAOI,EAAO8B,EAAK5B,WAAY4B,EAAK3B,MApC5C,4GAAH,qDAyCXsG,EAAW,uCAAG,sBAAApF,EAAA,sEAEZ4E,GAAU,GAFE,SAGN/E,EAAQ,iCAAkC,OAAQ,IAH5C,OAIZgF,GAAU,GACVD,GAAU,GALE,yGAAH,qDASjB,OACI,qCAEI,cAAC,EAAD,IAEA,sBAAKlD,UAAWC,IAAE0D,KAAlB,UACI,cAAC,EAAD,CAAYpG,aAAcK,EAAKL,eAC/B,qBACIyC,UACIO,IAAY2B,kBAAoB,IAAMjC,IAAE2D,UAFhD,SAKKhE,EAAmB,mBAAoBhC,EAAKL,gBAEjD,sBAAKyC,UAAWC,IAAEyC,MAAlB,UACI,cAAC,EAAD,CACInF,aAAcK,EAAKL,aACnBwB,KAAM,CACFW,MAAOzC,EACPoD,OAAQ0C,EACR5C,YAAa,SACblC,MAAOmF,EAAWnG,MAClB8C,OAAQ,QACR8D,MAAO5D,IAAE6D,OAGjB,qBAAK9D,UAAWC,IAAE8D,YAClB,cAAC,EAAD,CACIxG,aAAcK,EAAKL,aACnBwB,KAAM,CACFW,MAAOsD,EACP3C,OAAQ4C,EACR9C,YAAa,WACblC,MAAOmF,EAAWJ,SAClBjD,OAAQ,WACR8D,MAAO5D,IAAE6D,OAGjB,qBAAK9D,UAAWC,IAAE+D,MAClB,cAAC,EAAD,CACIjF,KAAM,CACFW,MAAO,SACPW,OAAQiD,EACRvF,QAASA,EACT6D,OAAQ3B,IAAEgE,KAEd1G,aAAcK,EAAKL,eAEvB,qBAAKyC,UAAWC,IAAEiE,OAAlB,SACMlC,EAkCE,cAAC,IAAD,CACIV,MAAOZ,EAAaE,eACpB7C,SAAS,EACTgE,IAAK9B,IAAE+B,OACPC,KAAM,KArCVhD,EACI,qBACIe,UACIO,IAAY2B,kBACZ,IACAjC,IAAEkE,mBAJV,SAOKvE,EACG,eACAhC,EAAKL,gBAIb,qBACIyC,UAAWC,IAAEmE,cACbvC,QAAS,kBAAM6B,KAFnB,SAII,qBACI1D,UACIO,IAAY2B,kBACZ,IACAjC,IAAEkE,mBAJV,SAOKvE,EACG,kBACAhC,EAAKL,8B,iBCtJjD,SAASb,KAEF,IAAM2H,EAAmBzH,wBAAc,CAC1C0H,OAAQ,KACRvF,KAAM,KACNwF,YAAa7H,EACb8H,YAAa9H,ICLJ+H,GAAe,kBAAM5G,qBAAWwG,ICDhCK,GAAoB,SAAC,GAC9B,OADyC,EAATC,IAE5B,IAAK,YACD,OACI,qBACItD,MAAM,KACNuD,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,2tCACFF,KAAK,YAIrB,IAAK,oBACD,OACI,qBACIzD,MAAM,KACNuD,OAAO,IACPC,QAAQ,WACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,yaACFF,KAAK,YAIrB,IAAK,mBACD,OACI,qBACIzD,MAAM,IACNuD,OAAO,KACPC,QAAQ,WACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,2WACFF,KAAK,YAIrB,IAAK,eACD,OACI,qBACIzD,MAAM,KACNuD,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,+yBACFF,KAAK,YAIrB,IAAK,QACD,OACI,qBACIzD,MAAM,KACNuD,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,yuCACFF,KAAK,UAIrB,IAAK,iBACD,OACI,qBACIzD,MAAM,KACNuD,OAAO,IACPC,QAAQ,WACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,u2BACFF,KAAK,YAIrB,IAAK,oBACD,OACI,qBACIzD,MAAM,KACNuD,OAAO,IACPC,QAAQ,WACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,q6BACFF,KAAK,YAIrB,IAAK,KACD,OACI,qBACIzD,MAAM,KACNuD,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,khCACFF,KAAK,YAIrB,IAAK,SACD,OACI,qBACIzD,MAAM,KACNuD,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,oqCACFF,KAAK,YAIrB,IAAK,SACD,OACI,qBACIzD,MAAM,KACNuD,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,ugEACFF,KAAK,YAIrB,IAAK,SACD,OACI,qBACIzD,MAAM,KACNuD,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,miDACFF,KAAK,YAIrB,IAAK,QACD,OACI,qBACIzD,MAAM,KACNuD,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,6wEACFF,KAAK,YAIrB,IAAK,QACD,OACI,qBACIzD,MAAM,KACNuD,OAAO,IACPC,QAAQ,WACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,6zBACFF,KAAK,YAIrB,IAAK,aACD,OACI,qBACIzD,MAAM,KACNuD,OAAO,IACPC,QAAQ,WACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,6zBACFF,KAAK,YAIrB,IAAK,YACD,OACI,qBACIzD,MAAM,KACNuD,OAAO,IACPC,QAAQ,WACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,+1BACFF,KAAK,YAIrB,IAAK,aACD,OACI,qBACIzD,MAAM,IACNuD,OAAO,KACPC,QAAQ,WACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,g1BACFF,KAAK,YAIrB,IAAK,cACD,OACI,qBACIzD,MAAM,IACNuD,OAAO,KACPC,QAAQ,WACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,m1BACFF,KAAK,YAIrB,IAAK,SACD,OACI,qBACIzD,MAAM,KACNuD,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,SAOI,sBACIC,EAAE,2oCACFF,KAAK,YAIrB,IAAK,QACD,OACI,sBACIzD,MAAM,KACNuD,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALV,UAOI,sBACIC,EAAE,yZACFF,KAAK,YAET,sBACIE,EAAE,2jBACFF,KAAK,eAIrB,QACI,OAAO,OCzRNG,GAAc,WACvB,IAAMC,EAAYT,KACZ7G,EAAOC,qBAAWlB,GACxB,EAAgDgB,IAAxCQ,EAAR,EAAQA,QAA4BJ,GAApC,EAAiBE,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SACpC,EAAgCD,mBAAS,IAAzC,mBAAOZ,EAAP,KAAiBiI,EAAjB,KACA,EAAgCrH,mBAAS,IAAzC,mBAAOkF,EAAP,KAAiBC,EAAjB,KACA,EAAoCnF,mBAAS,IAA7C,mBAAOsH,EAAP,KAAmBC,EAAnB,KACA,EAA8BvH,mBAAS,IAAvC,mBAAOwH,EAAP,KAAgBC,EAAhB,KAEMC,EAAkB,WACpBH,EAAc,IACdE,EAAW,KAGfE,qBAAU,WACND,MACD,CAACN,EAAUZ,SAEd,IAKMoB,EAAY,uCAAG,sBAAApH,EAAA,yDACjBkH,IACwB,IAApBtI,EAASyC,QAAoC,IAApBqD,EAASrD,OAFrB,yCAGN0F,EAAc,gBAHR,cAKjBG,IALiB,kBAOPrH,EAAQ,4BAEV,OACA,CAAEwH,UAAWzI,EAAU8F,YACvB,CACI4C,cAAc,GAAD,OAAKhI,EAAKf,SAZlB,OAebe,EAAKV,SAASA,GAnBlB+F,EAAY,IACZkC,EAAY,IAoBRI,EAAW,gBAjBE,kDAmBbF,EAAc,iBAnBD,0DAAH,qDAuBlB,OACI,sBAAKrF,UAAWC,IAAE4F,WAAlB,UACI,sBAAK7F,UAAWC,IAAE6F,aAAlB,UACI,qBACI9F,UACIO,IAAYwF,mBAAqB,IAAM9F,IAAE+F,YAFjD,SAKKpG,EAAmB,eAAgBhC,EAAKL,gBAE7C,qBACIyC,UAAWC,IAAEgG,aACbpE,QAAS,kBAAMqD,EAAUV,eAF7B,SAII,cAAC,GAAD,CAAmBG,GAAG,eAG9B,qBACI3E,UAAWO,IAAY2B,kBAAoB,IAAMjC,IAAEE,YADvD,SAGKP,EAAmB,YAAahC,EAAKL,gBAE1C,uBACImC,MAAOxC,EACP4C,KAAK,QACLE,UAAWC,IAAEC,MACbE,SAAU,SAACV,GAAD,OAAWyF,EAAYzF,EAAMY,OAAOZ,UAElD,qBACIM,UAAWO,IAAY2B,kBAAoB,IAAMjC,IAAEE,YADvD,SAGKP,EAAmB,WAAYhC,EAAKL,gBAEzC,uBACImC,MAAOsD,EACPlD,KAAK,WACLE,UAAWC,IAAEC,MACbE,SAAU,SAACV,GAAD,OAAWuD,EAAYvD,EAAMY,OAAOZ,UAElD,qBACIM,UACIO,IAAY2B,kBACZ,KACoB,IAAnBoD,EAAQ3F,OAAeM,IAAEiG,SAAWjG,IAAEkG,aAJ/C,SAOKvG,EAAmB0F,GAAWF,EAAYxH,EAAKL,gBAEpD,sBAAKyC,UAAWC,IAAEmG,mBAAlB,UACI,qBACIpG,UAAWC,IAAEoG,gBACbxE,QAAS,kBAAM6D,KAFnB,SAIK3H,EACG,qBAAKiC,UAAWC,IAAEqG,uBAAlB,SACI,cAAC,IAAD,CACIhF,MAAOZ,EAAaE,eACpB7C,SAAS,EACTgE,IAAK9B,IAAE+B,OACPC,KAAM,OAId,qBACIjC,UACIO,IAAY2B,kBACZ,IACAjC,IAAEsG,qBAJV,SAOK3G,EAAmB,OAAQhC,EAAKL,kBAI7C,qBACIyC,UAAWC,IAAEuG,kBACb3E,QAAS,kBAAMqD,EAAUV,eAF7B,SAII,qBACIxE,UACIO,IAAY2B,kBACZ,IACAjC,IAAEwG,uBAJV,SAOK7G,EAAmB,SAAUhC,EAAKL,yBCnI9CmJ,GAAiB,WAC1B,IAAMxB,EAAYT,KACZ7G,EAAOC,qBAAWlB,GACxB,EAAgDgB,IAAxCQ,EAAR,EAAQA,QAA4BJ,GAApC,EAAiBE,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SACpC,EAAgCD,mBAAS,IAAzC,mBAAOkF,EAAP,KAAiBC,EAAjB,KACA,EAAsCnF,mBAAS,IAA/C,mBAAO6I,EAAP,KAAoBC,EAApB,KACA,EAA0C9I,mBAAS,IAAnD,mBAAO+I,EAAP,KAAsBC,EAAtB,KACA,EAAoChJ,mBAAS,IAA7C,mBAAOsH,EAAP,KAAmBC,EAAnB,KACA,EAA8BvH,mBAAS,IAAvC,mBAAOwH,EAAP,KAAgBC,EAAhB,KAEMC,EAAkB,WACpBH,EAAc,IACdE,EAAW,KAGfE,qBAAU,WACND,MACD,CAACN,EAAUZ,SAEd,IAMMyC,EAAe,uCAAG,sBAAAzI,EAAA,yDACpBkH,IACKmB,GAAgBE,GAAkB7D,EAASrD,OAF5B,yCAGT0F,EAAc,gBAHL,UAMO,IAAvBsB,EAAYhH,QACa,IAAzBkH,EAAclH,QACM,IAApBqD,EAASrD,OARO,yCAUT0F,EAAc,gBAVL,UAYhBsB,IAAgBE,EAZA,yCAaTxB,EAAc,sBAbL,YAehBsB,EAAc,GAfE,yCAgBTtB,EAAc,wBAhBL,cAkBpBG,IAlBoB,oBAoBVrH,EAAQ,+BAEV,OACA,CAAE6I,aAAcL,EAAa3D,YAC7B,CACI4C,cAAc,GAAD,OAAKhI,EAAKf,SAzBf,QALpBiK,EAAiB,IACjBF,EAAe,IACf3D,EAAY,IAgCRsC,EAAW,mBA7BK,mDA+BhBF,EAAc,iBA/BE,2DAAH,qDAmCrB,OACI,sBAAKrF,UAAWC,IAAE4F,WAAlB,UACI,sBAAK7F,UAAWC,IAAE6F,aAAlB,UACI,qBACI9F,UACIO,IAAYwF,mBAAqB,IAAM9F,IAAE+F,YAFjD,SAKKpG,EAAmB,iBAAkBhC,EAAKL,gBAE/C,qBACIyC,UAAWC,IAAEgG,aACbpE,QAAS,kBAAMqD,EAAUV,eAF7B,SAII,cAAC,GAAD,CAAmBG,GAAG,eAG9B,qBACI3E,UAAWO,IAAY2B,kBAAoB,IAAMjC,IAAEE,YADvD,SAGKP,EAAmB,cAAehC,EAAKL,gBAE5C,uBACImC,MAAOiH,EACP7G,KAAK,WACLE,UAAWC,IAAEC,MACbE,SAAU,SAACV,GAAD,OAAWkH,EAAelH,EAAMY,OAAOZ,UAErD,qBACIM,UAAWO,IAAY2B,kBAAoB,IAAMjC,IAAEE,YADvD,SAGKP,EAAmB,kBAAmBhC,EAAKL,gBAEhD,uBACImC,MAAOmH,EACP/G,KAAK,WACLE,UAAWC,IAAEC,MACbE,SAAU,SAACV,GAAD,OAAWoH,EAAiBpH,EAAMY,OAAOZ,UAEvD,qBACIM,UAAWO,IAAY2B,kBAAoB,IAAMjC,IAAEE,YADvD,SAGKP,EAAmB,kBAAmBhC,EAAKL,gBAEhD,uBACImC,MAAOsD,EACPlD,KAAK,WACLE,UAAWC,IAAEC,MACbE,SAAU,SAACV,GAAD,OAAWuD,EAAYvD,EAAMY,OAAOZ,UAElD,qBACIM,UACIO,IAAY2B,kBACZ,KACoB,IAAnBoD,EAAQ3F,OAAeM,IAAEiG,SAAWjG,IAAEkG,aAJ/C,SAOKvG,EAAmBwF,GAAcE,EAAS1H,EAAKL,gBAEpD,sBAAKyC,UAAWC,IAAEmG,mBAAlB,UACI,qBACIpG,UAAWC,IAAEoG,gBACbxE,QAAS,kBAAMkF,KAFnB,SAIKhJ,EACG,qBAAKiC,UAAWC,IAAEqG,uBAAlB,SACI,cAAC,IAAD,CACIhF,MAAOZ,EAAaE,eACpB7C,SAAS,EACTgE,IAAK9B,IAAE+B,OACPC,KAAM,OAId,qBACIjC,UACIO,IAAY2B,kBACZ,IACAjC,IAAEsG,qBAJV,SAOK3G,EAAmB,OAAQhC,EAAKL,kBAI7C,qBACIyC,UAAWC,IAAEuG,kBACb3E,QAAS,kBAAMqD,EAAUV,eAF7B,SAII,qBACIxE,UACIO,IAAY2B,kBACZ,IACAjC,IAAEwG,uBAJV,SAOK7G,EAAmB,SAAUhC,EAAKL,yB,4BCpK9C0J,GAAa,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,MAAO9J,EAAuC,EAAvCA,KAAMiD,EAAiC,EAAjCA,OAAQX,EAAyB,EAAzBA,MAAOnC,EAAkB,EAAlBA,aACpD,OACI,sBAAKyC,UAAWC,KAAEkH,IAAlB,UACI,qBAAKnH,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YAAxD,SACKP,EAAmBsH,EAAO3J,KAE/B,uBACImC,MAAOA,EACPI,KAAK,QACLE,UAAWC,KAAEC,MACbE,SAAU,SAACV,GAAD,OAAWW,EAAO,CAACjD,OAAMsC,MAAOA,EAAMY,OAAOZ,eCV1D0H,GAAY,SAAC,GAAgE,IAA/DF,EAA8D,EAA9DA,MAAO9J,EAAuD,EAAvDA,KAAMiD,EAAiD,EAAjDA,OAAQX,EAAyC,EAAzCA,MAAO2H,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,GAAI/J,EAAkB,EAAlBA,aACnE,EAAsCO,mBAAS,MAA/C,mBAAOyJ,EAAP,KAAoBC,EAApB,KAEA/B,qBAAU,YACgB,mBAAV/F,GAAuBA,GAASA,EAAM+H,WAAW9H,OAAS,IAAgB,IAAVD,IAA4B,IAAVA,IAC1F8H,EAAe9H,KAEpB,CAACA,IAEJ,IAAMgI,EAAe,SAAC3I,GAClBsB,EAAO,CAACjD,OAAMsC,MAAOX,KAGzB,OACI,sBAAKiB,UAAWC,KAAEkH,IAAlB,UACI,qBAAKnH,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YAAxD,SACKP,EAAmBsH,EAAO3J,KAE/B,qBAAKyC,UAAWC,KAAE0H,aAAlB,SACKL,EACG,qBAAKtH,UAAWC,KAAE2H,YAAlB,gBACKP,QADL,IACKA,OADL,EACKA,EAAYQ,KAAI,SAACpI,EAAMqI,GAAP,OACb,sBAAiB9H,UAAWC,KAAE8H,aAAclG,QAAS,kBAAM6F,EAAajI,EAAKC,QAA7E,UACI,qBAAKM,UAAWuH,IAAgB9H,EAAKC,MAAQO,KAAE+H,YAAc/H,KAAEgI,OAC/D,qBAAKjI,UAAWC,KAAEiI,UAAlB,SACKtI,EAAmBH,EAAKyH,MAAO3J,OAH9BuK,QASlB,qCACA,qBAAK9H,UAAWC,KAAEkI,WAAlB,gBACKd,QADL,IACKA,OADL,EACKA,EAAYe,MAAM,EAAKf,EAAW1H,OAAS,IAAO,GAA2B,IAAtB0H,EAAW1H,OAAiB0H,EAAW1H,OAAO,EAAM0H,EAAW1H,OAAO,EAAI,GAAIkI,KAAI,SAACpI,EAAMqI,GAAP,OACtI,sBAAiB9H,UAAWC,KAAE8H,aAAclG,QAAS,kBAAM6F,EAAajI,EAAKC,QAA7E,UACI,qBAAKM,UAAWuH,IAAgB9H,EAAKC,MAAQO,KAAE+H,YAAc/H,KAAEgI,OAC/D,qBAAKjI,UAAWC,KAAEiI,UAAlB,SACKtI,EAAmBH,EAAKyH,MAAO3J,OAH9BuK,QAQlB,qBAAK9H,UAAWC,KAAEkI,WAAlB,gBACKd,QADL,IACKA,OADL,EACKA,EAAYe,MAAQf,EAAW1H,OAAS,IAAO,GAA2B,IAAtB0H,EAAW1H,OAAiB0H,EAAW1H,OAAO,EAAM0H,EAAW1H,OAAO,EAAI,EAAI0H,EAAW1H,QAAQkI,KAAI,SAACpI,EAAMqI,GAAP,OACtJ,sBAAiB9H,UAAWC,KAAE8H,aAAclG,QAAS,kBAAM6F,EAAajI,EAAKC,QAA7E,UACI,qBAAKM,UAAWuH,IAAgB9H,EAAKC,MAAQO,KAAE+H,YAAc/H,KAAEgI,OAC/D,qBAAKjI,UAAWC,KAAEiI,UAAlB,SACKtI,EAAmBH,EAAKyH,MAAO3J,OAH9BuK,iBC5CzBO,GAAW,SAAC,GAAgE,IAA/DnB,EAA8D,EAA9DA,MAAO9J,EAAuD,EAAvDA,KAAMiD,EAAiD,EAAjDA,OAAQX,EAAyC,EAAzCA,MAAO2H,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,GAAI/J,EAAkB,EAAlBA,aAClE,EAAgCO,mBAAS,IAAzC,mBAAOwK,EAAP,KAAiBC,EAAjB,KAEA9C,qBAAU,WACF/F,GAASA,EAAMC,OAAS,GACxB4I,EAAY7I,KAEjB,CAACA,IAEJ,IAAM8I,EAAa,SAACzJ,GAChB,IAAI0J,EAAQ/I,EACR+I,IAAkC,IAAzBA,EAAMC,QAAQ3J,GACvB0J,EAAME,OAAOF,EAAMC,QAAQ3J,GAAO,IAElC0J,EAAQA,EAAK,uBAAOA,GAAP,CAAc1J,IAAQ,CAACA,GACpC0J,EAAK,aAAO,IAAIG,IAAIH,KAExBpI,EAAO,CAACjD,OAAMsC,MAAO+I,KAGzB,OACI,sBAAKzI,UAAWC,KAAEkH,IAAlB,UACI,qBAAKnH,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YAAxD,SACKP,EAAmBsH,EAAO3J,KAE/B,qBAAKyC,UAAWC,KAAE0H,aAAlB,SACKL,EACG,qBAAKtH,UAAWC,KAAE2H,YAAlB,gBACKP,QADL,IACKA,OADL,EACKA,EAAYQ,KAAI,SAACpI,EAAMqI,GAAP,OACb,sBAAiB9H,UAAWC,KAAE4I,eAAgBhH,QAAS,kBAAM2G,EAAW/I,EAAKC,QAA7E,UACI,qBAAKM,WAA6C,IAAlCsI,EAASI,QAAQjJ,EAAKC,OAAgBO,KAAE6I,WAAa7I,KAAE8I,MACvE,qBAAK/I,UAAWC,KAAEiI,UAAlB,SACKtI,EAAmBH,EAAKyH,MAAO3J,OAH9BuK,QASlB,qCACA,qBAAK9H,UAAWC,KAAEkI,WAAlB,gBACKd,QADL,IACKA,OADL,EACKA,EAAYe,MAAM,EAAGf,EAAW1H,OAAO,EAAI,GAAGkI,KAAI,SAACpI,EAAMqI,GAAP,OAC/C,sBAAiB9H,UAAWC,KAAE4I,eAAgBhH,QAAS,kBAAM2G,EAAW/I,EAAKC,QAA7E,UACI,qBAAKM,WAA6C,IAAlCsI,EAASI,QAAQjJ,EAAKC,OAAgBO,KAAE6I,WAAa7I,KAAE8I,MACvE,qBAAK/I,UAAWC,KAAEiI,UAAlB,SACKtI,EAAmBH,EAAKyH,MAAO3J,OAH9BuK,QAQlB,qBAAK9H,UAAWC,KAAEkI,WAAlB,gBACKd,QADL,IACKA,OADL,EACKA,EAAYe,MAAMf,EAAW1H,OAAO,EAAI,EAAG0H,EAAW1H,QAAQkI,KAAI,SAACpI,EAAMqI,GAAP,OAC/D,sBAAiB9H,UAAWC,KAAE4I,eAAgBhH,QAAS,kBAAM2G,EAAW/I,EAAKC,QAA7E,UACI,qBAAKM,WAA6C,IAAlCsI,EAASI,QAAQjJ,EAAKC,OAAgBO,KAAE6I,WAAa7I,KAAE8I,MACvE,qBAAK/I,UAAWC,KAAEiI,UAAlB,SACKtI,EAAmBH,EAAKyH,MAAO3J,OAH9BuK,iB,oBChDzBkB,GAAY,SAAC,GAAkD,IAAhD9B,EAA+C,EAA/CA,MAAO9J,EAAwC,EAAxCA,KAAMiD,EAAkC,EAAlCA,OAAQX,EAA0B,EAA1BA,MAAOnC,EAAmB,EAAnBA,aACpD,OACI,sBAAKyC,UAAWC,KAAEkH,IAAlB,UACI,qBACInH,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YADvD,SAGKP,EAAmBsH,EAAO3J,KAE/B,cAAC0L,GAAA,EAAD,CACIvJ,MAAOA,EACPU,SAAU,SAAC8I,GACP7I,EAAO,CAAEjD,OAAMsC,MAAOwJ,KAE1BC,YAAa,SAACC,GAAD,OACT,cAACC,GAAA,EAAD,2BACQD,GADR,IAEIE,GAAI,CACAC,UAAW,GACX3E,OAAQ,GACR4E,cAAe,MACfC,QAAS,OACTC,aAAc,IACdC,gBAAiBjJ,EAAaS,gBAC9ByI,YAAalJ,EAAaU,YAAYE,MACtCuI,YAAanJ,EAAaU,YAAYC,MACtCA,MAAO,QAEXyI,WAAY,CACRC,kBAAkB,EAClBC,UAAU,EACVnG,MAAO,CACHvC,MAAOZ,EAAaa,eACpBF,MAAO,OACP4I,WAAY,EACZP,aAAc,GACdE,YAAalJ,EAAaU,YAAYE,MACtCuI,YAAanJ,EAAaU,YAAYC,kB,UCpCzD6I,GAAgB,SAAC,GAOvB,IANHhD,EAME,EANFA,MACA9J,EAKE,EALFA,KACAiD,EAIE,EAJFA,OACAX,EAGE,EAHFA,MACAyK,EAEE,EAFFA,UACA5M,EACE,EADFA,aAQA,OANAkI,qBAAU,WACA/F,IAASA,EAAMC,SAAWwK,GAC5B9J,EAAO,CAAEjD,OAAMsC,MAAO,IAAI0K,SAE/B,IAGC,sBAAKpK,UAAWC,KAAEkH,IAAlB,UACI,qBACInH,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YADvD,SAGKP,EAAmBsH,EAAO3J,KAE/B,cAAC8M,GAAA,EAAD,CACI3K,MAAOA,GAAgB,GACvBU,SAAU,SAAC8I,GACP7I,EAAO,CAAEjD,OAAMsC,MAAOwJ,KAE1BC,YAAa,SAACC,GAAD,OACT,cAACC,GAAA,EAAD,2BACQD,GADR,IAEIE,GAAI,CACAC,UAAW,GACX3E,OAAQ,GACR4E,cAAe,MACfC,QAAS,OACTC,aAAc,IACdC,gBAAiBjJ,EAAaS,gBAC9BE,MAAO,OACPuI,YAAalJ,EAAaU,YAAYE,MACtCuI,YAAanJ,EAAaU,YAAYC,OAE1CyI,WAAY,CACRC,kBAAkB,EAClBC,UAAU,EACVnG,MAAO,CACHvC,MAAOZ,EAAaa,eACpBF,MAAO,OACP4I,WAAY,EACZP,aAAc,GACdE,YAAalJ,EAAaU,YAAYE,MACtCuI,YAAanJ,EAAaU,YAAYC,kB,4BCjDvDiJ,G,QALHC,EAAMC,OAAO,CACrBC,QAAS/M,ICFAgN,GAAb,0FACI,SAAW7L,GACP,GAAwB,MAApBA,EAASI,QAAuC,MAApBJ,EAASI,OACrC,MAAM,IAAIC,MAAML,EAASM,SAAW,kGAExC,OAAON,IALf,oEAQI,WAA6B8L,EAAO9N,GAApC,kGAE+B,IAAI+N,SAFnC,cAEcC,EAFd,QAGiBC,OAAO,QAASH,GAHjC,SAIkCL,GAAIS,KAAJ,oBAA8BF,EAAU,CAACpM,QAAS,CAAC,cAAkB5B,KAJvG,cAIcmO,EAJd,iBAKqBC,KAAKC,IAAIF,GAL9B,iFAOc,IAAI9L,MAAM,KAAIC,SAAW,kGAPvC,0DARJ,6HAmBI,WAA6BgM,EAAMtO,GAAnC,kGAE+B,IAAI+N,SAFnC,cAEcC,EAFd,QAGiBC,OAAO,OAAQK,GAHhC,SAIkCb,GAAIS,KAAJ,oBAA8BF,EAAU,CAACpM,QAAS,CAAC,cAAkB5B,KAJvG,cAIcmO,EAJd,iBAKqBC,KAAKC,IAAIF,GAL9B,iFAOc,IAAI9L,MAAM,KAAIC,SAAW,kGAPvC,0DAnBJ,gECSaiM,GAAY,SAAC,GAAgD,IAA/ClE,EAA8C,EAA9CA,MAAO9J,EAAuC,EAAvCA,KAAMiD,EAAiC,EAAjCA,OAAQX,EAAyB,EAAzBA,MAAOnC,EAAkB,EAAlBA,aAC7CK,EAAOC,qBAAWlB,GACxB,EAA8CgB,IAAvCQ,EAAP,EAAOA,QACP,GADA,EAAgBF,MAAhB,EAAuBmB,WAAvB,EAAmCrB,QACPD,mBAAS,WAArC,mBAAOmB,EAAP,KAAekE,EAAf,KACA,EAAgCrF,oBAAS,GAAzC,mBAAOuN,EAAP,KAAiBC,EAAjB,KACA,EAAsCxN,oBAAS,GAA/C,mBAAoByN,GAApB,WACA,EAA4BzN,oBAAS,GAArC,mBAAOkE,EAAP,KAAekB,EAAf,KAEAuC,qBAAU,WACF/F,GAASA,EAAMC,OAAS,EAAGwD,EAAU,UACpCA,EAAU,YAChB,CAACzD,IAEJ,IAAM8L,EAAU,uCAAG,sBAAAlN,EAAA,+EAELH,EAAQ,qBAAsB,OAAQ,CAACE,IAAKqB,GAAQ,CACtDkG,cAAc,GAAD,OAAKhI,EAAKf,SAHhB,OAKXwD,EAAO,CAACjD,OAAMsC,MAAO,KALV,uGAAH,qDASV+L,EAAQ,uCAAG,WAAOC,GAAP,iBAAApN,EAAA,yDACE,WAAXW,EADS,gCAEHuM,IAFG,gCAGF,MAHE,cAKbtI,GAAU,GACVoI,GAAY,GACZC,GAAe,GAPF,SASHI,EAAQD,EAAMpL,OAAOqL,MAAM,GATxB,UAUWjB,GAAYkB,gBAAgBD,EAAO/N,EAAKf,OAVnD,QAUHkC,EAVG,OAU2DA,KACpEuM,GAAY,GACZO,YAAW,kBAAMP,GAAY,KAAQ,MACrCjL,EAAO,CAACjD,OAAMsC,MAAOX,IACrBmE,GAAU,GAdD,kDAgBTqI,GAAe,GACfrI,GAAU,GAjBD,0DAAH,sDAqBd,OACI,sBAAKlD,UAAWC,KAAEkH,IAAlB,UACI,qBAAKnH,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YAAxD,SACKP,EAAmBsH,EAAO3J,KAE/B,sBAAKyC,UAAWC,KAAE6L,UAAlB,UACI,uBACIpM,MAAOA,EACPI,KAAK,OACLE,UAAWC,KAAE8L,aAEjB,qBAAK/L,UAAWC,KAAE+L,YAAanK,QAAS,kBAAM4J,KAA9C,SACKzJ,EACG,cAAC,IAAD,CAAYV,MAAOZ,EAAaE,eAAgB7C,SAAS,EAAMgE,IAAK9B,KAAE+B,OAAQC,KAAM,KAEzE,WAAXhD,EACI,qCACI,uBAAOe,UAAWC,KAAEgM,KAAMnM,KAAK,OAAO1C,KAAK,UAAUgD,SAAU,SAACsL,GAAD,OAAWD,EAASC,MACnF,cAAC,GAAD,CAAmB/G,GAAI0G,EAAW,KAAO,cAG7C,mCACI,cAAC,GAAD,CAAmB1G,GAAI0G,EAAW,KAAO,sBChE5Da,GAAa,SAAC,GAAgD,IAA/ChF,EAA8C,EAA9CA,MAAO9J,EAAuC,EAAvCA,KAAMiD,EAAiC,EAAjCA,OAAQX,EAAyB,EAAzBA,MAAOnC,EAAkB,EAAlBA,aAC9CK,EAAOC,qBAAWlB,GACxB,EAA8CgB,IAAvCQ,EAAP,EAAOA,QACP,GADA,EAAgBF,MAAhB,EAAuBmB,WAAvB,EAAmCrB,QACPD,mBAAS,WAArC,mBAAOmB,EAAP,KAAekE,EAAf,KACA,EAAgCrF,oBAAS,GAAzC,mBAAOuN,EAAP,KAAiBC,EAAjB,KACA,EAAsCxN,oBAAS,GAA/C,mBAAoByN,GAApB,WACA,EAA4BzN,oBAAS,GAArC,mBAAOkE,EAAP,KAAekB,EAAf,KAEAuC,qBAAU,WACF/F,GAASA,EAAMC,OAAS,EAAGwD,EAAU,UACpCA,EAAU,YAChB,CAACzD,IAEJ,IAAM8L,EAAU,uCAAG,sBAAAlN,EAAA,+EAELH,EAAQ,qBAAsB,OAAQ,CAACE,IAAKqB,GAAQ,CACtDkG,cAAc,GAAD,OAAKhI,EAAKf,SAHhB,OAKXwD,EAAO,CAACjD,OAAMsC,MAAO,KALV,uGAAH,qDASV+L,EAAQ,uCAAG,WAAOC,GAAP,iBAAApN,EAAA,yDACE,WAAXW,EADS,gCAEHuM,IAFG,gCAGF,MAHE,cAKbtI,GAAU,GACVoI,GAAY,GACZC,GAAe,GAPF,SASHI,EAAQD,EAAMpL,OAAOqL,MAAM,GATxB,UAUWjB,GAAYyB,gBAAgBR,EAAO/N,EAAKf,OAVnD,QAUHkC,EAVG,OAU2DA,KACpEuM,GAAY,GACZO,YAAW,kBAAMP,GAAY,KAAQ,MACrCjL,EAAO,CAACjD,OAAMsC,MAAOX,IACrBmE,GAAU,GAdD,kDAgBTqI,GAAe,GACfrI,GAAU,GAjBD,0DAAH,sDAqBd,OACI,sBAAKlD,UAAWC,KAAEkH,IAAlB,UACI,qBAAKnH,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YAAxD,SACKP,EAAmBsH,EAAO3J,KAE/B,sBAAKyC,UAAWC,KAAE6L,UAAlB,UACI,uBACIpM,MAAOA,EACPI,KAAK,OACLE,UAAWC,KAAE8L,aAEjB,qBAAK/L,UAAWC,KAAE+L,YAAanK,QAAS,kBAAM4J,KAA9C,SACKzJ,EACG,cAAC,IAAD,CAAYV,MAAOZ,EAAaE,eAAgB7C,SAAS,EAAMgE,IAAK9B,KAAE+B,OAAQC,KAAM,KAEzE,WAAXhD,EACI,qCACI,uBAAOe,UAAWC,KAAEgM,KAAMnM,KAAK,OAAO1C,KAAK,UAAUgD,SAAU,SAACsL,GAAD,OAAWD,EAASC,MACnF,cAAC,GAAD,CAAmB/G,GAAI0G,EAAW,KAAO,cAG7C,mCACI,cAAC,GAAD,CAAmB1G,GAAI0G,EAAW,KAAO,sBCxE5De,GAAY,SAAC,GAAgD,IAA/ClF,EAA8C,EAA9CA,MAAO9J,EAAuC,EAAvCA,KAAMiD,EAAiC,EAAjCA,OAAQX,EAAyB,EAAzBA,MAAOnC,EAAkB,EAAlBA,aACnD,OACI,qCACI,qBAAKyC,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YAAxD,SACKP,EAAmBsH,EAAO3J,KAE/B,0BACI8O,KAAK,KACLC,KAAK,KACL5M,MAAOA,EACPM,UAAWC,KAAEsM,WACbnM,SAAU,SAACV,GAAD,OAAWW,EAAO,CAACjD,OAAMsC,MAAOA,EAAMY,OAAOZ,eCV1D8M,GAAQ,SAAC,GAKf,IAJHC,EAIE,EAJFA,UACAlP,EAGE,EAHFA,aACAmP,EAEE,EAFFA,YAEE,IADFC,gBACE,MADS,EACT,EASF,OACI,qBAAK3M,UAAWC,KAAE2M,gBAAlB,SACI,sBACI5M,UAAWC,KAAE4M,uBACbhL,QAAS,kBAZD,WAChB,IAAIiL,EAAeH,EAAW,EAC1BG,EAAeL,EAAU9M,OAAS,IAClCmN,EAAe,GAEnBJ,EAAYD,EAAUK,GAAcC,MAObzP,IAFnB,UAII,qBACI0C,UACIO,IAAY2B,kBAAoB,IAAMjC,KAAE+M,eAFhD,SAKKP,EACK7M,EACI6M,EAAUE,GAAUvP,KACpBG,GAEJ,KAEV,cAAC,GAAD,CAAmBoH,GAAG,qBC/BzBsI,GAAuB,SAAC,GAQ9B,IAPH/F,EAOE,EAPFA,MACA9J,EAME,EANFA,KACAiD,EAKE,EALFA,OACAX,EAIE,EAJFA,MACA+M,EAGE,EAHFA,UACAlP,EAEE,EAFFA,aACA2P,EACE,EADFA,KAEA,EAAgCpP,mBAAQ,OACpC2O,QADoC,IACpCA,OADoC,EACpCA,EAAW5E,KAAI,SAACpI,GAAD,MAAW,CAAEpC,SAAUoC,EAAKsN,KAAMrN,MAAO,QAD5D,mBAAO4I,EAAP,KAAiBC,EAAjB,KAGA,EAAgCzK,mBAASoP,GAAzC,mBAAOP,EAAP,KAAiBD,EAAjB,KAEAjH,qBAAU,WACF/F,GAASA,EAAMC,OAAS,EACxB4I,EAAY7I,GAEH,OAAT+M,QAAS,IAATA,KAAW5E,KAAI,SAACpI,GAAD,MAAW,CAAEpC,SAAUoC,EAAKsN,KAAMrN,MAAO,SAE7D,CAACA,IAeJ,OACI,qCACI,sBAAKM,UAAWC,KAAEkN,oBAAlB,UACI,qBACInN,UACIO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YAFhD,SAKKP,EAAmBsH,EAAO3J,KAE/B,cAAC,GAAD,CACIkP,UAAWA,EACXlP,aAAcA,EACdmP,YAAaA,EACbC,SAAUF,EAAUW,WAChB,SAAC3N,GAAD,OAAUA,EAAKsN,OAASJ,UAIpC,0BACIN,KAAK,KACLC,KAAK,KACL5M,OACY,OAAR4I,QAAQ,IAARA,OAAA,EAAAA,EAAU9I,MAAK,SAACC,GAAD,OAAUA,EAAKpC,WAAasP,MAA3C,OACMrE,QADN,IACMA,OADN,EACMA,EAAU9I,MAAK,SAACC,GAAD,OAAUA,EAAKpC,WAAasP,KACtCjN,MACL,GAEVM,UAAWC,KAAEsM,WACbnM,SAAU,SAACV,GAAD,OA1CJ,SAACA,GACf,IAAI2N,EAAe/E,EACbgF,EAAUD,EAAaD,WACzB,SAAC3N,GAAD,OAAUA,EAAKpC,WAAasP,MAEf,IAAbW,EACAD,EAAaE,KAAK,CAAElQ,SAAUsP,EAAUjN,UAExC2N,EAAaC,GAAS5N,MAAQA,EAElCW,EAAO,CAAEjD,OAAMsC,MAAO2N,IAgCOG,CAAU9N,EAAMY,OAAOZ,cC3D/C+N,GAAuB,SAAC,GAQ9B,IAPHvG,EAOE,EAPFA,MACA9J,EAME,EANFA,KACAiD,EAKE,EALFA,OACAX,EAIE,EAJFA,MACA+M,EAGE,EAHFA,UACAlP,EAEE,EAFFA,aACA2P,EACE,EADFA,KAEMtP,EAAOC,qBAAWlB,GACxB,EAAgDgB,IAAxCQ,EAAR,EAAQA,QACR,GADA,EAAiBF,MAAjB,EAAwBmB,WAAxB,EAAoCrB,QACRD,mBAAS,WAArC,mBAAOmB,EAAP,KAAekE,EAAf,KACA,EAAgCrF,oBAAS,GAAzC,mBAAOuN,EAAP,KAAiBC,EAAjB,KACA,EAAsCxN,oBAAS,GAA/C,mBAAoByN,GAApB,WACA,EAA4BzN,oBAAS,GAArC,mBAAOkE,EAAP,KAAekB,EAAf,KACA,EAAgCpF,mBAAQ,OACpC2O,QADoC,IACpCA,OADoC,EACpCA,EAAW5E,KAAI,SAACpI,GAAD,MAAW,CAAEpC,SAAUoC,EAAKsN,KAAMrN,MAAO,QAD5D,mBAAO4I,EAAP,KAAiBC,EAAjB,KAGA,EAAgCzK,mBAASoP,GAAzC,mBAAOP,EAAP,KAAiBD,EAAjB,KAEMgB,EAAa,SAACC,GAEhB,IADAA,EAAWA,GAAsBjO,IACjBiO,EAAShO,OAAS,EAAG,CACjC4I,EAAYoF,GACZ,IAAML,EAAUK,EAASP,WACrB,SAAC3N,GAAD,OAAUA,EAAKpC,WAAasP,MAGf,IAAbW,GACAK,EAASL,GAAS5N,OAClBiO,EAASL,GAAS5N,MAAMC,OAAS,EAEjCwD,EAAU,UACTA,EAAU,eAEfoF,EAAW,OACPkE,QADO,IACPA,OADO,EACPA,EAAW5E,KAAI,SAACpI,GAAD,MAAW,CAAEpC,SAAUoC,EAAKsN,KAAMrN,MAAO,SAKpE+F,qBAAU,WACNiI,MACD,CAAChO,IAEJ,IAQM8N,EAAY,SAAC9N,GACf,IAAI2N,EAAe/E,EACbgF,EAAUD,EAAaD,WACzB,SAAC3N,GAAD,OAAUA,EAAKpC,WAAasP,MAEf,IAAbW,EACAD,EAAaE,KAAK,CAAElQ,SAAUsP,EAAUjN,UAExC2N,EAAaC,GAAS5N,MAAQA,EAElCW,EAAO,CAAEjD,OAAMsC,MAAO2N,IACtBnK,GAAU,GACVqI,GAAe,GACfmC,EAAWL,IAGT7B,EAAU,uCAAG,4BAAAlN,EAAA,sEAELgP,EAAUhF,EAAS8E,WACrB,SAAC3N,GAAD,OAAUA,EAAKpC,WAAasP,KAHrB,SAKLxO,EAAQ,qBAEV,OACA,CAAEE,IAAKqB,EAAM4N,GAAS5N,OACtB,CACIkG,cAAc,GAAD,OAAKhI,EAAKf,SAVpB,OAaX2Q,EAAU,IAbC,uGAAH,qDAiBV/B,EAAQ,uCAAG,WAAOC,GAAP,iBAAApN,EAAA,yDACE,WAAXW,EADS,gCAEHuM,IAFG,gCAGF,MAHE,cAKbtI,GAAU,GACVoI,GAAY,GACZC,GAAe,GAPF,SASHI,EAAQD,EAAMpL,OAAOqL,MAAM,GATxB,UAUWjB,GAAYkB,gBAAgBD,EAAO/N,EAAKf,OAVnD,QAUHkC,EAVG,OAWJA,KACLuM,GAAY,GACZO,YAAW,kBAAMP,GAAY,KAAQ,MACrCkC,EAAUzO,GACVmE,GAAU,GAfD,kDAiBTqI,GAAe,GACfrI,GAAU,GAlBD,0DAAH,sDAsBd,OACI,sBAAKlD,UAAWC,KAAEkH,IAAlB,UACI,sBAAKnH,UAAWC,KAAEkN,oBAAlB,UACI,qBACInN,UACIO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YAFhD,SAKKP,EAAmBsH,EAAO3J,KAE/B,cAAC,GAAD,CACIkP,UAAWA,EACXlP,aAAcA,EACdmP,YA5ES,SAACkB,GACtBlB,EAAYkB,GACZ,IAAMC,EAAE,OAAGvF,QAAH,IAAGA,OAAH,EAAGA,EAAU9I,MAAK,SAACC,GAAD,OAAUA,EAAKpC,WAAauQ,KAClDC,GAAMA,EAAGnO,OAASmO,EAAGnO,MAAMC,OAAS,EAAGwD,EAAU,UAChDA,EAAU,UACfmI,GAAY,IAwEAqB,SAAUF,EAAUW,WAChB,SAAC3N,GAAD,OAAUA,EAAKsN,OAASJ,UAIpC,sBAAK3M,UAAWC,KAAE6L,UAAlB,UACI,uBACIpM,OACY,OAAR4I,QAAQ,IAARA,OAAA,EAAAA,EAAU9I,MAAK,SAACC,GAAD,OAAUA,EAAKpC,WAAasP,MAA3C,OACMrE,QADN,IACMA,OADN,EACMA,EAAU9I,MACN,SAACC,GAAD,OAAUA,EAAKpC,WAAasP,KAC9BjN,MACF,GAEVI,KAAK,OACLE,UAAWC,KAAE8L,aAEjB,qBACI/L,UAAWC,KAAE+L,YACbnK,QAAS,kBAAM4J,EAASkB,IAF5B,SAIK3K,EACG,cAAC,IAAD,CACIV,MAAOZ,EAAaE,eACpB7C,SAAS,EACTgE,IAAK9B,KAAE+B,OACPC,KAAM,KAEC,WAAXhD,EACA,qCACI,uBACIe,UAAWC,KAAEgM,KACbnM,KAAK,OACL1C,KAAK,UACLgD,SAAU,SAACsL,GAAD,OAAWD,EAASC,MAElC,cAAC,GAAD,CACI/G,GAAI0G,EAAW,KAAO,cAI9B,mCACI,cAAC,GAAD,CACI1G,GAAI0G,EAAW,KAAO,sBC1KzCyC,GAAwB,SAAC,GAQ/B,IAPH5G,EAOE,EAPFA,MACA9J,EAME,EANFA,KACAiD,EAKE,EALFA,OACAX,EAIE,EAJFA,MACA+M,EAGE,EAHFA,UACAlP,EAEE,EAFFA,aACA2P,EACE,EADFA,KAEA,EAAgCpP,mBAAQ,OACpC2O,QADoC,IACpCA,OADoC,EACpCA,EAAW5E,KAAI,SAACpI,GAAD,MAAW,CAAEpC,SAAUoC,EAAKsN,KAAMrN,MAAO,QAD5D,mBAAO4I,EAAP,KAAiBC,EAAjB,KAGA,EAAgCzK,mBAASoP,GAAzC,mBAAOP,EAAP,KAAiBD,EAAjB,KAEAjH,qBAAU,WACF/F,GAASA,EAAMC,OAAS,EACxB4I,EAAY7I,GAEZ6I,EAAW,OACPkE,QADO,IACPA,OADO,EACPA,EAAW5E,KAAI,SAACpI,GAAD,MAAW,CAAEpC,SAAUoC,EAAKsN,KAAMrN,MAAO,UAGjE,CAACA,IAeJ,OACI,sBAAKM,UAAWC,KAAEkH,IAAlB,UACI,sBAAKnH,UAAWC,KAAEkN,oBAAlB,UACI,qBACInN,UACIO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YAFhD,SAKKP,EAAmBsH,EAAO3J,KAE/B,cAAC,GAAD,CACIkP,UAAWA,EACXlP,aAAcA,EACdmP,YAAaA,EACbC,SAAUF,EAAUW,WAChB,SAAC3N,GAAD,OAAUA,EAAKsN,OAASJ,UAIpC,uBACIjN,OACY,OAAR4I,QAAQ,IAARA,OAAA,EAAAA,EAAU9I,MAAK,SAACC,GAAD,OAAUA,EAAKpC,WAAasP,MAA3C,OACMrE,QADN,IACMA,OADN,EACMA,EAAU9I,MAAK,SAACC,GAAD,OAAUA,EAAKpC,WAAasP,KACtCjN,MACL,GAEVI,KAAK,QACLE,UAAWC,KAAEC,MACbE,SAAU,SAACV,GAAD,OAzCJ,SAACA,GACf,IAAI2N,EAAe/E,EACbgF,EAAUD,EAAaD,WACzB,SAAC3N,GAAD,OAAUA,EAAKpC,WAAasP,MAEf,IAAbW,EACAD,EAAaE,KAAK,CAAElQ,SAAUsP,EAAUjN,UAExC2N,EAAaC,GAAS5N,MAAQA,EAElCW,EAAO,CAAEjD,OAAMsC,MAAO2N,IA+BOG,CAAU9N,EAAMY,OAAOZ,cCpE/CqO,GAAoB,SAAC,GAO3B,IANHC,EAME,EANFA,OACA3N,EAKE,EALFA,OACAX,EAIE,EAJFA,MACAnC,EAGE,EAHFA,aACA2P,EAEE,EAFFA,KACAT,EACE,EADFA,UAEA,OACI,sBAAKzM,UAAWC,KAAEgO,aAAlB,UACI,qBAAKjO,UAAWC,KAAEiO,YAAlB,SACKC,GAAU,CACPjB,OACA3P,eACAkC,KAAMuO,EAAO,GACb3N,OAAQA,EACRX,MAAOA,EACP0O,gBAAiB3B,EACjBnF,IAAI,MAGZ,qBAAKtH,UAAWC,KAAEiO,YAAlB,SACKC,GAAU,CACPjB,OACA3P,eACAkC,KAAMuO,EAAO,GACb3N,OAAQA,EACRX,MAAOA,EACP0O,gBAAiB3B,EACjBnF,IAAI,UCtBX+G,GAA2B,SAAC,GAOlC,IANHnH,EAME,EANFA,MACA9J,EAKE,EALFA,KACAiD,EAIE,EAJFA,OACAX,EAGE,EAHFA,MACA4O,EAEE,EAFFA,aACA/Q,EACE,EADFA,aAEMK,EAAOC,qBAAWlB,GACxB,EAAgCmB,mBAAS,IAAzC,mBAAOwK,EAAP,KAAiBC,EAAjB,KACA,EAAoCzK,mBAAS,IAA7C,mBAAOuJ,EAAP,KAAmBkH,EAAnB,KACA,EAAgD5Q,IAAxCQ,EAAR,EAAQA,QAA4BJ,GAApC,EAAiBE,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SAE9ByQ,EAAY,uCAAG,4BAAAlQ,EAAA,+EAEQH,EAAQ,mBAAD,OACLmQ,GACnB,MACA,KACA,CACI1I,cAAehI,EAAKf,QAPf,OAEP4R,EAFO,OAUbF,EAAc,aAAIE,IAVL,uGAAH,qDAclBhJ,qBAAU,WACN+I,MACD,IAEH/I,qBAAU,WACF/F,GAASA,EAAMC,OAAS,GACxB4I,EAAY7I,KAEjB,CAACA,IAEJ,IAoBMgP,EAAa,SAAC3P,EAAMmK,EAAUyF,EAAc1P,GAC9C,IAAI2P,EAAWlP,EACfkP,EAASD,GAAc1P,GAAUiK,EACjC7I,EAAO,CAAEjD,OAAMsC,MAAOkP,KAG1B,OACI,sBAAK5O,UAAWC,KAAEkH,IAAlB,UACI,qBACInH,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YADvD,SAGKP,EAAmBsH,EAAO3J,KAE/B,qBAAKyC,UAAWC,KAAE0H,aAAlB,SACI,qBAAK3H,UAAWC,KAAE2H,YAAlB,SACK7J,EACG,qBAAKiC,UAAWC,KAAE4O,cAAlB,SACI,cAAC,IAAD,CACIvN,MAAOZ,EAAaE,eACpB7C,SAAS,EACTgE,IAAK9B,KAAE+B,OACPC,KAAM,OANV,OAUJoF,QAVI,IAUJA,OAVI,EAUJA,EAAYQ,KAAI,SAACpI,EAAMqI,GACnB,IAAI6G,EAAerG,EAAS8E,WACxB,SAACS,GAAD,OAAQA,EAAGiB,YAAcrP,EAAKsP,OAElC,OACI,gCACI,sBAEI/O,UAAWC,KAAE4I,eACbhH,QAAS,kBAtD1B,SAAC9C,EAAM4P,GACtB,IAAIlG,EAAQ/I,EACZ,IAAsB,IAAlBiP,EACAlG,EAAME,OAAOgG,EAAc,OACxB,CACH,IAAIK,EAAW,IAAI5E,KACnB4E,EAASC,SAASD,EAASE,WAAa,GACxCzG,EAAK,uBACEA,GADF,CAED,CACIqG,UAAW/P,EAAKgQ,IAChBI,WAAY,IAAI/E,KAChB4E,SAAUA,KAKtB3O,EAAO,CAAEjD,OAAMsC,MAAO+I,IAsCcD,CAAW/I,EAAMkP,IAJzB,UAOI,qBACI3O,WACsB,IAAlB2O,EACM1O,KAAE6I,WACF7I,KAAE8I,MAGhB,qBAAK/I,UAAWC,KAAEiI,UAAlB,SACK5I,EACGG,EAAKyH,MACLtJ,EAAKP,cAhBRyK,IAoBU,IAAlB6G,EACG,sBAAK3O,UAAWC,KAAEmP,aAAlB,UACI,qBACIpP,UACIO,IAAY2B,kBACZ,IACAjC,KAAEoP,QAJV,SAOKzP,EACG,OACArC,KAGR,cAAC0L,GAAA,EAAD,CACIvJ,MACI4I,EAASqG,GACJQ,WAET/O,SAAU,SAAC8I,GACPwF,EACIjP,EACAyJ,EACAyF,EACA,eAGRxF,YAAa,SAACC,GAAD,OACT,cAACC,GAAA,EAAD,2BACQD,GADR,IAEIE,GAAI,CACAC,UAAW,GACX3E,OAAQ,GACR4E,cACI,MACJC,QAAS,OACTC,aAAc,IACdC,gBACI,UACJtI,MAAO,MACPuI,YAAa,OAEjBE,WAAY,CACRC,kBAAkB,EAClBC,UAAU,EACVnG,MAAO,CACHvC,MAAO,OAEP2I,WAAY,EACZP,aAAc,GACdE,YACI,cAMxB,qBACI5J,UACIO,IAAY2B,kBACZ,IACAjC,KAAEoP,QAJV,SAOKzP,EACG,KACArC,KAGR,cAAC0L,GAAA,EAAD,CACIvJ,MACI4I,EAASqG,GACJK,SAET5O,SAAU,SAAC8I,GACPwF,EACIjP,EACAyJ,EACAyF,EACA,aAGRxF,YAAa,SAACC,GAAD,OACT,cAACC,GAAA,EAAD,2BACQD,GADR,IAEIE,GAAI,CACAC,UAAW,GACX3E,OAAQ,GACR4E,cACI,MACJC,QAAS,OACTC,aAAc,IACdC,gBACI,UACJtI,MAAO,MACPuI,YAAa,OAEjBE,WAAY,CACRC,kBAAkB,EAClBC,UAAU,EACVnG,MAAO,CACHvC,MAAO,OACPD,MAAO,OACP4I,WAAY,EACZP,aAAc,GACdE,YACI,iBAO5B,mBCnO3B0F,GAAgB,SAAC,GASvB,IAAD,EARFC,EAQE,EARFA,OACAC,EAOE,EAPFA,iBACAnP,EAME,EANFA,OACAX,EAKE,EALFA,MACA+P,EAIE,EAJFA,QACAlS,EAGE,EAHFA,aACA2P,EAEE,EAFFA,KACAT,EACE,EADFA,UAEA,EAAgC3O,mBAAS,GAAzC,mBAAO6O,EAAP,KAAiBD,EAAjB,KACA,OACI,qCACI,qBAAK1M,UAAWC,KAAEyP,WAAlB,gBACKH,QADL,IACKA,OADL,EACKA,EAAQ1H,KAAI,SAACpI,EAAMqI,GAAP,OACT,qBACIjG,QAAS,kBAAM6K,EAAY5E,IAC3B9H,UACIC,KAAE0P,iBACDhD,IAAa7E,EACR,IAAM7H,KAAE2P,uBACR,IANd,SASKhQ,EAAmBH,EAAMlC,UAZ1C,UAgBKiS,EAAiB7C,UAhBtB,aAgBK,EAA4B9E,KAAI,SAACpI,GAC9B,OAAO0O,GAAU,CACbjB,OACA3P,eACAkC,KAAMA,EACNY,OAAQA,EACRX,MAAOA,EACP0O,gBAAiB3B,EACjBgD,QAASA,W,wCC3BhBI,GAAmC,SAAC,GAe1C,IAdHpD,EAcE,EAdFA,UACAqD,EAaE,EAbFA,UACA3P,EAYE,EAZFA,YACA+G,EAWE,EAXFA,MACA9J,EAUE,EAVFA,KACAiD,EASE,EATFA,OACAX,EAQE,EARFA,MACA4O,EAOE,EAPFA,aACAyB,EAME,EANFA,yBACAC,EAKE,EALFA,UACAP,EAIE,EAJFA,QAEAlS,GAEE,EAHF0S,SAGE,EAFF1S,cACA2S,EACE,EADFA,YAEMtS,EAAOC,qBAAWlB,GACxB,EAAoCmB,mBAAS,IAA7C,mBAAOuJ,EAAP,KAAmBkH,EAAnB,KACA,EAAsCzQ,mBAAS,MAA/C,mBAAOqS,EAAP,KAAoBC,EAApB,KACA,EAA8BtS,mBAAS,IAAvC,mBAAOwH,EAAP,KACA,GADA,KACoCxH,mBAAS,KAA7C,mBAAOsH,EAAP,KACA,GADA,KAC8BtH,mBAAS,OAAvC,mBAAOuS,EAAP,KAAgBC,EAAhB,KACA,EAAgD3S,IAAxCQ,EAAR,EAAQA,QAA4BJ,GAApC,EAAiBE,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SAE9BwS,EAAiB,SAAC7Q,GACpBW,EAAO,CAAEjD,OAAMsC,WAOb8O,EAAY,uCAAG,4BAAAlQ,EAAA,+EAEQH,EAAQ,mBAAD,OACLmQ,GADK,OACUmB,GAClC,MACA,KACA,CACI7J,cAAehI,EAAKf,QAPf,OAEP4R,EAFO,OAUb8B,EAAe9B,GAAkB,IAVpB,uGAAH,qDAelBhJ,qBAAU,WACD/F,GAA0B,IAAjBA,EAAMC,QAAc6O,MACnC,IAEH/I,qBAAU,WACF/F,GAASA,EAAMC,OAAS,EACxB4O,EAAc7O,GAEd6O,EAAc,MAEnB,CAAC7O,IAEJ,IAoDM8Q,EAAc,SAAC/Q,EAAMqI,GACvB,IAAI2I,EAtCO,SAACC,GACZ,IAAInR,EAAQ,GAiCZ,OAhCwB,OAAxBwQ,QAAwB,IAAxBA,KAA0BY,SAAQ,SAAClR,GACC,IAAD,EAAb,cAAdA,EAAKK,KACD,OAAJL,QAAI,IAAJA,GAAA,UAAAA,EAAM+P,wBAAN,SAAwBmB,SAAQ,SAACC,GACpB,OAATA,QAAS,IAATA,KAAWD,SAAQ,SAACE,GACK,kBAAjBA,EAAQ/Q,MACRP,EAAMsR,EAAQ7C,OAAO,GAAGtO,OAASgR,EAC3BA,EAAOG,EAAQ7C,OAAO,GAAGtO,OACzBoR,KAAUD,EAAQ7C,OAAO,GAAG+C,SAClCxR,EAAMsR,EAAQ7C,OAAO,GAAGtO,OAASgR,EAC3BA,EAAOG,EAAQ7C,OAAO,GAAGtO,OACzBoR,KAAUD,EAAQ7C,OAAO,GAAG+C,UAElCxR,EAAMsR,EAAQnR,OAASgR,EACjBA,EAAOG,EAAQnR,OACfoR,KAAUD,EAAQE,eAKf,kBAAdtR,EAAKK,MACZP,EAAME,EAAKuO,OAAO,GAAGtO,OAASgR,EACxBA,EAAOjR,EAAKuO,OAAO,GAAGtO,OACtBoR,KAAUrR,EAAKuO,OAAO,GAAG+C,SAC/BxR,EAAME,EAAKuO,OAAO,GAAGtO,OAASgR,EACxBA,EAAOjR,EAAKuO,OAAO,GAAGtO,OACtBoR,KAAUrR,EAAKuO,OAAO,GAAG+C,UAE/BxR,EAAME,EAAKC,OAASgR,EACdA,EAAOjR,EAAKC,OACZoR,KAAUrR,EAAKsR,YAE7BT,EAAW/Q,GACJA,EAIGyR,CAAOvR,GACjB6Q,EAAW,eAAKG,IAChBL,EAAe,CAAE3Q,OAAMqI,QAAO/I,KAAM0R,KAWlCQ,EAAa,SAAClS,GAChB,IAAImS,GAEAA,EADAb,EACQ,eAAQA,GAEL,IAENtR,EAAK3B,MAAQ2B,EAAKW,MAC3B4Q,EAAW,eAAKY,KAqBpB,OACI,qCACKf,EACG,qBAAKnQ,UAAWC,KAAEkR,OAAQtP,QAAS,kBAAMuO,EAAe,OAAxD,SACI,qBAAKpQ,UAAWC,KAAEmR,SAAUvP,QAAS,SAACwP,GAAD,OArClC,SAACA,GAChBA,EAAEC,kBAoCsDC,CAAWF,IAAvD,SACI,qBAAKrR,UAAWC,KAAEuR,YAAlB,SACI,sBACI3N,MAAO,CACHxC,MAAO6O,GAA4B,KAF3C,UAKI,sBAAKlQ,UAAWC,KAAE6F,aAAlB,UACI,qBACI9F,UACIO,IAAYwF,mBACZ,IACA9F,KAAE+F,YAJV,SAOKpG,EACG,UACArC,KAGR,sBAAKyC,UAAWC,KAAEwR,cAAlB,UACI,qBACIzR,UAAWC,KAAEyR,oBACb7P,QAAS,kBA1H5B,SAAC5C,GAClB,GAAIA,EAAOQ,KAAM,CACb,IAAIyR,EAAQ,aAAO7J,GACnB6J,EAASvI,OAAO1J,EAAO6I,MAAO,GAC9ByI,EAAe,aAAIW,IAEvBd,EAAe,MAqHyBuB,CAAaxB,IAHrB,SAMI,qBACInQ,UACIO,IAAY2B,kBACZ,IACAjC,KAAEwG,uBAJV,SAOK7G,EACG,SACArC,OAIZ,qBACIyC,UAAWC,KAAEgG,aACbpE,QAAS,kBAAMuO,EAAe,OAFlC,SAII,cAAC,GAAD,CAAmBzL,GAAG,kBAIlC,cAAC,KAAD,CACId,MAAO,CACHxC,MAAO,OACPuD,OAAQ,OACR2E,UAAW,IAJnB,SAOI,qBAAKvJ,UAAWC,KAAE2R,MAAlB,gBACK7B,QADL,IACKA,OADL,EACKA,EAA0BlI,KACvB,SAACpI,EAAMqI,GACH,OAAOqG,GAAU,CACbjB,KAAMtP,EAAKP,SACXE,eACAkC,KAAMA,EACNY,OAAQ4Q,EACRvR,MAAO2Q,EACPjC,gBAAiB3B,WAMrC,qBACIzM,UACIO,IAAY2B,kBACZ,KACoB,IAAnBoD,EAAQ3F,OACHM,KAAEiG,SACFjG,KAAEkG,aANhB,SASKvG,EACG0F,GAAWF,EACX7H,KAGR,sBAAKyC,UAAWC,KAAEmG,mBAAlB,UACI,qBACIpG,UAAWC,KAAEoG,gBACbxE,QAAS,kBA7GzB,WAChB,IAAIqP,EAAQ,aAAO7J,GACd8I,EAAY1Q,KAMTyR,EAASf,EAAYrI,OADrB3H,EACA,2BACOkQ,GADP,kBAEKlQ,EAAcvC,EAAKR,OAEOiT,EAT/BlQ,EACA+Q,EAAS3D,KAAT,2BAAmB8C,GAAnB,kBAA6BlQ,EAAcvC,EAAKR,QAC/C8T,EAAS3D,KAAK8C,GASvBE,EAAe,aAAIW,IACnBd,EAAe,MA8FgCyB,IAFnB,SAIK9T,EACG,qBACIiC,UACIC,KAAEqG,uBAFV,SAKI,cAAC,IAAD,CACIhF,MACIZ,EAAaE,eAEjB7C,SAAS,EACTgE,IAAK9B,KAAE+B,OACPC,KAAM,OAId,qBACIjC,UACIO,IAAY2B,kBACZ,IACAjC,KAAEsG,qBAJV,SAOK3G,GACc,OAAXuQ,QAAW,IAAXA,OAAA,EAAAA,EAAa1Q,MACP,OACA,MACNlC,OAKhB,qBACIyC,UAAWC,KAAEuG,kBACb3E,QAAS,kBAAMuO,EAAe,OAFlC,SAII,qBACIpQ,UACIO,IAAY2B,kBACZ,IACAjC,KAAEwG,uBAJV,SAOK7G,EACG,SACArC,mBAUhC,KAEJ,qBACIyC,UACIO,IAAY2B,kBAAoB,IAAMjC,KAAE6R,gBAFhD,SAKK5K,IAEL,qBAAKlH,UAAWC,KAAE0H,aAAlB,SACI,sBAAK3H,UAAWC,KAAE2H,YAAlB,UACK7J,EACG,qBAAKiC,UAAWC,KAAE4O,cAAlB,SACI,cAAC,IAAD,CACIvN,MAAOZ,EAAaE,eACpB7C,SAAS,EACTgE,IAAK9B,KAAE+B,OACPC,KAAM,OANV,OAUJoF,QAVI,IAUJA,OAVI,EAUJA,EAAYQ,KAAI,SAACpI,EAAMqI,GAAP,OACZ,sBACIjG,QAAS,kBAAM2O,EAAY/Q,EAAMqI,IACjC9H,UAAWC,KAAE8R,gBAFjB,UAII,qBACI/R,UACIO,IAAY2B,kBACZ,IACAjC,KAAE+R,qBAJV,SAOKlC,EACKA,EAAUrQ,GACVA,EAAKyH,MAAM1H,MACP,SAACC,GAAD,OAAUA,EAAKpC,YAEnBoC,EAAKyH,MAAM1H,MACP,SAACC,GAAD,OAAUA,EAAKpC,YACjBqC,MACFD,EAAKyH,MAAM,GAAGxH,QAExB,qBACIM,UAAWC,KAAEgS,aACbpQ,QAAS,SAACwP,GACNA,EAAEC,kBAxRhB,SAACxJ,GACnB,IAAIoJ,EAAQ,aAAO7J,GACnB6J,EAASvI,OAAOb,EAAO,GACvByI,EAAe,aAAIW,IAsRagB,CAAcpK,IAJtB,SAOI,cAAC,GAAD,CAAmBnD,GAAG,YAEzBxE,EACG,qBACIH,UACIO,IAAYC,eACZ,IACAP,KAAEkS,4BAJV,SAOK1S,EAAKU,KAEV,WAIdpC,EAaF,KAXI,qBACI8D,QAAS,WA7P7B2O,EAAY,KAAMnJ,EAAW1H,SA8PTK,UACIO,IAAY2B,kBACZ,IACAjC,KAAEmS,oBALV,SAQKxS,EAAmBoQ,EAAWzS,c,UChY9C8U,I,OAA4B,SAAC,GASnC,IARHnL,EAQE,EARFA,MACA9J,EAOE,EAPFA,KACAiD,EAME,EANFA,OACAX,EAKE,EALFA,MACA+M,EAIE,EAJFA,UACA6F,EAGE,EAHFA,YACA/U,EAEE,EAFFA,aACA2P,EACE,EADFA,KAEA,EAAgCpP,mBAC5BwU,EAAW,OACL7F,QADK,IACLA,OADK,EACLA,EAAW5E,KAAI,SAACpI,GAAD,MAAW,CAAEpC,SAAUoC,EAAKsN,KAAMrN,MAAO,OACxD,IAHV,mBAAO4I,EAAP,KAAiBC,EAAjB,KAKA,EAAgCzK,mBAASoP,GAAzC,mBAAOP,EAAP,KAAiBD,EAAjB,KAEAjH,qBAAU,WACF/F,GAASA,EAAMC,OAAS,EACxB4I,EAAY7I,GAEZ6I,EACI+J,EAAW,OACL7F,QADK,IACLA,OADK,EACLA,EAAW5E,KAAI,SAACpI,GAAD,MAAW,CACtBpC,SAAUoC,EAAKsN,KACfrN,MAAO,OAEX,MAGf,CAACA,IAsBJ,OACI,sBAAKM,UAAWC,KAAEsS,KAAlB,UACI,sBAAKvS,UAAWC,KAAEkN,oBAAlB,UACI,qBACInN,UACIO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YAFhD,SAKKP,EAAmBsH,EAAO3J,KAE9B+U,EACG,cAAC,GAAD,CACI7F,UAAWA,EACXlP,aAAcA,EACdmP,YAAaA,EACbC,SAAUF,EAAUW,WAChB,SAAC3N,GAAD,OAAUA,EAAKsN,OAASJ,OAGhC,QAER,cAAC,KAAD,CACIjN,MACI4S,GACc,OAARhK,QAAQ,IAARA,OAAA,EAAAA,EAAU9I,MAAK,SAACC,GAAD,OAAUA,EAAKpC,WAAasP,MAA3C,OACIrE,QADJ,IACIA,OADJ,EACIA,EAAU9I,MACN,SAACC,GAAD,OAAUA,EAAKpC,WAAasP,KAC9BjN,MACF,GACJ4I,EAEVlI,SAnDM,SAACV,GACf,GAAI4S,EAAa,CACb,IAAIjF,EAAe/E,EACbgF,EAAUD,EAAaD,WACzB,SAAC3N,GAAD,OAAUA,EAAKpC,WAAasP,MAEf,IAAbW,EACAD,EAAaE,KAAK,CACdlQ,SAAUsP,EACVjN,UAGJ2N,EAAaC,GAAS5N,MAAQA,EAElCW,EAAO,CAAEjD,OAAMsC,MAAO2N,SAEtBhN,EAAO,CAAEjD,OAAMsC,WAoCX8S,QAAS,OACTxS,UAAWC,KAAEwS,SACb7N,OAAQ,WCtFX8N,GAAmC,SAAC,GAU1C,IATHnD,EASE,EATFA,OACAnS,EAQE,EARFA,KACAiD,EAOE,EAPFA,OACAX,EAME,EANFA,MACA+M,EAKE,EALFA,UACAwD,EAIE,EAJFA,SACAD,EAGE,EAHFA,UACAzS,EAEE,EAFFA,aACA2P,EACE,EADFA,KAEA,EAA0BpP,mBAAS,IAAnC,mBAAOyB,EAAP,KAAcoT,EAAd,KACA,EAAgC7U,mBAAS,IAAzC,mBAAO6O,EAAP,KAAiBD,EAAjB,KAEAjH,qBAAU,WACN,GAAI/F,GAASA,EAAMC,OAAS,GAExB,GADAgT,EAASjT,GACe,IAApBiN,EAAShN,OAAc,CACvB,IAAIiT,EAAW,GACflT,EAAMiR,SAAQ,kBAAMiC,EAASrF,KAAKL,MAClCR,EAAYkG,SAGhBD,EAAS,MAEd,CAACjT,IAEJ,IAAMuR,EAAa,SAACvR,GAChBW,EAAO,CAAEjD,OAAMsC,WAGbmT,EAAmB,SAAC/K,EAAO8F,GAC7B,IAAIgF,EAAQ,aAAOjG,GACnBiG,EAAS9K,GAAS8F,EAClBlB,EAAY,aAAIkG,KAsCdE,EAAW,SAACpT,EAAOoI,EAAOhI,GAC5B,IAAIoR,EAAQ,aAAO3R,GACnB2R,EAASpJ,GAAOhI,GAAQJ,EACxBuR,EAAWC,IAGT6B,EAAW,2BAEjB,OACI,4CACKxT,QADL,IACKA,OADL,EACKA,EAAOsI,KAAI,SAACpI,EAAMqI,GAAP,eACR,qCACI,sBAAK9H,UAAWC,KAAE+S,WAAlB,UACI,qBACIhT,UACIO,IAAY2B,kBACZ,IACAjC,KAAEE,YAJV,mBAOQ2H,EAAQ,EAPhB,aAOsBlI,EACd2P,EAAO,GACPhS,MAGR,qBACIyC,UAAWC,KAAEgT,cACbpR,QAAS,SAACwP,GACNA,EAAEC,kBAtCR,SAACxJ,GACnB,IAAIoJ,EAAQ,aAAO3R,GACnB2R,EAASvI,OAAOb,EAAO,GAEX,aAAO6E,GACVhE,OAAOb,EAAO,GACvBzH,EAAO,CAAEjD,OAAMsC,MAAOwR,IAiCEgB,CAAcpK,IAJtB,SAOI,cAAC,GAAD,CAAmBnD,GAAG,eAG9B,sBAAK3E,UAAWC,KAAE+S,WAAlB,UACI,uBACItT,MAAOD,EAAKyT,YACZpT,KAAK,OACLE,UAAWC,KAAEkT,UACb/S,SAAU,SAACV,GAAD,OACNoT,EACIpT,EAAMY,OAAOZ,MACboI,EACA,kBAIZ,qBACI9H,UACIO,IAAY2B,kBACZ,IACAjC,KAAEmT,UAJV,0BASA,uBACI1T,MAAOD,EAAK4T,UACZvT,KAAK,OACLE,UAAWC,KAAEkT,UACb/S,SAAU,SAACV,GAAD,OACNoT,EAASpT,EAAMY,OAAOZ,MAAOoI,EAAO,mBAIhD,sBAAK9H,UAAWC,KAAEkN,oBAAlB,UACI,qBACInN,UACIO,IAAY2B,kBACZ,IACAjC,KAAEE,YAJV,SAOKP,EAAmB2P,EAAO,GAAIhS,KAsBnC,cAAC,GAAD,CACIkP,UAAWA,EACXlP,aAAcA,EACdmP,YAAa,SAACkB,GAAD,OACTiF,EAAiB/K,EAAO8F,IAE5BjB,SAAUF,EAAUW,WAChB,SAAC3N,GAAD,OAAUA,EAAKsN,OAASJ,EAAS7E,WAI7C,0BACIuE,KAAK,KACLC,KAAK,KACL5M,OACI,UAAAD,EAAK6T,mBAAL,eAAkB9T,MACd,SAACC,GAAD,OAAUA,EAAKpC,WAAasP,EAAS7E,OADzC,UAGMrI,EAAK6T,mBAHX,aAGM,EAAkB9T,MACd,SAACC,GAAD,OACIA,EAAKpC,WAAasP,EAAS7E,MACjCpI,MACF,GAEVM,UAAWC,KAAEsM,WACbnM,SAAU,SAACV,GAAD,OA5Jb,SAACA,EAAOoI,GACrB,IAAIoJ,EAAQ,aAAO3R,GACb+N,EAAU4D,EAASpJ,GAAOwL,YAAYlG,WACxC,SAAC3N,GAAD,OAAUA,EAAKpC,WAAasP,EAAS7E,OAExB,IAAbwF,EACA4D,EAASpJ,GAAOwL,YAAY/F,KAAK,CAC7BlQ,SAAUsP,EAAS7E,GACnBpI,UAGJwR,EAASpJ,GAAOwL,YAAYhG,GAAS5N,MAAQA,EAEjDuR,EAAWC,GAgJSqC,CAAS7T,EAAMY,OAAOZ,MAAOoI,MAGrC,qBACI9H,UACIO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YAFhD,SAKKP,EAAmB2P,EAAO,GAAIhS,KAEnC,sBAAKyC,UAAWC,KAAEuT,YAAlB,UACI,uBACI9T,MAAOD,EAAK6B,MACZxB,KAAK,OACLE,UAAWC,KAAEwT,iBACbrT,SAAU,SAACV,GAAD,OACNoT,EAASpT,EAAMY,OAAOZ,MAAOoI,EAAO,YAG5C,qBACIjE,MAAO,CACH6P,WAAY,GACZrS,MAAO,GACPuD,OAAQ,GACR8E,aAAc,EACdC,gBAAiBoJ,EAASY,KAAKlU,EAAK6B,OAC9B7B,EAAK6B,MACL,+BAM1B,qBACIO,QAAS,kBA/KL,WACZ,IAAIqP,EAAQ,aAAO3R,GACnB2R,EAAS3D,KAAKuD,KAAUb,IACxBgB,EAAWC,GACX,IAAI0B,EAAQ,aAAOjG,GACnBiG,EAASrF,KAAKL,GACdR,EAAY,aAAIkG,IAyKOgB,IACf5T,UACIO,IAAY2B,kBAAoB,IAAMjC,KAAEmS,oBAHhD,SAMKxS,EAAmBoQ,EAAWzS,SC3OlCsW,GAAsB,SAAC,GAO7B,IANHzW,EAME,EANFA,KACAiD,EAKE,EALFA,OACAX,EAIE,EAJFA,MACAuQ,EAGE,EAHFA,SACAD,EAEE,EAFFA,UACAzS,EACE,EADFA,aAEA,EAA0BO,mBAAS,IAAnC,mBAAOyB,EAAP,KAAcoT,EAAd,KAEAlN,qBAAU,WACF/F,GAASA,EAAMC,OAAS,EACxBgT,EAASjT,GAETiT,EAAS,MAEd,CAACjT,IAEJ,IAAMuR,EAAa,SAACvR,GAChBW,EAAO,CAAEjD,OAAMsC,WAiCnB,OACI,4CACKH,QADL,IACKA,OADL,EACKA,EAAOsI,KAAI,SAACpI,EAAMqI,GAAP,OACR,sBAAK9H,UAAWC,KAAE6T,YAAlB,UACI,gCACI,sBAAK9T,UAAWC,KAAE+S,WAAlB,UACI,qBACIhT,UACIO,IAAY2B,kBACZ,IACAjC,KAAEE,YAJV,mBAOQP,EACA,SACArC,GATR,YAUSuK,EAAQ,KAGjB,qBACI9H,UAAWC,KAAEgT,cACbpR,QAAS,SAACwP,GACNA,EAAEC,kBAxCZ,SAACxJ,GACnB,IAAIoJ,EAAQ,aAAO3R,GACnB2R,EAASvI,OAAOb,EAAO,GACvBmJ,EAAWC,GAsCiBgB,CAAcpK,IAJtB,SAOI,cAAC,GAAD,CAAmBnD,GAAG,eAG9B,uBACIjF,MAAOD,EAAKyH,MACZpH,KAAK,OACLE,UAAWC,KAAE8T,UACb3T,SAAU,SAACV,GAAD,OA/DjB,SAACA,EAAOoI,GACrB,IAAIoJ,EAAQ,aAAO3R,GACnB2R,EAASpJ,GAAOZ,MAAQxH,EACxBuR,EAAWC,GA6DaqC,CAAS7T,EAAMY,OAAOZ,MAAOoI,SAIzC,sBAAK9H,UAAWC,KAAE+T,MAAlB,UACI,qBACIhU,UACIO,IAAY2B,kBACZ,IACAjC,KAAEE,YAJV,SAOKP,EAAmB,SAAUrC,KAElC,uBACImC,MAAOD,EAAKwU,MACZnU,KAAK,OACLE,UAAWC,KAAEkT,UACb/S,SAAU,SAACV,GAAD,OAhEjB,SAACA,EAAOoI,GACrB,IAAIoJ,EAAQ,aAAO3R,GACnB2R,EAASpJ,GAAOmM,MAAQvU,EACxBuR,EAAWC,GA8Da4B,CAASpT,EAAMY,OAAOZ,MAAOoI,SAIzC,sBAAK9H,UAAWC,KAAE+T,MAAlB,UACI,sBACIhU,UACIO,IAAY2B,kBACZ,IACAjC,KAAEE,YAJV,UAOKP,EAAmB,QAASrC,GAPjC,OASA,qBACIyC,UAAWC,KAAEiU,gBACbrS,QAAS,kBA3EjB,SAACiG,GACb,IAAIoJ,EAAQ,aAAO3R,GACnB2R,EAASpJ,GAAOqM,WAAajD,EAASpJ,GAAOqM,UAC7ClD,EAAWC,GAwEwBkD,CAAQtM,IAF3B,SAII,qBACI9H,UACIP,EAAK0U,UAAYlU,KAAE6I,WAAa7I,KAAE8I,iBAO1D,qBACIlH,QAAS,kBAzGL,WACZ,IAAIqP,EAAQ,aAAO3R,GACnB2R,EAAS3D,KAAKuD,KAAUb,IACxBgB,EAAWC,GAsGY0C,IACf5T,UACIO,IAAY2B,kBAAoB,IAAMjC,KAAEmS,oBAHhD,SAMKxS,EAAmBoQ,EAAWzS,SCjJlC8W,GAAQ,CACjB,CAACnN,MAAO,iCAASxH,MAAO,kCACxB,CAACwH,MAAO,uCAAUxH,MAAO,wCACzB,CAACwH,MAAO,+DAAcxH,MAAO,gEAC7B,CAACwH,MAAO,6CAAWxH,MAAO,8CAC1B,CAACwH,MAAO,iCAASxH,MAAO,kCACxB,CAACwH,MAAO,2BAAQxH,MAAO,4BACvB,CAACwH,MAAO,mDAAYxH,MAAO,oDAC3B,CAACwH,MAAO,iCAASxH,MAAO,kCACxB,CAACwH,MAAO,2BAAQxH,MAAO,4BACvB,CAACwH,MAAO,uHAAyBxH,MAAO,wHACxC,CAACwH,MAAO,mDAAYxH,MAAO,oDAC3B,CAACwH,MAAO,yDAAaxH,MAAO,0DAC5B,CAACwH,MAAO,oDAAaxH,MAAO,qDAC5B,CAACwH,MAAO,oDAAaxH,MAAO,qDAC5B,CAACwH,MAAO,0DAAcxH,MAAO,2DAC7B,CAACwH,MAAO,6CAAWxH,MAAO,8CAC1B,CAACwH,MAAO,mDAAYxH,MAAO,oDAC3B,CAACwH,MAAO,mDAAYxH,MAAO,oDAC3B,CAACwH,MAAO,oGAAqBxH,MAAO,qGACpC,CAACwH,MAAO,oGAAqBxH,MAAO,qGACpC,CAACwH,MAAO,wIAA2BxH,MAAO,yIAC1C,CAACwH,MAAO,4HAAyBxH,MAAO,6HACxC,CAACwH,MAAO,uCAAUxH,MAAO,wCACzB,CAACwH,MAAO,yDAAaxH,MAAO,0DAC5B,CAACwH,MAAO,4HAAyBxH,MAAO,8HCb/B4U,GAAgB,SAAC,GAAkD,IAAhDpN,EAA+C,EAA/CA,MAAO9J,EAAwC,EAAxCA,KAAMiD,EAAkC,EAAlCA,OAAQX,EAA0B,EAA1BA,MAAOnC,EAAmB,EAAnBA,aAClDK,EAAOC,qBAAWlB,GACxB,EAAgDgB,IAAxCQ,EAAR,EAAQA,QACR,GADA,EAAiBF,MAAjB,EAAwBmB,WAAxB,EAAoCrB,QACRD,mBAAS,WAArC,mBAAOmB,EAAP,KAAekE,EAAf,KACA,EAAgCrF,oBAAS,GAAzC,mBAAOuN,EAAP,KAAiBC,EAAjB,KACA,EAAsCxN,oBAAS,GAA/C,mBAAoByN,GAApB,WACA,EAA4BzN,oBAAS,GAArC,mBAAOkE,EAAP,KAAekB,EAAf,KAEAuC,qBAAU,WACF/F,GAASA,EAAMC,OAAS,EAAGwD,EAAU,UACpCA,EAAU,YAChB,CAACzD,IAEJ,IAAM8L,EAAU,uCAAG,sBAAAlN,EAAA,+EAELH,EAAQ,qBAEV,OACA,CAAEE,IAAKqB,GACP,CACIkG,cAAc,GAAD,OAAKhI,EAAKf,SAPpB,OAUXwD,EAAO,CAAEjD,OAAMsC,MAAO,KAVX,uGAAH,qDAcV+L,EAAQ,uCAAG,WAAOC,GAAP,iBAAApN,EAAA,yDACE,WAAXW,EADS,gCAEHuM,IAFG,gCAGF,MAHE,cAKbtI,GAAU,GACVoI,GAAY,GACZC,GAAe,GAPF,SASHI,EAAQD,EAAMpL,OAAOqL,MAAM,GATxB,UAUWjB,GAAYyB,gBAAgBR,EAAO/N,EAAKf,OAVnD,QAUHkC,EAVG,OAWJA,KACLuM,GAAY,GACZO,YAAW,kBAAMP,GAAY,KAAQ,MACrCjL,EAAO,CAAEjD,OAAMsC,MAAOX,IACtBmE,GAAU,GAfD,kDAiBTqI,GAAe,GACfrI,GAAU,GAlBD,0DAAH,sDAsBd,OACI,sBAAKlD,UAAWC,KAAEkH,IAAlB,UACI,sBACItD,MAAO,CACHxC,MAAO,OACPoI,QAAS,OACT8K,eAAgB,iBAJxB,UAOI,qBACIvU,UACIO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YAFhD,SAKKP,EAAmBsH,EAAO3J,KAE/B,mBACIyC,UAAWC,KAAEuU,YACbC,KAAI,UAAK/W,EAAL,YAAmBgC,GACvBY,OAAO,SAHX,SAKI,qBACIN,UACIO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YAFhD,SAKKP,EAAmB,OAAQrC,UAIxC,sBAAKyC,UAAWC,KAAE6L,UAAlB,UACI,uBAAOpM,MAAOA,EAAOI,KAAK,OAAOE,UAAWC,KAAE8L,aAC9C,qBAAK/L,UAAWC,KAAE+L,YAAanK,QAAS,kBAAM4J,KAA9C,SACKzJ,EACG,cAAC,IAAD,CACIV,MAAOZ,EAAaE,eACpB7C,SAAS,EACTgE,IAAK9B,KAAE+B,OACPC,KAAM,KAEC,WAAXhD,EACA,qCACI,uBACIe,UAAWC,KAAEgM,KACbnM,KAAK,OACL1C,KAAK,UACLgD,SAAU,SAACsL,GAAD,OAAWD,EAASC,MAElC,cAAC,GAAD,CACI/G,GAAI0G,EAAW,KAAO,cAI9B,mCACI,cAAC,GAAD,CACI1G,GAAI0G,EAAW,KAAO,sBC3GzCqJ,GAAoB,SAAC,GAAgF,IAA/ExN,EAA8E,EAA9EA,MAAO9J,EAAuE,EAAvEA,KAAMiD,EAAiE,EAAjEA,OAAQX,EAAyD,EAAzDA,MAAO4O,EAAkD,EAAlDA,aAAcqG,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,QAASrX,EAAkB,EAAlBA,aACvFK,EAAOC,qBAAWlB,GACxB,EAA8CgB,IAAvCQ,EAAP,EAAOA,QACP,GADA,EAAgBF,MAAhB,EAAuBmB,WAAvB,EAAmCrB,QACPD,oBAAS,IAArC,mBAAOmB,EAAP,KAAekE,EAAf,KACA,EAAsCrF,oBAAS,GAA/C,mBACA,GADA,UAC4BA,oBAAS,IAArC,mBACA,GADA,UACwBA,mBAAS,KAAjC,mBAAO+W,EAAP,KAAaC,EAAb,KAEMC,EAAO,uCAAG,4BAAAzW,EAAA,+EAESH,EAAQ,mBAAD,OAAoBmQ,GAAgB,MAAO,KAAM,CAC3E1I,cAAehI,EAAKf,QAHV,OAEN4R,EAFM,OAKZqG,EAAQ,aAAIrG,IALA,gDAOZuG,QAAQ/W,MAAM,SAAd,MAPY,yDAAH,qDAWPgX,EAAmB,WACvB9R,GAAU,SAAClE,GAAD,OAAaA,MAYzB,OAJAwG,qBAAU,WACJ6I,GAAcyG,MACjB,IAGD,sBAAK/U,UAAWC,KAAEkH,IAAM,IAAMlH,KAAEiV,aAAhC,UACE,qBAAKlV,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YAAxD,SAAsEP,EAAmBsH,EAAO3J,KAChG,sBAAKyC,UAAWC,KAAE6L,UAAY,IAAM7L,KAAEkV,KAAtC,UACE,uBAAOzV,MAAOE,EAAmBF,EAAQA,EAAMkV,GAAW,SAAUrX,GAAeuC,KAAK,OAAOE,UAAWC,KAAE8L,aAC5G,qBAAK/L,UAAWC,KAAE+L,YAAanK,QAAS,kBAAMoT,KAA9C,SACE,cAAC,GAAD,CAAmBtQ,GAAI,sBAG1B1F,GACC,qBAAKe,UAAWC,KAAEmV,SAAlB,SACE,cAAC,KAAD,CAAYvR,MAAO,CAACxC,MAAO,OAAQuD,OAAQ,QAA3C,gBACGiQ,QADH,IACGA,OADH,EACGA,EAAMhN,KAAI,SAACpI,GAAD,OACT,qBAEEO,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEoV,aACnDxT,QAAS,kBAzBD,SAACnC,GACrBW,EAAO,CAACjD,OAAMsC,UACduV,IAuB2BK,CAAc7V,IAH/B,SAKGA,EAAKmV,IAJDnV,EAAKkV,e,mBCjC1BY,KAAQC,SACJC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,MAGG,IAAMC,GAAkB,SAAC,GAK1B,EAJF/O,MAIG,IAHHoH,EAGE,EAHFA,aACAmB,EAEE,EAFFA,QACAlS,EACE,EADFA,aAEMK,EAAOC,qBAAWlB,GACxB,EAAwBmB,mBAAS,MAAjC,mBAAOiB,EAAP,KAAamX,EAAb,KACA,EAAgDvY,IAAxCQ,EAAR,EAAQA,QAA4BJ,GAApC,EAAiBE,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SACpC,EAAsCD,mBAAS,IAA/C,mBAAOqY,EAAP,KAAoBC,EAApB,KAWA,EAAkCtY,mBAAS,IAA3C,mBAAOuY,EAAP,KAAkBC,EAAlB,KAaMvB,EAAO,uCAAG,sBAAAzW,EAAA,wFAAAA,EAAA,wCAAAA,EAAA,sEAEaH,EAAQ,mBAAD,OACLmQ,GADK,OACUmB,GAClC,MACA,KACA,CACI7J,cAAehI,EAAKf,QAPpB,OAYR,IAVM4R,EAFE,OAURyH,EAAQzH,GACJ8H,EAAQ,GAXJ,WAYCC,GAUL,IATA,IAAIC,EAAM,CACNlH,OAAQ,GACRmH,SAAU,CACN,CACI3X,KAAM,GACN4K,gBAAiB,MAlBzB,WAsBKgN,GAtBL,YAuBAF,EAAIlH,OAAOhC,KAAKqJ,EAAanI,EAAO+H,GAAGK,OAAOF,GAAGG,WACjDL,EAAIC,SAAS,GAAG3X,KAAKwO,KAArB,UACIkB,EAAO+H,GAAGK,OAAOF,GAAGE,cADxB,aACI,EAA4B5C,OAEhC,IAAM3S,EAAK,UAAGmN,EAAO+H,GAAGK,OAAOF,GAAGhD,YAAvB,iBAAG,EAA0BkD,cAA7B,iBAAG,EAAkCrX,MAC5C,SAACC,GAAD,eACIA,EAAKyT,cAAL,UACIzE,EAAO+H,GAAGK,OAAOF,GAAGE,cADxB,aACI,EAA4B5C,SAChC,UAAAxF,EAAO+H,GAAGK,OAAOF,GAAGE,cAApB,eAA4B5C,QAASxU,EAAK4T,oBAJvC,aAAG,EAKX/R,MACHmV,EAAIC,SAAS,GAAG/M,gBAAgB4D,KAC5BjM,GAAgB,YAZfqV,EAAI,EAAGA,EAAIlI,EAAO+H,GAAGK,OAAOlX,OAAQgX,IAAM,EAA1CA,GAeTJ,EAAMhJ,KAAKkJ,IAzBND,EAAI,EAAGA,EAAI/H,EAAO9O,OAAQ6W,IAAM,EAAhCA,GA2BTF,EAAaC,GAvCL,kKAAH,qDA2Cb9Q,qBAAU,WACNsP,MACD,IAEH,IAqBM6B,EAAe,SAACG,GAGlB,IAAIC,GAFJD,EAAO,IAAI3M,KAAK2M,IAEDE,UAAY,EAAIF,EAAKE,UAA1B,WAA0CF,EAAKE,WACrDC,EACAH,EAAK7H,WAAa,EACZ6H,EAAK7H,WAAa,EADxB,WAEU6H,EAAK7H,WAAa,GAC5BiI,EAAOJ,EAAKK,cAEhB,MAAM,GAAN,OAAUJ,EAAV,YAAiBE,EAAjB,YAA0BC,IAgBxBE,EAAU,CACZC,YAAY,EACZC,QAAS,CACLC,OAAQ,CACJ/N,SAAS,GAEbgO,MAAO,CACHhO,SAAS,KAKrB,OACI,qBAAKzJ,UAAWC,KAAEyX,gBAAlB,SACK3Z,EACG,qBAAKiC,UAAWC,KAAEqG,uBAAlB,SACI,cAAC,IAAD,CACIhF,MAAOZ,EAAaE,eACpB7C,SAAS,EACTgE,IAAK9B,KAAE+B,OACPC,KAAM,OANV,OAUJlD,QAVI,IAUJA,OAVI,EAUJA,EAAM8I,KAAI,SAAC8P,EAAWC,GAAZ,aACN,sBAAK5X,UAAWC,KAAE4X,iBAAlB,UACI,sBACI7X,UAAWC,KAAE6X,mBACbjW,QAAS,kBA3Eb,SAACiG,GACjB,IAAIiQ,EAAU,eAAQ5B,QACI6B,IAAtBD,EAAWjQ,GACXiQ,EAAWjQ,QAASkQ,EAEpBD,EAAWjQ,GAAS,GAExBsO,EAAe,eAAK2B,IAoEeE,CAAYL,IAF/B,UAII,cAAC,GAAD,CACIjT,QACgCqT,IAA5B7B,EAAYyB,GACN,oBACA,qBAGd,qBACI5X,UACIO,IAAYC,eACZ,IACAP,KAAEiY,uBAJV,SAOK5Y,EAAa,OAACqY,QAAD,IAACA,OAAD,EAACA,EAAWzQ,MAAOtJ,EAAKP,oBAIjB2a,IAA5B7B,EAAYyB,GACT,qCACI,qBAAK5X,UAAWC,KAAEkY,UAAlB,SACI,cAAC,KAAD,CACId,QAASA,EACTtY,KAAMsX,EAAUuB,GAChB9X,KAAM,UAoCd,qBAAKE,UAAWC,KAAEmY,wBAAlB,mBACKT,EAAUd,cADf,aACK,EAAkBhP,KACf,SAACgP,EAAQwB,GAAT,iBACI,sBACIrY,UAAWC,KAAEqY,kBADjB,UAGI,sBACItY,UACIC,KAAE6X,mBAENjW,QAAS,kBAzItC,SAACiG,EAAOyQ,GACvB,IAAIR,EAAU,eAAQ5B,GAChBqC,EAAeT,EAAWjQ,GAAOY,QAAQ6P,IACzB,IAAlBC,EACAT,EAAWjQ,GAAOa,OAAO6P,EAAc,GAEvCT,EAAWjQ,GAAOyF,KAAKgL,GAE3BnC,EAAe,eAAK2B,IAkI4BU,CACIb,EACAS,IAPZ,UAWI,cAAC,GAAD,CACI1T,IAKW,KAJP,UAAAwR,EACIyB,UADJ,eAEGlP,QACC2P,IAEE,oBACA,qBAGd,sBACIrY,UACIO,IAAYmY,iBACZ,IACAzY,KAAE0Y,kBAJV,UAOK/B,EAAY,OACTC,QADS,IACTA,OADS,EACTA,EAAQC,UACT,IATP,IAUM,IAVN,OAWKD,QAXL,IAWKA,GAXL,UAWKA,EAAQA,cAXb,aAWK,EAAgB5C,MAAO,IACvBrU,EACG,QACArC,UAMY,IAFvB4Y,EACGyB,GACFlP,QAAQ2P,GACN,qBACIrY,UACIC,KAAE2Y,4BAFV,gBAKK/B,QALL,IAKKA,GALL,UAKKA,EAAQ9X,YALb,aAKK,EAAc8I,KACX,SAACpI,EAAMqI,GAAP,eACI,sBACI9H,UACIC,KAAE4Y,iBAFV,UAKI,qBACI7Y,UACIO,IAAYC,eACZ,IACAP,KAAE6Y,sBAJV,mBAOQlZ,EACA,WACArC,GATR,YAWQuK,EACA,EAZR,cAaUxI,EAAa,OACfG,QADe,IACfA,OADe,EACfA,EAAMsZ,SACNnb,EAAKP,aAGb,qBACI2C,UACIO,IAAYC,eACZ,IACAP,KAAE6Y,sBAJV,mBAOQlZ,EACA,SACArC,GATR,YAWQuK,EACA,EAZR,cAcY,OAAJrI,QAAI,IAAJA,GAAA,UAAAA,EACMgP,cADN,eAEMA,QAFN,UAGMhP,EACKgP,cAJX,aAGM,EAEMA,OACN,eAO9B,gBAMxB,cCvWfuK,GAAa,SAAC,GAUpB,IATH5b,EASE,EATFA,KACAiD,EAQE,EARFA,OACAX,EAOE,EAPFA,MACAqQ,EAME,EANFA,yBACAN,EAKE,EALFA,QACAnI,EAIE,EAJFA,GACA/J,EAGE,EAHFA,aACA2P,EAEE,EAFFA,KACAkB,EACE,EADFA,gBAEM6C,EAAa,SAACgI,GAChB5Y,EAAO,CACHjD,OACAsC,MAAM,2BAAMA,GAAP,kBAAeuZ,EAAU7b,KAAO6b,EAAUvZ,WAGvD,OACI,0CACKqQ,QADL,IACKA,OADL,EACKA,EAA0BlI,KAAI,SAACpI,EAAMqI,GAClC,OAAOqG,GAAU,CACbjB,OACA3P,eACAkC,KAAMA,EACNY,OAAQ4Q,EACRvR,MAAOA,GAAgB,GACvB0O,kBACAqB,UACAnI,aC1BP4R,GAAmB,SAAC,GAM1B,IALHhS,EAKE,EALFA,MACA9J,EAIE,EAJFA,KACAiD,EAGE,EAHFA,OACAX,EAEE,EAFFA,MACAnC,EACE,EADFA,aAEA,EAA4B4b,IAAMrb,UAAS,GAA3C,mBAAOmB,EAAP,KAAekE,EAAf,KAEA,OACI,sBAAKnD,UAAWC,KAAEkH,IAAlB,UACI,qBACInH,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YADvD,SAGKP,EAAmBsH,EAAO3J,KAE/B,uBACImC,MAAOT,EAASS,EAAQ,MACxBI,KAAK,QACLE,UAAWC,KAAEC,MACbE,SAAU,SAACV,GACPW,EAAO,CAAEjD,OAAMsC,MAAOA,EAAMY,OAAOZ,SAEvCmC,QAAS,WACD5C,IACAoB,EAAO,CAAEjD,OAAMsC,MAAO,KACtByD,GAAU,WCpBrBiW,GAAkB,SAAC,GAWzB,IAVHlS,EAUE,EAVFA,MAEA7G,GAQE,EATFjD,KASE,EARFiD,QACAX,EAOE,EAPFA,MACA4O,EAME,EANFA,aACA+K,EAKE,EALFA,iBACA1E,EAIE,EAJFA,QACAC,EAGE,EAHFA,QACArX,EAEE,EAFFA,aACA+b,EACE,EADFA,KAEM1b,EAAOC,qBAAWlB,GACxB,EAAgDgB,IAAxCQ,EAAR,EAAQA,QACR,GADA,EAAiBF,MAAjB,EAAwBmB,WAAxB,EAAoCrB,QACRD,oBAAS,IAArC,mBAAOmB,EAAP,KAAekE,EAAf,KACA,EAA4BrF,oBAAS,GAArC,mBAAOkE,EAAP,KAAekB,EAAf,KACA,EAAmCpF,oBAAS,GAA5C,mBAAOyb,EAAP,KAAmBC,EAAnB,KACA,EAAwB1b,mBAAS,IAAjC,mBAAO+W,EAAP,KAAaC,EAAb,KACA,EAAgChX,mBAAS,IAAzC,mBAAO2b,EAAP,KAAiBC,EAAjB,KAEAjU,qBAAU,WACNqP,EAAQ,IACR4E,EAAY,MACb,CAACL,IAEJ,IAAMM,EAAS,uCAAG,4BAAArb,EAAA,yDACA,KAAVoB,EADU,iEAGVwD,GAAU,GAHA,SAIW/E,EAAQ,mBAAD,OACLkb,GACnB,OACA,CAAE1U,GAAIjF,GACN,CACIkG,cAAehI,EAAKf,QATlB,OAIJ4R,EAJI,OAYViL,EAAYjL,EAAOmG,IACnB1R,GAAU,GAbA,kDAeVA,GAAU,GAfA,0DAAH,qDAmBT6R,EAAO,uCAAG,4BAAAzW,EAAA,2DACRuW,EAAKlV,OAAS,GADN,iEAGR6Z,GAAa,GAHL,SAIarb,EAAQ,mBAAD,OACLmQ,GACnB,MACA,KACA,CACI1I,cAAehI,EAAKf,QATpB,OAIF4R,EAJE,OAYRqG,EAAQrG,GACR+K,GAAa,GAbL,kDAeRA,GAAa,GAfL,0DAAH,qDAmBPvE,EAAmB,WACrB9R,GAAU,SAAClE,GAAD,OAAaA,KACvB8V,KAaJ,OAJAtP,qBAAU,WACF6I,GAAcqL,MACnB,CAACja,IAGA,sBAAKM,UAAWC,KAAEkH,IAAM,IAAMlH,KAAEiV,aAAhC,UACKhO,EACG,qBACIlH,UACIO,IAAY2B,kBAAoB,IAAMjC,KAAEE,YAFhD,SAKKP,EAAmBsH,EAAO3J,KAE/B,KACJ,sBAAKyC,UAAWC,KAAE6L,UAAY,IAAM7L,KAAEkV,KAAtC,UACKnT,EACG,qBAAKhC,UAAWC,KAAEqG,uBAAlB,SACI,cAAC,IAAD,CACIhF,MAAOZ,EAAaE,eACpB7C,SAAS,EACTgE,IAAK9B,KAAE+B,OACPC,KAAM,OAId,uBACIvC,MACI+Z,EACMna,EAAcma,EAAUH,GACxB1Z,EAAmB,SAAUrC,GAEvCuC,KAAK,OACLE,UAAWC,KAAE8L,aAGrB,qBACI/L,UAAWC,KAAE+L,YACbnK,QAAS,kBAAMoT,KAFnB,SAII,cAAC,GAAD,CAAmBtQ,GAAI,sBAG9B1F,GACG,qBAAKe,UAAWC,KAAEmV,SAAlB,SACKmE,EACG,qBAAKvZ,UAAWC,KAAEqG,uBAAlB,SACI,cAAC,IAAD,CACIhF,MAAOZ,EAAaE,eACpB7C,SAAS,EACTgE,IAAK9B,KAAE+B,OACPC,KAAM,OAId,cAAC,KAAD,CAAY4B,MAAO,CAAExC,MAAO,OAAQuD,OAAQ,QAA5C,gBACKiQ,QADL,IACKA,OADL,EACKA,EAAMhN,KAAI,SAACpI,GAAD,OACP,qBAEIO,UACIO,IAAY2B,kBACZ,IACAjC,KAAEoV,aAENxT,QAAS,kBAtEnB,SAACnC,GAEnBW,EAAOX,EAAMiV,IACbM,IAmE2CK,CAAc7V,IAPjC,SASKH,EAAcG,EAAKmV,GAAU0E,IARzB7Z,EAAKkV,eCrIjCiF,GAAwB,SAAC,GAW/B,IAVH1S,EAUE,EAVFA,MACA9J,EASE,EATFA,KACAiD,EAQE,EARFA,OACAX,EAOE,EAPFA,MAEAuQ,GAKE,EANFxD,UAME,EALFwD,UACAD,EAIE,EAJFA,UACAzS,EAGE,EAHFA,aACA2P,EAEE,EAFFA,KACAc,EACE,EADFA,OAEA,EAA0BlQ,mBAAS,IAAnC,mBAAOyB,EAAP,KAAcoT,EAAd,KAEAlN,qBAAU,WACF/F,GAASA,EAAMC,OAAS,EACxBgT,EAASjT,GAETiT,EAAS,MAEd,CAACjT,IAEJ,IAAMuR,EAAa,SAACvR,GAChBW,EAAO,CAAEjD,OAAMsC,WAqBnB,OACI,4CACKH,QADL,IACKA,OADL,EACKA,EAAOsI,KAAI,SAACpI,EAAMqI,GAAP,OACR,mCACI,sBAAK9H,UAAWC,KAAE4Z,aAAlB,UACI,cAAC,GAAD,CACI3S,MAAOA,EACP9J,KAAK,OACLiD,OAAQ,SAACX,GAAD,OA1Bd,SAACA,EAAOoI,GACtB,IAAIoJ,EAAQ,aAAO3R,GACnB2R,EAASpJ,GAASpI,EAClBuR,EAAWC,GAuB4B4I,CAAUpa,EAAOoI,IACpCpI,MAAOD,EACP6O,aAAcN,EAAO,GAAGM,aACxB+K,iBAAkBrL,EAAO,GAAGqL,iBAC5B9b,aAAcA,EACdoX,QAAS3G,EAAO,GAAG2G,QACnBC,QAAS5G,EAAO,GAAG4G,QACnB0E,KAAMpM,IAEV,qBACIlN,UAAWC,KAAEgT,cACbpR,QAAS,SAACwP,GACNA,EAAEC,kBA1BR,SAACxJ,GACnB,IAAIoJ,EAAQ,aAAO3R,GACnB2R,EAASvI,OAAOb,EAAO,GACvBzH,EAAO,CAAEjD,OAAMsC,MAAOwR,IAwBEgB,CAAcpK,IAJtB,SAOI,cAAC,GAAD,CAAmBnD,GAAG,oBAKtC,qBACI9C,QAAS,kBA1CL,WACZ,IAAIqP,EAAQ,aAAO3R,GACnB2R,EAAS3D,KAAKuD,KAAUb,IACxBgB,EAAWC,GAuCY0C,IACf5T,UACIO,IAAY2B,kBAAoB,IAAMjC,KAAEmS,oBAHhD,SAMKxS,EAAmBoQ,EAAWzS,SC7DlC4Q,GAAY,SAAC,GASnB,IARL1O,EAQI,EARJA,KACAY,EAOI,EAPJA,OACAX,EAMI,EANJA,MACA0O,EAKI,EALJA,gBACA9G,EAII,EAJJA,GACAmI,EAGI,EAHJA,QACAlS,EAEI,EAFJA,aACA2P,EACI,EADJA,KAEA,MAAkB,iBAAdzN,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd2J,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB+M,UAAW2B,IAGC,UAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd2J,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB+M,UAAW2B,IAGC,SAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd+J,GAAIA,EACJJ,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB2H,WAAY5H,EAAK4H,WACjBoF,UAAW2B,IAGC,QAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd+J,GAAIA,EACJJ,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB2H,WAAY5H,EAAK4H,WACjBoF,UAAW2B,IAGC,SAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd2J,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB+M,UAAW2B,IAGC,cAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd2J,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClByK,UAAW1K,EAAK0K,UAChBsC,UAAW2B,IAGC,QAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd2J,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB+M,UAAW2B,IAGC,UAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd2J,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB+M,UAAW2B,IAGC,eAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd2J,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB+M,UAAW2B,IAGC,2BAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd2J,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB+M,UAAW2B,IAGC,oBAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd2J,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB+M,UAAW2B,IAGC,sBAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd2J,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB+M,UAAW2B,IAGC,kBAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACdyQ,OAAQvO,EAAKuO,OACb3N,OAAQA,EACRX,MAAOA,EACP+M,UAAW2B,IAGC,0BAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd2J,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB4O,aAAc7O,EAAK6O,aACnB7B,UAAW2B,IAGC,cAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACdkS,QAASA,EACTF,OAAQ9P,EAAK8P,OACbC,iBAAkB/P,EAAK+P,iBACvBnP,OAAQA,EACRX,MAAOA,EACP+M,UAAW2B,IAGC,kCAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACNgD,YAAazQ,EAAKyQ,YAClB3S,aAAcA,EACduS,UAAWrQ,EAAKqQ,UAChB3P,YAAaV,EAAKU,YAClB8P,SAAUxQ,EAAKwQ,SACfR,QAASA,EACTvI,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB4O,aAAc7O,EAAK6O,aACnByB,yBAA0BtQ,EAAKsQ,yBAC/BC,UAAWvQ,EAAKuQ,UAChBvD,UAAW2B,IAGC,2BAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd+U,YAAa7S,EAAK6S,YAClBpL,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB+M,UAAW2B,IAGC,wCAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACdgS,OAAQ9P,EAAK8P,OACbnS,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB+M,UAAW2B,EACX6B,SAAUxQ,EAAKwQ,SACfD,UAAWvQ,EAAKuQ,YAGJ,gBAAdvQ,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd2J,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB4O,aAAc7O,EAAK6O,aACnB+K,iBAAkB5Z,EAAK4Z,iBACvB1E,QAASlV,EAAKkV,QACdC,QAASnV,EAAKmV,QACdnI,UAAW2B,IAGC,uBAAd3O,EAAKK,KAGL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACdgS,OAAQ9P,EAAK8P,OACbnS,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB+M,UAAW2B,EACX6B,SAAUxQ,EAAKwQ,SACfD,UAAWvQ,EAAKuQ,UAChBhC,OAAQvO,EAAKuO,SAGD,qBAAdvO,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACdH,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB+M,UAAW2B,EACX6B,SAAUxQ,EAAKwQ,SACfD,UAAWvQ,EAAKuQ,YAGJ,cAAdvQ,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd2J,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB+M,UAAW2B,IAGC,mBAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACd2J,MAAOzH,EAAKyH,MACZ9J,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClB4O,aAAc7O,EAAK6O,aACnBqG,QAASlV,EAAKkV,QACdC,QAASnV,EAAKmV,QACdnI,UAAW2B,IAGC,eAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACdkS,QAASA,EACTvI,MAAOzH,EAAKyH,MACZoH,aAAc7O,EAAK6O,aACnB7B,UAAW2B,IAGC,gBAAd3O,EAAKK,KAEL,cAAC,GAAD,CACEoN,KAAMA,EACN3P,aAAcA,EACdH,KAAMqC,EAAKC,MACXW,OAAQA,EACRX,MAAOA,EAAMD,EAAKC,OAClBqQ,yBAA0BtQ,EAAKsQ,yBAC/BN,QAASA,EACTnI,GAAIA,EACJ8G,gBAAiBA,IAGhB,MAGHwI,GAAe,SAACG,GAGpB,IAAIC,GAFJD,EAAO,IAAI3M,KAAK2M,IAEDE,UAAY,EAAIF,EAAKE,UAA1B,WAA0CF,EAAKE,WACrDC,EACFH,EAAK7H,WAAa,EAAI6H,EAAK7H,WAAa,EAAxC,WAAgD6H,EAAK7H,WAAa,GAChEiI,EAAOJ,EAAKK,cAEhB,MAAM,GAAN,OAAUJ,EAAV,YAAiBE,EAAjB,YAA0BC,IAGf4C,GAAqB,SAAChb,GACjC,IAAImS,EAAQ,aAAOnS,GAInB,OAHAmS,EAAS8I,MAAK,SAAU1b,EAAG2b,GACzB,OAAO3b,EAAE4b,OAASD,EAAEC,UAEfhJ,GAGIiJ,GAAiB,CAC5BC,WAAY,eACZ/b,IAAK,WACL2P,OAAQ,CACN,CACE9G,MAAO,UACPxH,MAAO,WACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,OACPxH,MAAO,OACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,QACPxH,MAAO,YACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,SACPxH,MAAO,QACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,OACPxH,MAAO,aACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,iBAAkBxH,MAAO,kFAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,wCAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,0FAGtC,CACEwH,MAAO,YACPxH,MAAO,SACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,eAAgBxH,MAAO,kCAChC,CAAEwH,MAAO,eAAgBxH,MAAO,8CAChC,CAAEwH,MAAO,eAAgBxH,MAAO,SAGpC,CACEwH,MAAO,mBACPxH,MAAO,oBACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,YACPxH,MAAO,qBACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,qBACPxH,MAAO,kBACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,sBACPxH,MAAO,gBACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,sBACPxH,MAAO,gBACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,SACPxH,MAAO,SACPI,KAAM,SACNua,QAAQ,EACRtJ,QAAS,MAKFuJ,GAAgB,CAC3BF,WAAY,eACZ/b,IAAK,WAEL2P,OAAQ,CACN,CACElO,KAAM,YACNyP,OAAQ,CAAC,WAAY,WAAY,WAAY,YAC7CC,iBAAkB,CAEhB,CACE,CACEtI,MAAO,UACPxH,MAAO,WACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,OACPxH,MAAO,OACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,QACPxH,MAAO,YACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,SACPxH,MAAO,QACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,mBACPxH,MAAO,oBACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,YACPxH,MAAO,qBACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,SACPxH,MAAO,SACPI,KAAM,SACNua,QAAQ,EACRtJ,QAAS,KAIb,CACE,CACErR,MAAO,gBACPI,KAAM,cACNiR,QAAS,GACThB,yBAA0B,CACxB,CACE7I,MAAO,cACPxH,MAAO,aACPI,KAAM,YACNiR,QAAS,IAEX,CACE7J,MAAO,SACPxH,MAAO,SACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,OAAQxH,MAAO,8CACxB,CACEwH,MAAO,SACPxH,MAAO,8CAET,CACEwH,MAAO,OACPxH,MAAO,6DAIb,CACEwH,MAAO,iBACPxH,MAAO,gBACPI,KAAM,QACNiR,QAAS,IAEX,CACE7J,MAAO,qBACPxH,MAAO,oBACPI,KAAM,QACNiR,QAAS,IAEX,CACE7J,MAAO,cACPxH,MAAO,iBACPI,KAAM,QACNiR,QAAS,IAEX,CACE7J,MAAO,iBACPxH,MAAO,QACPI,KAAM,MACNiR,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,yBACPxH,MAAO,oDAET,CACEwH,MAAO,yBACPxH,MAAO,sBAET,CACEwH,MAAO,yBACPxH,MAAO,sBAET,CACEwH,MAAO,yBACPxH,MAAO,4BAET,CACEwH,MAAO,yBACPxH,MAAO,sBAET,CACEwH,MAAO,yBACPxH,MAAO,kCAET,CACEwH,MAAO,yBACPxH,MAAO,8BAIb,CACEwH,MAAO,UACPxH,MAAO,SACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,kBACPxH,MAAO,0DAET,CACEwH,MAAO,kBACPxH,MAAO,gEAET,CACEwH,MAAO,kBACPxH,MAAO,2CAIb,CACEwH,MAAO,eACPxH,MAAO,QACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,wBACPxH,MAAO,KAET,CACEwH,MAAO,wBACPxH,MAAO,KAET,CACEwH,MAAO,wBACPxH,MAAO,KAET,CACEwH,MAAO,wBACPxH,MAAO,KAET,CACEwH,MAAO,wBACPxH,MAAO,OAIb,CACEwH,MAAO,cACPxH,MAAO,cACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,sBACPxH,MAAO,mFAET,CACEwH,MAAO,sBACPxH,MAAO,oDAET,CACEwH,MAAO,sBACPxH,MAAO,8CAET,CACEwH,MAAO,sBACPxH,MAAO,0DAET,CACEwH,MAAO,sBACPxH,MAAO,8FAQnB,CACE,CACEwH,MAAO,GACPpH,KAAM,aACNwO,aAAc,0BAIlB,CACE,CACEpH,WAAO8Q,EACPlI,UAAW,SAAC/Q,GAAD,gBAAa6X,GAAa7X,EAAKgY,MAA/B,YAAwChY,EAAKmI,QACxD/G,YAAa,mBACbT,MAAO,QACPI,KAAM,gCACNoQ,YAAa,IACbmK,QAAQ,EACRtJ,QAAS,GACTf,UAAW,WACX1B,aAAc,cACd2B,SAAU,CACR8G,KAAM,GACN7P,MAAO,GACPqT,KAAM,IAERxK,yBAA0B,CACxB,CACE7I,MAAO,OACPxH,MAAO,OACPI,KAAM,YACNiR,QAAS,GACT5G,WAAW,GAEb,CACEjD,MAAO,QACPxH,MAAO,QACPI,KAAM,QACNiR,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,UACPxH,MAAO,OACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,WAUZyJ,GAAsB,CACjCJ,WAAY,eACZ/b,IAAK,eAEL2P,OAAQ,CACN,CACElO,KAAM,YACNyP,OAAQ,CAAC,WAAY,WAAY,WAAY,YAC7CC,iBAAkB,CAEhB,CACE,CACEtI,MAAO,UACPxH,MAAO,WACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,OACPxH,MAAO,OACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,QACPxH,MAAO,YACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,SACPxH,MAAO,QACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,mBACPxH,MAAO,oBACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,YACPxH,MAAO,qBACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,SACPxH,MAAO,SACPI,KAAM,SACNua,QAAQ,EACRtJ,QAAS,KAIb,CACE,CACErR,MAAO,gBACPI,KAAM,cACNiR,QAAS,GACThB,yBAA0B,CACxB,CACE7I,MAAO,cACPxH,MAAO,aACPI,KAAM,YACNiR,QAAS,IAEX,CACE7J,MAAO,SACPxH,MAAO,SACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,OAAQxH,MAAO,8CACxB,CACEwH,MAAO,SACPxH,MAAO,8CAET,CACEwH,MAAO,OACPxH,MAAO,6DAIb,CACEwH,MAAO,iBACPxH,MAAO,gBACPI,KAAM,QACNiR,QAAS,IAEX,CACE7J,MAAO,qBACPxH,MAAO,oBACPI,KAAM,QACNiR,QAAS,IAEX,CACE7J,MAAO,cACPxH,MAAO,iBACPI,KAAM,QACNiR,QAAS,IAEX,CACE7J,MAAO,iBACPxH,MAAO,QACPI,KAAM,MACNiR,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,yBACPxH,MAAO,oDAET,CACEwH,MAAO,yBACPxH,MAAO,sBAET,CACEwH,MAAO,yBACPxH,MAAO,sBAET,CACEwH,MAAO,yBACPxH,MAAO,4BAET,CACEwH,MAAO,yBACPxH,MAAO,sBAET,CACEwH,MAAO,yBACPxH,MAAO,kCAET,CACEwH,MAAO,yBACPxH,MAAO,8BAIb,CACEwH,MAAO,UACPxH,MAAO,SACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,kBACPxH,MAAO,0DAET,CACEwH,MAAO,kBACPxH,MAAO,gEAET,CACEwH,MAAO,kBACPxH,MAAO,2CAIb,CACEwH,MAAO,eACPxH,MAAO,QACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,wBACPxH,MAAO,KAET,CACEwH,MAAO,wBACPxH,MAAO,KAET,CACEwH,MAAO,wBACPxH,MAAO,KAET,CACEwH,MAAO,wBACPxH,MAAO,KAET,CACEwH,MAAO,wBACPxH,MAAO,OAIb,CACEwH,MAAO,cACPxH,MAAO,cACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,sBACPxH,MAAO,mFAET,CACEwH,MAAO,sBACPxH,MAAO,oDAET,CACEwH,MAAO,sBACPxH,MAAO,8CAET,CACEwH,MAAO,sBACPxH,MAAO,0DAET,CACEwH,MAAO,sBACPxH,MAAO,8FAQnB,CACE,CACEwH,MAAO,WACPxH,MAAO,WACPI,KAAM,QACNiR,QAAS,KAIb,CACE,CACE7J,WAAO8Q,EACPlI,UAAW,SAAC/Q,GAAD,gBAAa6X,GAAa7X,EAAKgY,MAA/B,YAAwChY,EAAKmI,QACxD/G,YAAa,mBACbT,MAAO,QACPI,KAAM,gCACNoQ,YAAa,IACbmK,QAAQ,EACRtJ,QAAS,GACTf,UAAW,WACX1B,aAAc,cACd2B,SAAU,CACR8G,KAAM,GACN7P,MAAO,GACPqT,KAAM,IAERxK,yBAA0B,CACxB,CACE7I,MAAO,OACPxH,MAAO,OACPI,KAAM,YACNiR,QAAS,GACT5G,WAAW,GAEb,CACEjD,MAAO,QACPxH,MAAO,QACPI,KAAM,QACNiR,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,UACPxH,MAAO,OACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,WAUZ0J,GAAa,CACxBL,WAAY,eACZ/b,IAAK,WAEL2P,OAAQ,CACN,CACElO,KAAM,YACNyP,OAAQ,CACN,WACA,WACA,WACA,WACA,WACA,YAEFC,iBAAkB,CAEhB,CACE,CACEtI,MAAO,UACPxH,MAAO,WACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,OACPxH,MAAO,OACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,QACPxH,MAAO,YACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,SACPxH,MAAO,QACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,mBACPxH,MAAO,oBACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,YACPxH,MAAO,qBACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,SACPxH,MAAO,SACPI,KAAM,SACNua,QAAQ,EACRtJ,QAAS,KAIb,CACE,CACErR,MAAO,gBACPI,KAAM,cACNiR,QAAS,GACThB,yBAA0B,CACxB,CACE7I,MAAO,cACPxH,MAAO,aACPI,KAAM,YACNiR,QAAS,IAEX,CACE7J,MAAO,SACPxH,MAAO,SACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,OAAQxH,MAAO,8CACxB,CACEwH,MAAO,SACPxH,MAAO,8CAET,CACEwH,MAAO,OACPxH,MAAO,6DAIb,CACEwH,MAAO,iBACPxH,MAAO,gBACPI,KAAM,QACNiR,QAAS,IAEX,CACE7J,MAAO,qBACPxH,MAAO,oBACPI,KAAM,QACNiR,QAAS,IAEX,CACE7J,MAAO,cACPxH,MAAO,iBACPI,KAAM,QACNiR,QAAS,IAEX,CACE7J,MAAO,iBACPxH,MAAO,QACPI,KAAM,MACNiR,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,yBACPxH,MAAO,oDAET,CACEwH,MAAO,yBACPxH,MAAO,sBAET,CACEwH,MAAO,yBACPxH,MAAO,sBAET,CACEwH,MAAO,yBACPxH,MAAO,4BAET,CACEwH,MAAO,yBACPxH,MAAO,sBAET,CACEwH,MAAO,yBACPxH,MAAO,kCAET,CACEwH,MAAO,yBACPxH,MAAO,8BAIb,CACEwH,MAAO,UACPxH,MAAO,SACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,kBACPxH,MAAO,0DAET,CACEwH,MAAO,kBACPxH,MAAO,gEAET,CACEwH,MAAO,kBACPxH,MAAO,2CAIb,CACEwH,MAAO,eACPxH,MAAO,QACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,wBACPxH,MAAO,KAET,CACEwH,MAAO,wBACPxH,MAAO,KAET,CACEwH,MAAO,wBACPxH,MAAO,KAET,CACEwH,MAAO,wBACPxH,MAAO,KAET,CACEwH,MAAO,wBACPxH,MAAO,OAIb,CACEwH,MAAO,cACPxH,MAAO,cACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,sBACPxH,MAAO,mFAET,CACEwH,MAAO,sBACPxH,MAAO,oDAET,CACEwH,MAAO,sBACPxH,MAAO,8CAET,CACEwH,MAAO,sBACPxH,MAAO,0DAET,CACEwH,MAAO,sBACPxH,MAAO,8FAQnB,CACE,CACEwH,MAAO,WACPxH,MAAO,WACPI,KAAM,eACNiR,QAAS,KAIb,CACE,CACE7J,MAAO,YACPxH,MAAO,WACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACEwH,MAAO,WACPxH,MAAO,aACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,iBAAkBxH,MAAO,kFAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,wCAClC,CACEwH,MAAO,iBACPxH,MAAO,0FAIb,CACEwH,MAAO,cACPxH,MAAO,SACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,eAAgBxH,MAAO,kCAChC,CAAEwH,MAAO,eAAgBxH,MAAO,8CAChC,CAAEwH,MAAO,eAAgBxH,MAAO,SAGpC,CACEwH,MAAO,mBACPxH,MAAO,oBACPI,KAAM,wBACNwO,aAAc,qBACdyC,QAAS,KAeb,CACE,CACE7J,MAAO,GACPpH,KAAM,aACNwO,aAAc,0BAIlB,CACE,CACEpH,WAAO8Q,EACPlI,UAAW,SAAC/Q,GAAD,gBAAa6X,GAAa7X,EAAKgY,MAA/B,YAAwChY,EAAKmI,QACxD/G,YAAa,mBACbT,MAAO,QACPI,KAAM,gCACNoQ,YAAa,IACbmK,QAAQ,EACRtJ,QAAS,GACTf,UAAW,WACX1B,aAAc,cACd2B,SAAU,CACR8G,KAAM,GACN7P,MAAO,GACPqT,KAAM,IAERxK,yBAA0B,CACxB,CACE7I,MAAO,OACPxH,MAAO,OACPI,KAAM,YACNiR,QAAS,GACT5G,WAAW,GAEb,CACEjD,MAAO,QACPxH,MAAO,QACPI,KAAM,QACNiR,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,UACPxH,MAAO,OACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,WAUZ2J,GAAmB,CAC9BN,WAAY,eACZ/b,IAAK,eAEL2P,OAAQ,CACN,CACElO,KAAM,YACNyP,OAAQ,CACN,WACA,WACA,WACA,WACA,WACA,YAEFC,iBAAkB,CAEhB,CACE,CACEtI,MAAO,UACPxH,MAAO,WACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,OACPxH,MAAO,OACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,QACPxH,MAAO,YACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,SACPxH,MAAO,QACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,mBACPxH,MAAO,oBACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,YACPxH,MAAO,qBACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,SACPxH,MAAO,SACPI,KAAM,SACNua,QAAQ,EACRtJ,QAAS,KAIb,CACE,CACErR,MAAO,gBACPI,KAAM,cACNiR,QAAS,GACThB,yBAA0B,CACxB,CACE7I,MAAO,cACPxH,MAAO,aACPI,KAAM,YACNiR,QAAS,IAEX,CACE7J,MAAO,SACPxH,MAAO,SACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,OAAQxH,MAAO,8CACxB,CACEwH,MAAO,SACPxH,MAAO,8CAET,CACEwH,MAAO,OACPxH,MAAO,6DAIb,CACEwH,MAAO,iBACPxH,MAAO,gBACPI,KAAM,QACNiR,QAAS,IAEX,CACE7J,MAAO,qBACPxH,MAAO,oBACPI,KAAM,QACNiR,QAAS,IAEX,CACE7J,MAAO,cACPxH,MAAO,iBACPI,KAAM,QACNiR,QAAS,IAEX,CACE7J,MAAO,iBACPxH,MAAO,QACPI,KAAM,MACNiR,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,yBACPxH,MAAO,oDAET,CACEwH,MAAO,yBACPxH,MAAO,sBAET,CACEwH,MAAO,yBACPxH,MAAO,sBAET,CACEwH,MAAO,yBACPxH,MAAO,4BAET,CACEwH,MAAO,yBACPxH,MAAO,sBAET,CACEwH,MAAO,yBACPxH,MAAO,kCAET,CACEwH,MAAO,yBACPxH,MAAO,8BAIb,CACEwH,MAAO,UACPxH,MAAO,SACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,kBACPxH,MAAO,0DAET,CACEwH,MAAO,kBACPxH,MAAO,gEAET,CACEwH,MAAO,kBACPxH,MAAO,2CAIb,CACEwH,MAAO,eACPxH,MAAO,QACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,wBACPxH,MAAO,KAET,CACEwH,MAAO,wBACPxH,MAAO,KAET,CACEwH,MAAO,wBACPxH,MAAO,KAET,CACEwH,MAAO,wBACPxH,MAAO,KAET,CACEwH,MAAO,wBACPxH,MAAO,OAIb,CACEwH,MAAO,eACPxH,MAAO,cACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,sBACPxH,MAAO,mFAET,CACEwH,MAAO,sBACPxH,MAAO,oDAET,CACEwH,MAAO,sBACPxH,MAAO,8CAET,CACEwH,MAAO,sBACPxH,MAAO,0DAET,CACEwH,MAAO,sBACPxH,MAAO,8FAQnB,CACE,CACEwH,MAAO,WACPxH,MAAO,WACPI,KAAM,QACNiR,QAAS,KAIb,CACE,CACE7J,MAAO,YACPxH,MAAO,WACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACEwH,MAAO,WACPxH,MAAO,aACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,iBAAkBxH,MAAO,kFAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,wCAClC,CACEwH,MAAO,iBACPxH,MAAO,0FAIb,CACEwH,MAAO,cACPxH,MAAO,SACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,eAAgBxH,MAAO,kCAChC,CAAEwH,MAAO,eAAgBxH,MAAO,8CAChC,CAAEwH,MAAO,eAAgBxH,MAAO,SAGpC,CACEwH,MAAO,mBACPxH,MAAO,oBACPI,KAAM,wBACNwO,aAAc,qBACdyC,QAAS,KAeb,CACE,CACE7J,MAAO,GACPpH,KAAM,aACNwO,aAAc,0BAIlB,CACE,CACEpH,WAAO8Q,EACPlI,UAAW,SAAC/Q,GAAD,gBAAa6X,GAAa7X,EAAKgY,MAA/B,YAAwChY,EAAKmI,QACxD/G,YAAa,mBACbT,MAAO,QACPI,KAAM,gCACNoQ,YAAa,IACbmK,QAAQ,EACRtJ,QAAS,GACTf,UAAW,WACX1B,aAAc,cACd2B,SAAU,CACR8G,KAAM,GACN7P,MAAO,GACPqT,KAAM,IAERxK,yBAA0B,CACxB,CACE7I,MAAO,OACPxH,MAAO,OACPI,KAAM,YACNiR,QAAS,GACT5G,WAAW,GAEb,CACEjD,MAAO,QACPxH,MAAO,QACPI,KAAM,QACNiR,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,UACPxH,MAAO,OACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,WA6EZ4J,GAAgB,CAC3Btc,IAAK,cACL2P,OAAQ,CACN,CACE9G,MAAO,iBACPxH,MAAO,UACPI,KAAM,QACNiR,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,aACPxH,MAAO,QACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,QAMrBkb,GAAoB,CAC/Bvc,IAAK,yBACL2P,OAAQ,CACN,CACE9G,MAAO,WACPxH,MAAO,mBACPI,KAAM,YACNua,QAAQ,EACRtJ,QAAS,MAKF8J,GAAyB,CACpCxc,IAAK,yBACL2P,OAAQ,CACN,CACE9G,MAAO,WACPxH,MAAO,qBACPI,KAAM,YACNua,QAAQ,EACRtJ,QAAS,MAKF+J,GAAiB,CAC5BV,WAAY,mBACZ/b,IAAK,eACL2P,OAAQ,CACN,CACE9G,MAAO,YACPxH,MAAO,WACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACE4S,aAAa,EACbpL,MAAO,QACPxH,MAAO,QACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,cACPxH,MAAO,UACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,cACPxH,MAAO,UACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,iBACPxH,MAAO,gBACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,MAKFgK,GAAuB,CAClCX,WAAY,mBACZ/b,IAAK,eACL2P,OAAQ,CACN,CACElO,KAAM,YACNkb,SAAU,CACRC,OAAQ,CACNhc,QAAQ,EACR0E,KAAM,KAGV4L,OAAQ,CAAC,eAAgB,eAAgB,gBACzCC,iBAAkB,CAEhB,CACE,CACE1P,KAAM,gBACNkO,OAAQ,CACN,CACE9G,MAAO,YACPxH,MAAO,WACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACEwH,MAAO,SACPxH,MAAO,SACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,eAAgBxH,MAAO,kCAChC,CAAEwH,MAAO,eAAgBxH,MAAO,8CAChC,CAAEwH,MAAO,eAAgBxH,MAAO,OAChC,CACEwH,MAAO,eACPxH,MAAO,cAMjB,CACE4S,aAAa,EACbpL,MAAO,QACPxH,MAAO,QACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACE4S,aAAa,EACbpL,MAAO,cACPxH,MAAO,OACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,iBACPxH,MAAO,SACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,eACPxH,MAAO,aACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,eACT1J,WAAY,CACV,CACEH,MAAO,qBACPxH,MAAO,gBAET,CACEwH,MAAO,qBACPxH,MAAO,kBAMf,CACE,CACE4S,aAAa,EACbpL,MAAO,SACP8G,OAAQ,CACN,CACE2G,QAAS,MACTC,QAAS,QACTtG,aAAc,yBACdxO,KAAM,cACNuZ,iBAAkB,yBAClBtI,QAAS,OAGbrR,MAAO,YACPsQ,UAAW,WACXlQ,KAAM,qBACNua,QAAQ,EACRpK,SAAU,GACVc,QAAS,KAIb,CACE,CACEuB,aAAa,EACbpL,MAAO,SACP8G,OAAQ,CACN,CACE2G,QAAS,MACTC,QAAS,SACTtG,aAAc,yBACdxO,KAAM,cACNuZ,iBAAkB,yBAClBtI,QAAS,OAGbrR,MAAO,YACPsQ,UAAW,WACXlQ,KAAM,qBACNua,QAAQ,EACRpK,SAAU,GACVc,QAAS,SAQRmK,GAAqB,CAChC,CACE5I,aAAa,EACbpL,MAAO,eACP8G,OAAQ,CACN,CACE2G,QAAS,KACTC,QAAS,OACT9U,KAAM,cACNwO,aAAc,uBACd+K,iBAAkB,wBAClBtI,QAAS,OAGbrR,MAAO,gBACPsQ,UAAW,UACXlQ,KAAM,qBACNua,QAAQ,EACRpK,SAAU,GACVc,QAAS,KAIAoK,GAAsB,CACjCf,WAAY,iBACZ/b,IAAK,iBAEL2P,OAAQ,CACN,CACElO,KAAM,YACNyP,OAAQ,CAAC,aAAc,aAAc,cACrCC,iBAAkB,CAEhB,CACE,CACE1P,KAAM,gBACNkO,OAAQ,CACN,CACE9G,MAAO,YACPxH,MAAO,WACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACEwH,MAAO,SACPxH,MAAO,SACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,eAAgBxH,MAAO,kCAChC,CAAEwH,MAAO,eAAgBxH,MAAO,8CAChC,CAAEwH,MAAO,eAAgBxH,MAAO,WAKxC,CACE4S,aAAa,EACbpL,MAAO,QACPxH,MAAO,QACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,iBACPxH,MAAO,SACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,cACPxH,MAAO,cACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACE4S,aAAa,EACbpL,MAAO,eACPxH,MAAO,cACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,OAKhC,CACE,CACEwH,MAAO,SACPxH,MAAO,UACPI,KAAM,gCACNoQ,YAAa,IACbmK,QAAQ,EACRtJ,QAAS,GACTf,UAAW,YACX1B,aAAc,mBACd2B,SAAU,CACR/I,MAAO,CACL,CAAE7J,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,KAE5B0b,MAAO,GACPb,KAAM,CACJ,CAAEld,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9BqQ,yBAA0B,CACxB,CACEuC,aAAa,EACbpL,MAAO,cACPxH,MAAO,QACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,iBACPxH,MAAO,SACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,cACPxH,MAAO,QACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,aACPxH,MAAO,OACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,SAOpC,CACE,CACE4S,aAAa,EACbpL,MAAO,mBACPxH,MAAO,cACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,WAS3B2b,GAAoB,CAC/BjB,WAAY,eACZ/b,IAAK,eACL2P,OAAQ,CACN,CACElO,KAAM,YACNyP,OAAQ,CAAC,WAAY,WAAY,YACjCC,iBAAkB,CAEhB,CACE,CACE1P,KAAM,gBACNkO,OAAQ,CACN,CACE9G,MAAO,YACPxH,MAAO,WACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACEwH,MAAO,SACPxH,MAAO,SACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,eAAgBxH,MAAO,kCAChC,CAAEwH,MAAO,eAAgBxH,MAAO,8CAChC,CAAEwH,MAAO,eAAgBxH,MAAO,WAKxC,CACE4S,aAAa,EACbpL,MAAO,QACPxH,MAAO,QACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,iBACPxH,MAAO,SACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,cACPxH,MAAO,cACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACE4S,aAAa,EACbpL,MAAO,eACPxH,MAAO,cACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,OAKhC,CACE,CACEwH,MAAO,SACPxH,MAAO,YACPI,KAAM,gCACNoQ,YAAa,IACbmK,QAAQ,EACRtJ,QAAS,GACTf,UAAW,cACX1B,aAAc,mBACd2B,SAAU,CACR/I,MAAO,CACL,CAAE7J,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,KAE5B4b,IAAK,GACLvC,SAAU,CACR,CAAE1b,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,KAE5B6b,QAAS,CAAC,CAAErU,MAAO,GAAI+M,MAAO,GAAIE,WAAW,KAE/CpE,yBAA0B,CACxB,CACEuC,aAAa,EACbpL,MAAO,kBACPxH,MAAO,QACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,kBACPxH,MAAO,MACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,kBACPxH,MAAO,WACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACE4S,aAAa,EACbpL,MAAO,GACPxH,MAAO,UACPI,KAAM,mBACNkQ,UAAW,kBACXqK,QAAQ,EACRpK,SAAU,CACR/I,MAAO,GACP+M,MAAO,GACPE,WAAW,GAEbpD,QAAS,CAAC,CAAE7J,MAAO,GAAI+M,MAAO,GAAIE,WAAW,QAMrD,CACE,CACE7B,aAAa,EACbpL,MAAO,GACPqI,OAAQ,CAAC,eAAgB,cAAe,aACxC7P,MAAO,SACPsQ,UAAW,kBACXlQ,KAAM,sCACNua,QAAQ,EACRpK,SAAU,CACRiD,YAAa,GACbG,UAAW,GACXC,YAAa,CACX,CAAEjW,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,KAE5B4B,MAAO,IAETyP,QAAS,SAQRyK,GAAoB,CAC/BpB,WAAY,iBACZ/b,IAAK,aACL2P,OAAQ,CACN,CACElO,KAAM,YACNyP,OAAQ,CAAC,aAAc,aAAc,cACrCC,iBAAkB,CAEhB,CACE,CACE1P,KAAM,gBACNkO,OAAQ,CACN,CACE9G,MAAO,YACPxH,MAAO,WACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACEwH,MAAO,SACPxH,MAAO,SACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,eAAgBxH,MAAO,kCAChC,CAAEwH,MAAO,eAAgBxH,MAAO,8CAChC,CAAEwH,MAAO,eAAgBxH,MAAO,WAKxC,CACE4S,aAAa,EACbpL,MAAO,QACPxH,MAAO,QACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,iBACPxH,MAAO,SACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,cACPxH,MAAO,cACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACE4S,aAAa,EACbpL,MAAO,eACPxH,MAAO,cACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,OAKhC,CACE,CACEwH,MAAO,SACPxH,MAAO,UACPI,KAAM,gCACNoQ,YAAa,IACbmK,QAAQ,EACRtJ,QAAS,GACTf,UAAW,YACX1B,aAAc,mBACd2B,SAAU,CACR/I,MAAO,CACL,CAAE7J,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,KAE5B0b,MAAO,GACPb,KAAM,CACJ,CAAEld,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9BqQ,yBAA0B,CACxB,CACEuC,aAAa,EACbpL,MAAO,cACPxH,MAAO,QACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,iBACPxH,MAAO,SACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,cACPxH,MAAO,QACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,aACPxH,MAAO,OACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,SAOpC,CACE,CACE4S,aAAa,EACbpL,MAAO,mBACPxH,MAAO,cACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,WAS3B+b,GAAkB,CAC7BrB,WAAY,mBACZ/b,IAAK,sBACL2P,OAAQ,CACN,CACE9G,MAAO,eACPxH,MAAO,OACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,eACPxH,MAAO,OACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,MAKF2K,GAAkB,CAC7BtB,WAAY,eACZ/b,IAAK,WACL2P,OAAQ,CACN,CACElO,KAAM,YACNyP,OAAQ,CAAC,WAAY,WAAY,YACjCC,iBAAkB,CAEhB,CACE,CACE1P,KAAM,gBACNkO,OAAQ,CACN,CACE9G,MAAO,YACPxH,MAAO,WACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACEwH,MAAO,SACPxH,MAAO,SACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,eAAgBxH,MAAO,kCAChC,CAAEwH,MAAO,eAAgBxH,MAAO,8CAChC,CAAEwH,MAAO,eAAgBxH,MAAO,WAKxC,CACE4S,aAAa,EACbpL,MAAO,QACPxH,MAAO,QACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,iBACPxH,MAAO,SACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,cACPxH,MAAO,cACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACE4S,aAAa,EACbpL,MAAO,eACPxH,MAAO,cACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,OAKhC,CACE,CACEwH,MAAO,SACPxH,MAAO,YACPI,KAAM,gCACNoQ,YAAa,IACbmK,QAAQ,EACRtJ,QAAS,GACTf,UAAW,cACX1B,aAAc,mBACd2B,SAAU,CACR/I,MAAO,CACL,CAAE7J,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,KAE5B4b,IAAK,GACLvC,SAAU,CACR,CAAE1b,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,KAE5B6b,QAAS,CAAC,CAAErU,MAAO,GAAI+M,MAAO,GAAIE,WAAW,KAE/CpE,yBAA0B,CACxB,CACEuC,aAAa,EACbpL,MAAO,kBACPxH,MAAO,QACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,kBACPxH,MAAO,MACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,kBACPxH,MAAO,WACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACE4S,aAAa,EACbpL,MAAO,GACPxH,MAAO,UACPI,KAAM,mBACNkQ,UAAW,kBACXqK,QAAQ,EACRpK,SAAU,CACR/I,MAAO,GACP+M,MAAO,GACPE,WAAW,GAEbpD,QAAS,CAAC,CAAE7J,MAAO,GAAI+M,MAAO,GAAIE,WAAW,QAMrD,CACE,CACE7B,aAAa,EACbpL,MAAO,GACPqI,OAAQ,CAAC,eAAgB,cAAe,aACxC7P,MAAO,SACPsQ,UAAW,kBACXlQ,KAAM,sCACNua,QAAQ,EACRpK,SAAU,CACRiD,YAAa,GACbG,UAAW,GACXC,YAAa,CACX,CAAEjW,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,KAE5B4B,MAAO,IAETyP,QAAS,SAQR4K,GAAc,CACzBvB,WAAY,eACZ/b,IAAK,WACL2P,OAAQ,CACN,CACE9G,MAAO,YACPxH,MAAO,WACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACE4S,aAAa,EACbpL,MAAO,QACPxH,MAAO,QACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,eACPxH,MAAO,eACPkc,cAAe,wBACf9b,KAAM,qBACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,kBACPxH,MAAO,mBACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,MAKF8K,GAAgB,CAC3BzB,WAAY,iBACZ/b,IAAK,aACL2P,OAAQ,CACN,CACE9G,MAAO,YACPxH,MAAO,WACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACE4S,aAAa,EACbpL,MAAO,QACPxH,MAAO,QACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,eACPxH,MAAO,eACPkc,cAAe,wBACf9b,KAAM,uBACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,gBACPxH,MAAO,iBACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,MAKF+K,GAAe,CAC1B1B,WAAY,qBACZ/b,IAAK,iBACL2P,OAAQ,CACN,CACE9G,MAAO,YACPxH,MAAO,WACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACE4S,aAAa,EACbpL,MAAO,QACPxH,MAAO,SACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,aACPxH,MAAO,aACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,gBACPxH,MAAO,MACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,iBACPxH,MAAO,MACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,MAKFgL,GAAkB,CAC7B3B,WAAY,gBACZ/b,IAAK,YACL2P,OAAQ,CACN,CACE9G,MAAO,YACPxH,MAAO,WACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACE4S,aAAa,EACbpL,MAAO,QACPxH,MAAO,SACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEI,KAAM,gBACNkO,OAAQ,CACN,CACE9G,MAAO,WACPxH,MAAO,WACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,UACT1J,WAAY,CACV,CAAEH,MAAO,iBAAkBxH,MAAO,WAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,UAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,cAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,QAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,aAGtC,CACEwH,MAAO,SACPxH,MAAO,SACPI,KAAM,MACNkc,SAAS,EACT3B,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,eACPxH,MAAO,yFAET,CAAEwH,MAAO,eAAgBxH,MAAO,kCAChC,CAAEwH,MAAO,eAAgBxH,MAAO,8CAChC,CAAEwH,MAAO,eAAgBxH,MAAO,WAKxC,CACE4S,aAAa,EACbpL,MAAO,cACPxH,MAAO,UACPI,KAAM,kBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,QACPxH,MAAO,QACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,cACPxH,MAAO,QACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,QACPxH,MAAO,QACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,cAAexH,MAAO,GAC/B,CAAEwH,MAAO,cAAexH,MAAO,GAC/B,CAAEwH,MAAO,cAAexH,MAAO,GAC/B,CAAEwH,MAAO,cAAexH,MAAO,KAGnC,CACEwH,MAAO,QACPxH,MAAO,QACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,cAAexH,MAAO,8CAC/B,CAAEwH,MAAO,cAAexH,MAAO,gEAC/B,CAAEwH,MAAO,cAAexH,MAAO,0DAC/B,CAAEwH,MAAO,cAAexH,MAAO,kFAC/B,CAAEwH,MAAO,cAAexH,MAAO,oDAC/B,CAAEwH,MAAO,cAAexH,MAAO,0DAC/B,CAAEwH,MAAO,cAAexH,MAAO,wEAGnC,CACEwH,MAAO,cACPxH,MAAO,cACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAYgN,MAKL4H,GAAc,CACzB7B,WAAY,gBACZ/b,IAAK,YACL2P,OAAQ,CACN,CACE9G,MAAO,YACPxH,MAAO,WACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACE4S,aAAa,EACbpL,MAAO,QACPxH,MAAO,SACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,WACPxH,MAAO,WACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,UACT1J,WAAY,CACV,CAAEH,MAAO,iBAAkBxH,MAAO,WAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,UAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,cAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,QAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,aAGtC,CACEwH,MAAO,SACPxH,MAAO,SACPI,KAAM,MACNkc,SAAS,EACT3B,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,eACPxH,MAAO,yFAET,CAAEwH,MAAO,eAAgBxH,MAAO,kCAChC,CAAEwH,MAAO,eAAgBxH,MAAO,8CAChC,CAAEwH,MAAO,eAAgBxH,MAAO,SAGpC,CACEwH,MAAO,aACPxH,MAAO,eACPkc,cAAe,wBACf9b,KAAM,qBACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,iBACPxH,MAAO,gBAGPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,cACPxH,MAAO,UACPI,KAAM,kBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,QACPxH,MAAO,QACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,cACPxH,MAAO,QACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,cACPxH,MAAO,cACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAYgN,MAKL6H,GAAkB,CAC7B9B,WAAY,gBACZ/b,IAAK,YACL2P,OAAQ,CACN,CACE9G,MAAO,YACPxH,MAAO,WACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACE4S,aAAa,EACbpL,MAAO,QACPxH,MAAO,QACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEI,KAAM,gBACNkO,OAAQ,CACN,CACE9G,MAAO,WACPxH,MAAO,WACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,uCACT1J,WAAY,CACV,CAAEH,MAAO,iBAAkBxH,MAAO,wCAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,0DAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,8CAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,aAGtC,CACEwH,MAAO,SACPxH,MAAO,SACPI,KAAM,MACNkc,SAAS,EACT3B,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,eACPxH,MAAO,yFAET,CAAEwH,MAAO,eAAgBxH,MAAO,kCAChC,CAAEwH,MAAO,eAAgBxH,MAAO,8CAChC,CAAEwH,MAAO,eAAgBxH,MAAO,WAKxC,CACEwH,MAAO,aACPxH,MAAO,OACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,QACPxH,MAAO,QACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,mDACT1J,WAAY,CACV,CAAEH,MAAO,cAAexH,MAAO,oDAC/B,CAAEwH,MAAO,cAAexH,MAAO,gDAGnC,CACEwH,MAAO,QACPxH,MAAO,QACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,cAAexH,MAAO,GAC/B,CAAEwH,MAAO,cAAexH,MAAO,GAC/B,CAAEwH,MAAO,cAAexH,MAAO,GAC/B,CAAEwH,MAAO,cAAexH,MAAO,KAGnC,CACEwH,MAAO,QACPxH,MAAO,QACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,cAAexH,MAAO,8CAC/B,CAAEwH,MAAO,cAAexH,MAAO,gEAC/B,CAAEwH,MAAO,cAAexH,MAAO,0DAC/B,CAAEwH,MAAO,cAAexH,MAAO,kFAC/B,CAAEwH,MAAO,cAAexH,MAAO,oDAC/B,CAAEwH,MAAO,cAAexH,MAAO,0DAC/B,CAAEwH,MAAO,cAAexH,MAAO,wEAGnC,CACEwH,MAAO,cACPxH,MAAO,cACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAYgN,IAEd,CACEnN,MAAO,QACPxH,MAAO,QACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,MAKFoL,GAAc,CACzB/B,WAAY,gBACZ/b,IAAK,YACL2P,OAAQ,CACN,CACE9G,MAAO,YACPxH,MAAO,WACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACE4S,aAAa,EACbpL,MAAO,QACPxH,MAAO,QACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,WACPxH,MAAO,WACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,uCACT1J,WAAY,CACV,CAAEH,MAAO,iBAAkBxH,MAAO,wCAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,0DAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,8CAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,aAGtC,CACEwH,MAAO,aACPxH,MAAO,eACPkc,cAAe,wBACf9b,KAAM,qBACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,iBACPxH,MAAO,gBAGPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,QACPxH,MAAO,QACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,mDACT1J,WAAY,CACV,CAAEH,MAAO,cAAexH,MAAO,oDAC/B,CAAEwH,MAAO,cAAexH,MAAO,gDAGnC,CACEwH,MAAO,cACPxH,MAAO,cACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAYgN,IAEd,CACEnN,MAAO,QACPxH,MAAO,QACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,MAKFqL,GAAoB,CAC/B/d,IAAK,gBACL2P,OAAQ,CACN,CACE9G,MAAO,YACPxH,MAAO,WACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACE4S,aAAa,EACbpL,MAAO,QACPxH,MAAO,SACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEI,KAAM,gBACNkO,OAAQ,CACN,CACE9G,MAAO,WACPxH,MAAO,WACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,UACT1J,WAAY,CACV,CAAEH,MAAO,iBAAkBxH,MAAO,WAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,UAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,cAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,QAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,aAGtC,CACEwH,MAAO,SACPxH,MAAO,SACPI,KAAM,MACNkc,SAAS,EACT3B,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,eACPxH,MAAO,yFAET,CAAEwH,MAAO,eAAgBxH,MAAO,kCAChC,CAAEwH,MAAO,eAAgBxH,MAAO,8CAChC,CAAEwH,MAAO,eAAgBxH,MAAO,WAKxC,CACE4S,aAAa,EACbpL,MAAO,cACPxH,MAAO,UACPI,KAAM,kBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,QACPxH,MAAO,QACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACEuB,aAAa,EACbpL,MAAO,cACPxH,MAAO,QACPI,KAAM,yBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,QACPxH,MAAO,QACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,cAAexH,MAAO,GAC/B,CAAEwH,MAAO,cAAexH,MAAO,GAC/B,CAAEwH,MAAO,cAAexH,MAAO,GAC/B,CAAEwH,MAAO,cAAexH,MAAO,KAGnC,CACEwH,MAAO,QACPxH,MAAO,QACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,cAAexH,MAAO,8CAC/B,CAAEwH,MAAO,cAAexH,MAAO,gEAC/B,CAAEwH,MAAO,cAAexH,MAAO,0DAC/B,CAAEwH,MAAO,cAAexH,MAAO,kFAC/B,CAAEwH,MAAO,cAAexH,MAAO,oDAC/B,CAAEwH,MAAO,cAAexH,MAAO,0DAC/B,CAAEwH,MAAO,cAAexH,MAAO,wEAGnC,CACEwH,MAAO,cACPxH,MAAO,cACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAYgN,MAKLgI,GAAoB,CAC/Bhe,IAAK,gBACL2P,OAAQ,CACN,CACE9G,MAAO,YACPxH,MAAO,WACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACE4S,aAAa,EACbpL,MAAO,QACPxH,MAAO,QACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,IAEX,CACEjR,KAAM,gBACNkO,OAAQ,CACN,CACE9G,MAAO,WACPxH,MAAO,WACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,uCACT1J,WAAY,CACV,CAAEH,MAAO,iBAAkBxH,MAAO,wCAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,0DAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,8CAClC,CAAEwH,MAAO,iBAAkBxH,MAAO,aAGtC,CACEwH,MAAO,SACPxH,MAAO,SACPI,KAAM,MACNkc,SAAS,EACT3B,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CACEH,MAAO,eACPxH,MAAO,yFAET,CAAEwH,MAAO,eAAgBxH,MAAO,kCAChC,CAAEwH,MAAO,eAAgBxH,MAAO,8CAChC,CAAEwH,MAAO,eAAgBxH,MAAO,WAKxC,CACEwH,MAAO,QACPxH,MAAO,QACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,mDACT1J,WAAY,CACV,CAAEH,MAAO,cAAexH,MAAO,oDAC/B,CAAEwH,MAAO,cAAexH,MAAO,gDAGnC,CACEwH,MAAO,QACPxH,MAAO,QACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,cAAexH,MAAO,GAC/B,CAAEwH,MAAO,cAAexH,MAAO,GAC/B,CAAEwH,MAAO,cAAexH,MAAO,GAC/B,CAAEwH,MAAO,cAAexH,MAAO,KAGnC,CACEwH,MAAO,QACPxH,MAAO,QACPI,KAAM,OACNiR,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,cAAexH,MAAO,8CAC/B,CAAEwH,MAAO,cAAexH,MAAO,gEAC/B,CAAEwH,MAAO,cAAexH,MAAO,0DAC/B,CAAEwH,MAAO,cAAexH,MAAO,kFAC/B,CAAEwH,MAAO,cAAexH,MAAO,oDAC/B,CAAEwH,MAAO,cAAexH,MAAO,0DAC/B,CAAEwH,MAAO,cAAexH,MAAO,wEAGnC,CACEwH,MAAO,cACPxH,MAAO,cACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAYgN,IAEd,CACEnN,MAAO,QACPxH,MAAO,QACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,MAKFuL,GAAoB,CAC/Bje,IAAK,sBACL2P,OAAQ,CACN,CACE9G,MAAO,QACPxH,MAAO,OACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,eACPxH,MAAO,OACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,MAKFwL,GAAqB,CAChCle,IAAK,qBACL2P,OAAQ,CACN,CACE9G,MAAO,YACPxH,MAAO,WACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,GACT1J,WAAY,CACV,CAAEH,MAAO,UAAWxH,MAAO,MAC3B,CAAEwH,MAAO,UAAWxH,MAAO,SAG/B,CACE4S,aAAa,EACbpL,MAAO,QACPxH,MAAO,SACPI,KAAM,oBACNua,QAAQ,EACRtJ,QAAS,CACP,CAAE1T,SAAU,KAAMqC,MAAO,IACzB,CAAErC,SAAU,MAAOqC,MAAO,MAG9B,CACEwH,MAAO,aACPxH,MAAO,aACPI,KAAM,OACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,gBACPxH,MAAO,MACPI,KAAM,MACNua,QAAQ,EACRtJ,QAAS,IAEX,CACE7J,MAAO,iBACPxH,MAAO,MACPI,KAAM,QACNua,QAAQ,EACRtJ,QAAS,M,wCCvlHFyL,GAAW,SAAC,GAA6B,IAA3B9c,EAA0B,EAA1BA,MAAOnC,EAAmB,EAAnBA,aACxB2H,EAAYT,KAElB,OACI,sBAAKzE,UAAWC,KAAE4F,WAAlB,UACI,sBAAK7F,UAAWC,KAAE6F,aAAlB,UACI,qBACI9F,UACIO,IAAYwF,mBAAqB,IAAM9F,KAAE+F,YAFjD,SAKKpG,EAAmB,cAAerC,KAEvC,qBACIyC,UAAWC,KAAEgG,aACbpE,QAAS,kBAAMqD,EAAUV,eAF7B,SAII,cAAC,GAAD,CAAmBG,GAAG,eAI9B,qBACI3E,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEwc,YADvD,SAGK7c,EAAmBF,EAAOnC,KAG/B,qBAAKyC,UAAWC,KAAEyc,cAAlB,SACI,qBACI1c,UAAWC,KAAEoG,gBACbxE,QAAS,kBAAMqD,EAAUV,eAF7B,SAII,qBACIxE,UACIO,IAAY2B,kBACZ,IACAjC,KAAEsG,qBAJV,SAOK3G,EAAmB,KAAMrC,aC/BrCof,GAAoB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,OAAQ3d,EAAuB,EAAvBA,OAAQ4d,EAAe,EAAfA,SAC1C3X,EAAYT,KACZ7G,EAAOC,qBAAWlB,GACxB,EAAgDgB,IAAxCQ,EAAR,EAAQA,QAA4BJ,GAApC,EAAiBE,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SACpC,EAAoCD,mBAAS,IAA7C,mBAAOsH,EAAP,KAAmBC,EAAnB,KACA,EAA8BvH,mBAAS,IAAvC,mBAAOwH,EAAP,KAAgBC,EAAhB,KACA,EAA0BzH,mBAAS,IAAnC,mBAAO4B,EAAP,KAAcod,EAAd,KAEArX,qBAAU,WAKNqX,EAASlf,EAAKJ,kBACf,CAACI,EAAKJ,iBAETiI,qBAAU,WACN7H,EAAKH,mBACN,IAEH,IAOM+H,EAAkB,WACpBH,EAAc,IACdE,EAAW,KAGfE,qBAAU,WACND,MACD,CAACN,EAAUZ,SAEd,IAAMuN,EAAW,uCAAG,sBAAAvT,EAAA,6DAChBkH,IADgB,kBAGNrH,EAAQ,mBAAD,cACUye,QADV,IACUA,OADV,EACUA,EAAQve,KAC3B,OACA,CAAEU,KAAMW,GACR,CACIkG,cAAc,GAAD,OAAKhI,EAAKf,SARnB,OAWZ0I,EAAW,gBAXC,gDAaZF,EAAc,SAbF,yDAAH,qDAiBjB,OACI,sBAAKrF,UAAWC,KAAE4F,WAAlB,UACI,sBAAK7F,UAAWC,KAAE6F,aAAlB,UACI,qBACI9F,UACIO,IAAYwF,mBAAqB,IAAM9F,KAAE+F,YAFjD,SAKKpG,EAAmB,UAAWhC,EAAKL,gBAExC,qBACIyC,UAAWC,KAAEgG,aACbpE,QAAS,kBAAMqD,EAAUV,eAF7B,SAII,cAAC,GAAD,CAAmBG,GAAG,eAG9B,cAAC,KAAD,CACId,MAAO,CAAExC,MAAO,OAAQuD,OAAQ,OAAQ2E,UAAW,IADvD,SAGI,sBAAKvJ,UAAWC,KAAE2R,MAAlB,UACK3S,EACG,mBACIe,UAAWC,KAAE8c,cACbtI,KACI/W,EACA,iBAAmBmf,EAEvBvc,OAAO,SANX,SAQI,qBACIN,UACIO,IAAY2B,kBACZjC,KAAE+c,mBAHV,SAMKpd,EACG,eACAhC,EAAKL,kBAIjB,KAtBR,OAuBKmC,QAvBL,IAuBKA,OAvBL,EAuBKA,EAAOmI,KAAI,SAACoV,EAAWnV,GAAZ,aACR,sBAEIjE,MAAO,CACHxC,MAAO,OACPkI,UAAW,IAJnB,UAOI,qBACIvJ,UACIO,IAAY2B,kBACZ,IACAjC,KAAEid,kBAJV,SAOKD,EAAU7f,OAdnB,OAgBKwf,QAhBL,IAgBKA,GAhBL,UAgBKA,EAAQ5O,cAhBb,aAgBK,EAAgBnG,KAAI,SAACpI,GAClB,OAAO0O,GAAU,CACbjB,KAAMtP,EAAKP,SACXE,aAAcK,EAAKL,aACnBkC,KAAMA,EACNY,OAAQ,SAACtB,GAAD,OAlGrB,SAACgQ,EAAKhQ,GACrB,IAAImS,EAAQ,aAAOxR,GACfoI,EAAQoJ,EAAS9D,WAAU,SAAC3N,GAAD,OAAUA,EAAKsP,MAAQA,KACtDmC,EAASpJ,GAAO/I,EAAK3B,MAAQ2B,EAAKW,MAClCod,EAAS5L,GA+FuBD,CAAWgM,EAAUlO,IAAKhQ,IAC9BW,MAAOA,EAAMoI,GACbsG,gBAAiBxQ,EAAKJ,sBAvBzBsK,WA8BrB,qBACI9H,UACIO,IAAY2B,kBACZ,KACoB,IAAnBoD,EAAQ3F,OAAeM,KAAEiG,SAAWjG,KAAEkG,aAJ/C,SAOKvG,EAAmB0F,GAAWF,EAAYxH,EAAKL,gBAEpD,sBAAKyC,UAAWC,KAAEmG,mBAAlB,UACI,qBACIpG,UAAWC,KAAEoG,gBACbxE,QAAS,kBAAMgQ,KAFnB,SAIK9T,EACG,qBAAKiC,UAAWC,KAAEqG,uBAAlB,SACI,cAAC,IAAD,CACIhF,MAAOZ,EAAaE,eACpB7C,SAAS,EACTgE,IAAK9B,KAAE+B,OACPC,KAAM,OAId,qBACIjC,UACIO,IAAY2B,kBACZ,IACAjC,KAAEsG,qBAJV,SAOK3G,EAAmB,OAAQhC,EAAKL,kBAI7C,qBACIyC,UAAWC,KAAEuG,kBACb3E,QAAS,kBAAMqD,EAAUV,eAF7B,SAII,qBACIxE,UACIO,IAAY2B,kBACZ,IACAjC,KAAEwG,uBAJV,SAOK7G,EAAmB,SAAUhC,EAAKL,yBC9K9C4f,GAAc,SAAC,GAAsC,IAAD,EAAnCpe,EAAmC,EAAnCA,KAAM6d,EAA6B,EAA7BA,OAAQQ,EAAqB,EAArBA,OAAQne,EAAa,EAAbA,OAC1CiG,EAAYT,KACZ7G,EAAOC,qBAAWlB,GACxB,EAAgDgB,IAAxCQ,EAAR,EAAQA,QAA4BJ,GAApC,EAAiBE,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SACpC,EAAoCD,mBAAS,IAA7C,mBAAOsH,EAAP,KAAmBC,EAAnB,KACA,EAA8BvH,mBAAS,IAAvC,mBAAOwH,EAAP,KAAgBC,EAAhB,KACA,EAA0BzH,mBAAS,IAAnC,mBAAO4B,EAAP,KAAcod,EAAd,KAEArX,qBAAU,WAAO,IAAD,EACRlG,EAAQ,GACN,OAANqd,QAAM,IAANA,GAAA,UAAAA,EAAQ5O,cAAR,SAAgB2C,SAAQ,SAAClR,GACrBF,EAAME,EAAKC,OAASX,EAAOA,EAAKU,EAAKC,OAASD,EAAKsR,WAEvD+L,EAASvd,KACV,CAACqd,IAEJ,IAAM3L,EAAa,SAAClS,GAChB,IAAImS,EAAQ,eAAQxR,GACpBwR,EAASnS,EAAK3B,MAAQ2B,EAAKW,MAC3Bod,EAAS5L,IAGP1L,EAAkB,WACpBH,EAAc,IACdE,EAAW,KAGfE,qBAAU,WACND,MACD,CAACN,EAAUZ,SAEd,IAAMuN,EAAW,uCAAG,sBAAAvT,EAAA,6DAChBkH,IADgB,kBAGNrH,EAAQ,mBAAD,cACUye,QADV,IACUA,OADV,EACUA,EAAQve,KAC3B,OACA,CAAEU,KAAMW,EAAOqP,IAAG,OAAEhQ,QAAF,IAAEA,OAAF,EAAEA,EAAMgQ,KAC1B,CACInJ,cAAc,GAAD,OAAKhI,EAAKf,SARnB,OAWZ0I,EAAWxG,EAAO,eAAiB,SACnCqe,IAZY,gDAcZ/X,EAActG,EAAO,QAAU,eAdnB,yDAAH,qDA4CjB,OACI,sBAAKiB,UAAWC,KAAE4F,WAAlB,UACI,sBAAK7F,UAAWC,KAAE6F,aAAlB,UACI,qBACI9F,UACIO,IAAYwF,mBAAqB,IAAM9F,KAAE+F,YAFjD,SAKKpG,EAAmB,UAAWhC,EAAKL,gBAExC,qBACIyC,UAAWC,KAAEgG,aACbpE,QAAS,kBAAMqD,EAAUV,eAF7B,SAII,cAAC,GAAD,CAAmBG,GAAG,eAG9B,cAAC,KAAD,CACId,MAAO,CAAExC,MAAO,OAAQuD,OAAQ,OAAQ2E,UAAW,IADvD,SAGI,sBAAKvJ,UAAWC,KAAE2R,MAAlB,UACK3S,EACG,mBACIe,UAAWC,KAAE8c,cACbtI,KACI/W,EACA,8CAEJ4C,OAAO,SANX,SAQI,qBACIN,UACIO,IAAY2B,kBACZjC,KAAE+c,mBAENnb,QAAS,aALb,SAOKjC,EACG,eACAhC,EAAKL,kBAIjB,KAvBR,OAwBKqf,QAxBL,IAwBKA,GAxBL,UAwBKA,EAAQ5O,cAxBb,aAwBK,EAAgBnG,KAAI,SAACpI,GAClB,OAAO0O,GAAU,CACbjB,KAAMtP,EAAKP,SACXE,aAAcK,EAAKL,aACnBkC,KAAMA,EACNY,OAAQ4Q,EACRvR,MAAOA,EACP0O,gBAAiBxQ,EAAKJ,yBAKtC,qBACIwC,UACIO,IAAY2B,kBACZ,KACoB,IAAnBoD,EAAQ3F,OAAeM,KAAEiG,SAAWjG,KAAEkG,aAJ/C,SAOKvG,EAAmB0F,GAAWF,EAAYxH,EAAKL,gBAEpD,sBAAKyC,UAAWC,KAAEmG,mBAAlB,UACI,qBACIpG,UAAWC,KAAEoG,gBACbxE,QAAS,kBAAMgQ,KAFnB,SAIK9T,EACG,qBAAKiC,UAAWC,KAAEqG,uBAAlB,SACI,cAAC,IAAD,CACIhF,MAAOZ,EAAaE,eACpB7C,SAAS,EACTgE,IAAK9B,KAAE+B,OACPC,KAAM,OAId,qBACIjC,UACIO,IAAY2B,kBACZ,IACAjC,KAAEsG,qBAJV,SAOK3G,EAAmB,OAAQhC,EAAKL,kBAI7C,qBACIyC,UAAWC,KAAEuG,kBACb3E,QAAS,kBAAMqD,EAAUV,eAF7B,SAII,qBACIxE,UACIO,IAAY2B,kBACZ,IACAjC,KAAEwG,uBAJV,SAOK7G,EAAmB,SAAUhC,EAAKL,yBCjL9C8f,I,OAAa,SAAC,GAOpB,IANH5F,EAME,EANFA,MACA1Y,EAKE,EALFA,KACAue,EAIE,EAJFA,WACAC,EAGE,EAHFA,WACAC,EAEE,EAFFA,eACAC,EACE,EADFA,cAEMvY,EAAYT,KACZ7G,EAAOC,qBAAWlB,GACxB,EAAgDgB,IAAZI,GAApC,EAAQI,QAAR,EAAiBF,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SACpC,EAAoCD,mBAAS,IAA7C,mBAAOsH,EAAP,KACA,GADA,KAC8BtH,mBAAS,KAAvC,mBAAOwH,EAAP,KACA,GADA,KAC0BxH,mBAAS2f,IAAnC,mBAAO/d,EAAP,KAAcod,EAAd,KAWA,OACI,sBAAK9c,UAAWC,KAAE4F,WAAlB,UACI,sBAAK7F,UAAWC,KAAE6F,aAAlB,UACI,qBACI9F,UACIO,IAAYwF,mBAAqB,IAAM9F,KAAE+F,YAFjD,SAKKpG,EAAmB6X,EAAO7Z,EAAKL,gBAEpC,qBACIyC,UAAWC,KAAEgG,aACbpE,QAAS,kBAAMqD,EAAUV,eAF7B,SAII,cAAC,GAAD,CAAmBG,GAAG,eAG9B,cAAC,KAAD,CACId,MAAO,CAAExC,MAAO,OAAQuD,OAAQ,OAAQ2E,UAAW,IADvD,SAGI,qBAAKvJ,UAAWC,KAAE2R,MAAlB,SACK7S,EAAK8I,KAAI,SAACpI,EAAMqI,GAAP,OACN,sBAEI9H,UAAWC,KAAE8H,aACblG,QAAS,kBA7BZ,SAACnC,GAClBod,EAASpd,EAAM4d,IA4BoB5V,CAAajI,IAHhC,UAKI,qBACIO,UACIN,IAAUD,EAAK6d,GACTrd,KAAE+H,YACF/H,KAAEgI,OAGhB,qBAAKjI,UAAWC,KAAEiI,UAAlB,SACKtI,EACGH,EAAK8d,GACL3f,EAAKL,kBAdRuK,UAqBrB,qBACI9H,UACIO,IAAY2B,kBACZ,KACoB,IAAnBoD,EAAQ3F,OAAeM,KAAEiG,SAAWjG,KAAEkG,aAJ/C,SAOKvG,EAAmB0F,GAAWF,EAAYxH,EAAKL,gBAEpD,sBAAKyC,UAAWC,KAAEmG,mBAAlB,UACI,qBACIpG,UAAWC,KAAEoG,gBACbxE,QAAS,kBAhErB2b,EAAe9d,QACfwF,EAAUV,eA6DF,SAIKzG,EACG,qBAAKiC,UAAWC,KAAEqG,uBAAlB,SACI,cAAC,IAAD,CACIhF,MAAOZ,EAAaE,eACpB7C,SAAS,EACTgE,IAAK9B,KAAE+B,OACPC,KAAM,OAId,qBACIjC,UACIO,IAAY2B,kBACZ,IACAjC,KAAEsG,qBAJV,SAOK3G,EAAmB,OAAQhC,EAAKL,kBAI7C,qBACIyC,UAAWC,KAAEuG,kBACb3E,QAAS,kBAAMqD,EAAUV,eAF7B,SAII,qBACIxE,UACIO,IAAY2B,kBACZ,IACAjC,KAAEwG,uBAJV,SAOK7G,EAAmB,SAAUhC,EAAKL,0BC5GrDmgB,GAAa,CACjB,CACExW,MAAO,QACP7I,IAAK,sBAEP,CACE6I,MAAO,QACP7I,IAAK,sBAEP,CACE6I,MAAO,QACP7I,IAAK,sBAEP,CACE6I,MAAO,YACP7I,IAAK,0BAEP,CACE6I,MAAO,SACP7I,IAAK,wBAGP,CACE6I,MAAO,QACP7I,IAAK,sBAEP,CACE6I,MAAO,SACP7I,IAAK,yBAcHsf,GAAiB,CACrB,CACEzW,MAAO,QACP7I,IAAK,2BAIIuf,GAAS,WAAO,IAAD,IACpB1Y,EAAYT,KACZ7G,EAAOC,qBAAWlB,GACxB,EAAgDgB,IAAxCQ,EAAR,EAAQA,QACR,GADA,EAAiBF,MAAjB,EAAwBmB,WAAxB,EAAoCrB,QACRD,oBAAS,IAArC,mBAAOmB,EAAP,KAAekE,EAAf,KACA,EAA8BrF,mBAAS,MAAvC,mBAAO+f,EAAP,KAAgBC,EAAhB,KACA,EAAiDhgB,mBAAS6f,IAA1D,mBAAOI,EAAP,KAAyBC,EAAzB,KAEMC,EAAU,uCAAG,4BAAA3f,EAAA,+EAEMH,EAAQ,oBAAqB,MAAO,KAAM,CAC7DyH,cAAehI,EAAKf,QAHP,OAET4R,EAFS,OAKfqP,EAAWrP,EAAOoP,SALH,uGAAH,qDAShBpY,qBAAU,WACgB,mFAApB7H,EAAKT,YACP6gB,EAAqBN,MAEtB,CAAC9f,EAAKT,aAETsI,qBAAU,WACRwY,MACC,IAEH,IAAMC,EAAiB,WACrB/a,GAAWlE,IAiEb,OACE,mCACE,sBAAKe,UAAWC,IAAE0D,KAAlB,UACE,qBAAK3D,UAAWC,IAAEyC,MAAlB,SAeE,qBAAK1C,UAAWC,IAAEke,KAAlB,SACGJ,EAAiBlW,KAAI,SAACpI,EAAMqI,GAAP,OACpB,cAAC,IAAD,CACEsW,GAAI3e,EAAKpB,IAET2B,UAAWC,IAAEoe,YACbC,gBAAiBre,IAAEse,mBAJrB,SAME,qBACEve,UAAWO,IAAY2B,kBAAoB,IAAMjC,IAAEue,WADrD,SAGG5e,EAAmBH,EAAKyH,MAAOtJ,EAAKL,iBAPlCkC,EAAKyH,cAalB,sBAAKlH,UAAWC,IAAEwe,MAAlB,UACE,qBAAKze,UAAWC,IAAEiN,KAAlB,SACE,sBAAKrL,QAAS,WAjDtBqD,EAAUX,YACR,cAAC,GAAD,CACEkT,MAAO,iBACP1Y,KAAMnB,EAAKJ,eACX8f,WAAY,OACZC,WAAY,OACZC,eAAgB5f,EAAKN,YACrBmgB,cAAe7f,EAAKP,aA0CwB2C,UAAWC,IAAEye,OAArD,UACG9e,EAAmB,WAAYhC,EAAKL,cACpC,MACA,UAAAK,EAAKJ,sBAAL,eAAqBgC,MAAK,SAACC,GAAD,OAAUA,EAAKsN,OAASnP,EAAKP,aACpDuC,EAAkB,UAChBhC,EAAKJ,sBADW,aAChB,EAAqBgC,MACnB,SAACC,GAAD,OAAUA,EAAKsN,OAASnP,EAAKP,YAC7BD,KACFQ,EAAKL,cAEP,GACJ,qBACEsG,MAAO,CACL6P,WAAY,GAFhB,SAKE,cAAC,GAAD,CAAmB/O,GAAG,qBAI5B,sBAAK3E,UAAWf,EAASgB,IAAE0e,qBAAuB1e,IAAE2e,cAApD,UACE,sBACE5e,UAAWC,IAAE4e,qBACbhd,QAAS,kBAAMqc,KAFjB,UAIGjf,EACC,qBAAKe,UAAWO,IAAYmY,iBAAmB,IAAMzY,IAAEhD,MAAvD,SACGW,EAAKX,QAEN,KACJ,qBAAK+C,UAAWC,IAAE6e,QAAlB,SACE,qBACE9e,UACEO,IAAY2B,kBAAoB,IAAMjC,IAAE8e,cAF5C,oBASH9f,EACC,sBAAKe,UAAWC,IAAE+e,YAAlB,UACuB,mFAApBphB,EAAKT,WACJ,qCACE,qBACE6C,UAAWC,IAAEgf,oBACbpd,QAAS,kBA3G3Bqc,SACAhZ,EAAUX,YACR,cAAC,GAAD,CACExF,KAAM8e,EACNjB,OAAQjC,GACRyC,OAAQa,EACRhf,QAAQ,MAmGI,SAIE,qBACEe,UACEO,IAAYmY,iBACZ,IACAzY,IAAEif,yBAJN,SAOGtf,EACC,qBACAhC,EAAKL,kBAIX,cAAC,IAAD,CACE6gB,GAAI,sBACJpe,UAAWC,IAAEgf,oBACbX,gBAAiBre,IAAEgf,oBACnBpd,QAAS,kBAAMqc,KAJjB,SAME,qBACEle,UACEO,IAAYmY,iBACZ,IACAzY,IAAEif,yBAJN,SAOGtf,EAAmB,YAAahC,EAAKL,kBAG1C,qBACEyC,UAAWC,IAAEgf,oBACbpd,QAAS,kBAlK3Bqc,SACAhZ,EAAUX,YACR,cAAC,GAAD,CACEsY,SAAU,0BACVD,OAAQhC,GACR3b,QAAQ,MA2JI,SAIE,qBACEe,UACEO,IAAYmY,iBACZ,IACAzY,IAAEif,yBAJN,SAOGtf,EACC,0BACAhC,EAAKL,kBAIX,qBACEyC,UAAWC,IAAEgf,oBACbpd,QAAS,kBAxK3Bqc,SACAhZ,EAAUX,YACR,cAAC,GAAD,CACEsY,SAAU,gCACVD,OAAQ/B,GACR5b,QAAQ,MAiKI,SAIE,qBACEe,UACEO,IAAYmY,iBACZ,IACAzY,IAAEif,yBAJN,SAOGtf,EACC,oBACAhC,EAAKL,qBAKX,KACJ,qBACEyC,UAAWC,IAAEgf,oBACbpd,QAAS,kBAhNvBqc,SACAhZ,EAAUX,YAAY,cAAC,GAAD,MA6MV,SAIE,qBACEvE,UACEO,IAAYmY,iBACZ,IACAzY,IAAEif,yBAJN,SAOGtf,EAAmB,iBAAkBhC,EAAKL,kBAG/C,qBACEyC,UAAWC,IAAEgf,oBACbpd,QAAS,kBAnOvBqc,SACAhZ,EAAUX,YAAY,cAAC,GAAD,MAgOV,SAIE,qBACEvE,UACEO,IAAYmY,iBACZ,IACAzY,IAAEif,yBAJN,SAOGtf,EAAmB,gBAAiBhC,EAAKL,kBAG9C,qBACEyC,UAAWC,IAAEgf,oBACbpd,QAAS,kBAvOvBqc,SACAtgB,EAAKb,UAoOO,SAIE,qBACEiD,UACEO,IAAYmY,iBACZ,IACAzY,IAAEif,yBAJN,SAOGtf,EAAmB,SAAUhC,EAAKL,qBAIvC,iB,yCC9VH4hB,GAAS,SAAC,GAA2D,IAA1Dzf,EAAyD,EAAzDA,MAAO0f,EAAkD,EAAlDA,SAAUjf,EAAwC,EAAxCA,YAAakf,EAA2B,EAA3BA,QAAS9hB,EAAkB,EAAlBA,aAC3D,OACI,sBAAKyC,UAAWC,KAAE0D,KAAlB,UACI,uBACIjE,MAAOA,EACPI,KAAK,OACLE,UAAWC,KAAEC,MACbC,YAAaP,EAAmBO,EAAa5C,GAC7C6C,SAAU,SAACV,GAAD,OAAW0f,EAAS1f,EAAMY,OAAOZ,UAE/C,qBAAKM,UAAWC,KAAE0B,OAAQE,QAAS,kBAAMwd,EAAQ,IAAjD,SACI,cAAC,GAAD,CAAmB1a,GAAG,iB,2CCFzB2a,GAAO,SAAPA,EAAQ,GAA0G,IAAD,QAAxGvgB,EAAwG,EAAxGA,KAAM6d,EAAkG,EAAlGA,OAAQQ,EAA0F,EAA1FA,OAAQmC,EAAkF,EAAlFA,oBAAqBC,EAA6D,EAA7DA,eAAgBC,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,eAAgBxP,EAAiB,EAAjBA,YACrGhL,EAAYT,KACZ7G,EAAOC,qBAAWlB,GACxB,EAA8CgB,IAAvCQ,EAAP,EAAOA,QAA4BJ,GAAnC,EAAgBE,MAAhB,EAAuBmB,WAAvB,EAAmCrB,SACnC,EAAoCD,mBAAS,IAA7C,mBAAOsH,EAAP,KAAmBC,EAAnB,KACA,EAA8BvH,mBAAS,IAAvC,mBAAOwH,EAAP,KAAgBC,EAAhB,KACA,EAA0BzH,mBAAS,IAAnC,mBAAO4B,EAAP,KAAcod,EAAd,KACA,EAA0Chf,mBAAS,IAAnD,mBAAO6hB,EAAP,KAAsBC,EAAtB,KACA,EAAgC9hB,mBAAS,CAACkF,SAAU,KAApD,mBAAOA,EAAP,KAAiBC,EAAjB,KACA,EAAgCnF,mBAAS,IAAzC,mBAAOkd,EAAP,KAAiB6E,GAAjB,KACA,GAAoC/hB,mBAAS,GAA7C,qBAAOgiB,GAAP,MAAmBC,GAAnB,MACA,GAA4CjiB,oBAAS,GAArD,qBAAOkiB,GAAP,MAAuBC,GAAvB,MACA,GAAoCniB,mBAAS8e,GAA7C,qBAAOsD,GAAP,MAAmBC,GAAnB,MAMA1a,qBAAU,WAAO,IAAD,EACV2a,EAAWtP,KAAU8L,GACrB7d,GAAQA,EAAKkc,SAA8C,KAApC,UAAAlc,EAAKkc,cAAL,eAAavS,QAAQ,aAC9C0X,EAASpS,OAAO,GAAGuB,OAAOhC,KAAK,aAC/B6S,EAASpS,OAAO,GAAGwB,iBAAiBjC,KAAK2N,IACzC+E,IAAkB,IAEpBE,GAAcC,KACb,CAACxD,IAEJnX,qBAAU,WAAO,IAAD,EACVlG,EAAQ,GAkBZ,GAjBAA,EAAM8gB,cAAgBthB,EAAOA,EAAKshB,cAAgB,GAC5C,OAANzD,QAAM,IAANA,GAAA,UAAAA,EAAQ5O,cAAR,SAAgB2C,SAAQ,SAAClR,GACS,IAAD,EAAb,cAAdA,EAAKK,KACH,OAAJL,QAAI,IAAJA,GAAA,UAAAA,EAAM+P,wBAAN,SAAwBmB,SAAQ,SAACC,GACtB,OAATA,QAAS,IAATA,KAAWD,SAAQ,SAACE,GACG,kBAAjBA,EAAQ/Q,MACVP,EAAMsR,EAAQ7C,OAAO,GAAGtO,OAASX,EAAOA,EAAK8R,EAAQ7C,OAAO,GAAGtO,OAASoR,KAAUD,EAAQ7C,OAAO,GAAG+C,SACpGxR,EAAMsR,EAAQ7C,OAAO,GAAGtO,OAASX,EAAOA,EAAK8R,EAAQ7C,OAAO,GAAGtO,OAASoR,KAAUD,EAAQ7C,OAAO,GAAG+C,UAC/FxR,EAAMsR,EAAQnR,OAASX,EAAOA,EAAK8R,EAAQnR,OAASoR,KAAUD,EAAQE,eAG1D,kBAAdtR,EAAKK,MACdP,EAAME,EAAKuO,OAAO,GAAGtO,OAASX,EAAOA,EAAKU,EAAKuO,OAAO,GAAGtO,OAASoR,KAAUrR,EAAKuO,OAAO,GAAG+C,SAC3FxR,EAAME,EAAKuO,OAAO,GAAGtO,OAASX,EAAOA,EAAKU,EAAKuO,OAAO,GAAGtO,OAASoR,KAAUrR,EAAKuO,OAAO,GAAG+C,UACtFxR,EAAME,EAAKC,OAASX,EAAOA,EAAKU,EAAKC,OAASoR,KAAUrR,EAAKsR,YAEtE+L,EAASvd,GACLggB,EAAqB,CAAC,IAAD,EACnBe,EAAqB,GACN,OAAnBf,QAAmB,IAAnBA,GAAA,UAAAA,EAAqBvR,cAArB,SAA6B2C,SAAQ,SAAClR,GACpC6gB,EAAmB7gB,EAAKC,QAAa,OAAJX,QAAI,IAAJA,OAAA,EAAAA,EAAM4gB,eAAN,OAAsB5gB,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAM4gB,cAAclgB,EAAKC,OAASD,EAAKsR,WAEhG6O,EAAiBU,GAKnB,GAHId,GACFvc,EAAY,CAACD,UAAc,OAAJjE,QAAI,IAAJA,OAAA,EAAAA,EAAMiE,UAAWjE,EAAKiE,SAAW,KAEtD0c,EAAgB,CAAC,IAAD,EACda,EAAgB,GACN,OAAdb,QAAc,IAAdA,GAAA,UAAAA,EAAgB1R,cAAhB,SAAwB2C,SAAQ,SAAClR,GAC/B8gB,EAAc9gB,EAAKC,OAASX,EAAOA,EAAKU,EAAKC,OAASoR,KAAUrR,EAAKsR,YAEvE8O,GAAYU,MAEb,CAAC3D,EAAQ1X,EAAUZ,SAEtB,IAAM2M,GAAa,SAAClS,GAClB,GAAkB,WAAdA,EAAK3B,KAAmB,CAC1B,IAAIgjB,EAAWtP,KAAUoP,IACrBnhB,EAAKW,OAASX,EAAKW,MAAMC,SAA4C,IAAlCZ,EAAKW,MAAMgJ,QAAQ,WACxD0X,EAASpS,OAAO,GAAGuB,OAAOhC,KAAK,aAC/B6S,EAASpS,OAAO,GAAGwB,iBAAiBjC,KAAK2N,IACzCiF,GAAcC,GACdH,IAAkB,IAEdD,KACFI,EAASpS,OAAO,GAAGuB,OAAOiR,MAC1BJ,EAASpS,OAAO,GAAGwB,iBAAiBgR,MACpCL,GAAcC,GACdH,IAAkB,IAIxB,IAAI/O,EAAQ,eAAOxR,GACnBwR,EAASnS,EAAK3B,MAAQ2B,EAAKW,MAC3Bod,EAAS5L,IAGLuP,GAAsB,SAAC1hB,GAC3B,IAAImS,EAAQ,eAAOyO,GACnBzO,EAASnS,EAAK3B,MAAQ2B,EAAKW,MAC3BkgB,EAAiB1O,IAGbwP,GAAiB,SAAC3hB,GACtB,IAAImS,EAAQ,eAAO8J,GACnB9J,EAASnS,EAAK3B,MAAQ2B,EAAKW,MAC3BmgB,GAAY3O,IAGRyP,GAAiB,SAAC5hB,GACtB,IAAImS,EAAQ,eAAOlO,GACnBkO,EAASnS,EAAK3B,MAAQ2B,EAAKW,MAC3BuD,EAAYiO,IAGR1L,GAAkB,WACtBH,EAAc,IACdE,EAAW,KAGbE,qBAAU,WACRD,OACC,CAACN,EAAUZ,SAEd,IAAMuN,GAAW,uCAAG,4BAAAvT,EAAA,6DAClBkH,KADkB,kBAGMrH,EAAQ,mBAAD,cACRye,QADQ,IACRA,OADQ,EACRA,EAAQve,KAC3B,OACA,CACEU,KAAMW,EACNqP,IAAG,OAAEhQ,QAAF,IAAEA,OAAF,EAAEA,EAAMgQ,IACX/L,SAAUwc,EAAiBxc,EAASA,SAAW,KAC/C2c,cAAeJ,EAAsBI,EAAgB,KACrD3E,SAAU0E,EAAiB1E,EAAW,MAExC,CACEpV,cAAc,GAAD,OAAKhI,EAAKf,SAdX,OAGVwT,EAHU,OAiBhB9K,EAAWxG,EAAO,eAAiB,SACnCqe,EAAO,EAAG,QACLre,GACHmG,EAAUX,YAAY,cAAC+a,EAAD,CAAMvgB,KAAMsR,EAASuM,OAAQ6C,EAAYrC,OAAQA,KApBzD,kDAuBhB/X,EAActG,EAAO,QAAU,eAvBf,0DAAH,qDA2BXmT,GAAa,uCAAG,sBAAA5T,EAAA,6DACpBkH,KADoB,kBAGZrH,EAAQ,mBAAD,cACQye,QADR,IACQA,OADR,EACQA,EAAQxC,YAC3B,OACA,CAACrL,IAAG,OAAEhQ,QAAF,IAAEA,OAAF,EAAEA,EAAMgQ,KACZ,CACEnJ,cAAc,GAAD,OAAKhI,EAAKf,SART,OAWlBqI,EAAUV,cACVU,EAAUX,YAAY,cAAC,GAAD,CAAU7E,MAAO,eAAgBnC,aAAcK,EAAKL,gBAC1E6f,EAAO,EAAG,QAbQ,gDAelB/X,EAAqB,SAfH,yDAAH,qDAmBnB,OACE,sBAAKxB,MAAO,CAACxC,MAAO6O,GAA4B,KAAhD,UACE,sBAAKlQ,UAAWC,KAAE6F,aAAlB,UACE,qBAAK9F,UAAWO,IAAYwF,mBAAqB,IAAM9F,KAAE+F,YAAzD,SACGpG,EAAmB,UAAWhC,EAAKL,gBAErCqf,EAAOxC,WACN,sBAAKpa,UAAWC,KAAEwR,cAAlB,UACE,qBAAKzR,UAAWC,KAAEyR,oBAAqB7P,QAAS,kBAAMqQ,MAAtD,SACE,qBAAKlS,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEwG,uBAAxD,SACG7G,EAAmB,SAAUhC,EAAKL,kBAGvC,qBAAKyC,UAAWC,KAAEgG,aAAcpE,QAAS,kBAAMqD,EAAUV,eAAzD,SACE,cAAC,GAAD,CAAmBG,GAAG,eAI1B,qBAAK3E,UAAWC,KAAEgG,aAAcpE,QAAS,kBAAMqD,EAAUV,eAAzD,SACE,cAAC,GAAD,CAAmBG,GAAG,eAI3B4a,EACC,qBAAKvf,UAAWC,KAAEyP,WAAlB,SACG,CAAC,WAAY,WAAY,WAAY,YAAY7H,KAAI,SAACpI,EAAMqI,GAAP,OACpD,qBACEjG,QAAS,kBA9KG,SAACiG,GACvBiY,GAAcjY,GA6KW8Y,CAAgB9Y,IAC/B9H,UAAWC,KAAE0P,iBAAmBmQ,KAAehY,EAAQ,IAAM7H,KAAE2P,uBAAyB,IAF1F,SAIGhQ,EAAmBH,EAAM7B,EAAKL,qBAInC,KACJ,cAAC,KAAD,CACEsjB,oBAAqB,gBAAEhd,EAAF,EAAEA,MAAUid,EAAZ,0BACnB,+CACMA,GADN,IAEE9gB,UAAWC,KAAE8gB,oBACbld,MAAK,2BACAA,GADA,IAEHxC,MAAO,MACPqI,aAAc,MACdsX,UAAW,kCACXrX,gBAAiB,iCAIvB9F,MAAO,CAACxC,MAAO,OAAQuD,OAAQ,OAAQ2E,UAAW,IAdpD,SAgBE,sBAAKvJ,UAAWC,KAAE2R,MAAlB,UACkB,IAAfkO,KAAA,OACCI,SADD,IACCA,IADD,UACCA,GAAYlS,cADb,aACC,EAAoBnG,KAAI,SAACpI,GACvB,OAAO0O,GAAU,CACfjB,KAAMtP,EAAKP,SACXE,aAAcK,EAAKL,aACnBkC,KAAMA,EACNY,OAAQ4Q,GACRvR,MAAOA,EACP0O,gBAAiBxQ,EAAKJ,eACtBiS,QAAO,OAAE1Q,QAAF,IAAEA,OAAF,EAAEA,EAAMgQ,UAGL,IAAf+Q,KAAA,OACCP,QADD,IACCA,GADD,UACCA,EAAqBvR,cADtB,aACC,EAA6BnG,KAAI,SAACpI,GAChC,OAAO0O,GAAU,CACfjB,KAAMtP,EAAKP,SACXE,aAAcK,EAAKL,aACnBkC,KAAMA,EACNY,OAAQogB,GACR/gB,MAAOigB,EACPvR,gBAAiBxQ,EAAKJ,qBAGZ,IAAfsiB,KAAA,OACCN,QADD,IACCA,GADD,UACCA,EAAgBxR,cADjB,aACC,EAAwBnG,KAAI,SAACpI,GAC3B,OAAO0O,GAAU,CACfjB,KAAMtP,EAAKP,SACXE,aAAcK,EAAKL,aACnBkC,KAAMA,EACNY,OAAQsgB,GACRjhB,MAAOsD,EACPoL,gBAAiBxQ,EAAKJ,qBAGZ,IAAfsiB,KAAA,OACCJ,QADD,IACCA,GADD,UACCA,EAAgB1R,cADjB,aACC,EAAwBnG,KAAI,SAACpI,GAC3B,OAAO0O,GAAU,CACfjB,KAAMtP,EAAKP,SACXE,aAAcK,EAAKL,aACnBkC,KAAMA,EACNY,OAAQqgB,GACRhhB,MAAOsb,EACP5M,gBAAiBxQ,EAAKJ,0BAKhC,qBAAKwC,UAAWO,IAAY2B,kBAAoB,KAA0B,IAAnBoD,EAAQ3F,OAAeM,KAAEiG,SAAWjG,KAAEkG,aAA7F,SACGvG,EAAmB0F,GAAWF,EAAYxH,EAAKL,gBAElD,sBAAKyC,UAAWC,KAAEmG,mBAAlB,UACE,qBAAKpG,UAAWC,KAAEoG,gBAAiBxE,QAAS,kBAAMgQ,MAAlD,SACG9T,EACC,qBAAKiC,UAAWC,KAAEqG,uBAAlB,SACE,cAAC,IAAD,CAAYhF,MAAOZ,EAAaE,eAAgB7C,SAAS,EAAMgE,IAAK9B,KAAE+B,OAAQC,KAAM,OAGtF,qBAAKjC,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEsG,qBAAxD,SACG3G,EAAmBb,EAAO,OAAS,MAAOnB,EAAKL,kBAItD,qBAAKyC,UAAWC,KAAEuG,kBAAmB3E,QAAS,kBAAMqD,EAAUV,eAA9D,SACE,qBAAKxE,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEwG,uBAAxD,SACG7G,EAAmB,SAAUhC,EAAKL,yBCzRzC0jB,GAAc,SAACC,GACnB,IAAMnK,EAAO,IAAI3M,KAAK8W,GAMtB,OALanK,EAAKK,cAKJ,KAJAL,EAAK7H,WAAa,EAAI,KAAO6H,EAAK7H,WAAa,GAAK6H,EAAK7H,WAAa,GAIxD,KAHhB6H,EAAKE,UAAY,GAAK,IAAMF,EAAKE,UAAYF,EAAKE,WAGtB,MAF1BF,EAAKoK,WAAa,GAAK,IAAMpK,EAAKoK,WAAapK,EAAKoK,YAEX,KADvCpK,EAAKqK,aAAe,GAAK,IAAMrK,EAAKqK,aAAerK,EAAKqK,eAIpEC,GAAe,SAACH,GACpB,IAAMnK,EAAO,IAAI3M,KAAK8W,GAChB/J,EAAOJ,EAAKK,cACZF,EAAQH,EAAK7H,WAAa,EAAI,KAAO6H,EAAK7H,WAAa,GAAK6H,EAAK7H,WAAa,EAEpF,OADY6H,EAAKE,UAAY,GAAK,IAAMF,EAAKE,UAAYF,EAAKE,WACjD,IAAMC,EAAQ,IAAMC,GAGtBmK,GAAY,SAAC,GAanB,IAAD,UAZJ1E,EAYI,EAZJA,OACA7d,EAWI,EAXJA,KACAhB,EAUI,EAVJA,QACAqf,EASI,EATJA,OAEAmC,GAOI,EARJrJ,QAQI,EAPJqJ,qBACAC,EAMI,EANJA,eACAE,EAKI,EALJA,eACAD,EAII,EAJJA,WAEAvP,GAEI,EAHJqR,WAGI,EAFJrR,aACAsR,EACI,EADJA,KAEMtc,EAAYT,KACZ7G,EAAOC,qBAAWlB,GACxB,EAAqCgB,IACrC,GADA,EAAOQ,QAAP,EAAgBF,MAAhB,EAAuBmB,WACKtB,mBAAS,OAArC,mBACA,GADA,UACwCA,oBAAS,IAAjD,mBAgBM2jB,GAhBN,UAgBmB,SAAC1iB,GAClB,IAAI0P,EAAS,GAMb,OALI,OAAJ1P,QAAI,IAAJA,KAAM4R,SAAQ,SAAClR,EAAMqI,GACA2G,GAAU7O,EAAhB,OAATH,EAA4C,MACd,MADqB7B,EAAKL,cAE5DkR,IAAc,OAAJ1P,QAAI,IAAJA,OAAA,EAAAA,EAAMY,QAAS,EAAImI,EAAQ,KAAO,MAEvC2G,IA8CHiT,EAAgB,SAACC,GAErB,IADA,IAAIC,EAAa,GACRpL,EAAI,EAAGA,EAAImL,EAAQhiB,OAAQ6W,IAClCoL,EAAWrU,KAAK3N,EAAmB+hB,EAAQnL,GAAI5Y,EAAKL,eAEtD,OAAOqkB,EAAWC,KAAK,OAGzB,OACE,wBAAO7hB,UAAWC,KAAE6hB,MAAOC,YAAY,IAAvC,UACE,gCACE,oBAAI/hB,UAAWC,KAAE+hB,SAAjB,gBACGpF,QADH,IACGA,GADH,UACGA,EAAQ5O,cADX,aACG,EAAgBnG,KAAI,SAACpI,EAAMqI,GAC1B,IAAKrI,EAAKuc,QACR,OACE,mCACE,oBAAgBhc,UAAWO,IAAY0hB,eAAiB,IAAMhiB,KAAEiiB,SAAhE,SACE,qBAAKliB,UAAWC,KAAEkiB,eAAlB,SACE,qBAAKniB,UAAWO,IAAY0hB,eAAiB,IAAMhiB,KAAEmiB,eAArD,SACGxiB,EAAmBH,EAAKyH,MAAOtJ,EAAKL,mBAHlCuK,YAsBrB,gCACG/J,EACC,oBAAIiC,UAAWC,KAAEoiB,SAAjB,SACE,oBAAIC,QAAO,OAAE1F,QAAF,IAAEA,GAAF,UAAEA,EAAQ5O,cAAV,aAAE,EAAgBrO,OAA7B,SACE,qBAAKK,UAAWC,KAAE+B,OAAlB,SACE,cAAC,IAAD,CAAYV,MAAOZ,EAAaE,eAAgB7C,SAAS,EAAMgE,IAAK9B,KAAE+B,OAAQC,KAAM,WAIvE,KAAb,OAAJlD,QAAI,IAAJA,OAAA,EAAAA,EAAMY,QACR,qCACE,oBAAIK,UAAWC,KAAEsiB,eAAjB,SACE,oBAAID,SAAe,OAAN1F,QAAM,IAANA,GAAA,UAAAA,EAAQ5O,cAAR,eAAgBrO,QAAS,EAAtC,SACE,qBAAKK,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAEuiB,cAAxD,SACG5iB,EAAmB,YAAahC,EAAKL,oBAI5C,oBAAIyC,UAAWC,KAAEoiB,SAAjB,SACE,oBAAIC,QAAO,OAAE1F,QAAF,IAAEA,GAAF,UAAEA,EAAQ5O,cAAV,aAAE,EAAgBrO,cAV/B,UAcFZ,EAAKqJ,MAAa,IAAPoZ,EAAyB,KAAZA,EAAO,WAd7B,aAcF,EAA0C3Z,KAAI,SAAC4a,EAAW3a,GAAZ,aAC5C,oBAAgB9H,UAAW8H,EAAQ,IAAM,EAAI7H,KAAEyiB,MAAQziB,KAAE0iB,GAAI9gB,QAAS,kBAjI3DpC,EAiI6EgjB,OAhIhGvd,EAAUX,YACR,cAAC,GAAD,CACExF,KAAMU,EACNmd,OAAQ6C,GAA0B7C,EAClCQ,OAAQA,EACRmC,oBAAqBA,EACrBC,eAAgBA,EAChBE,eAAgBA,EAChBxP,YAAaA,KATC,IAACzQ,GAiIX,gBACGmd,QADH,IACGA,GADH,UACGA,EAAQ5O,cADX,aACG,EAAgBnG,KAAI,SAAC+a,EAAYC,GAAa,IAAD,8BAC5C,IAAKD,EAAW5G,QACd,OACE,mCACE,oBAAIhc,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAE6iB,GAAvD,SACuB,WAApBF,EAAW9iB,KACV2iB,EAAUG,EAAWljB,OACnBE,EAAmB,YAAahC,EAAKL,cAErC,GAEoB,uBAApBqlB,EAAW9iB,KACb,sBAAKE,UAAWC,KAAE8iB,aAAlB,UACE,qBAAK/iB,UAAWC,KAAE+iB,kBAAlB,mBAAsCP,EAAUG,EAAWljB,cAA3D,aAAsC,EAA6BC,UAClE,UAAA8iB,EAAUG,EAAWljB,cAArB,eAA6BC,QAC5B,qBAAKK,UAAWC,KAAEgjB,QAAlB,mBACGR,EAAUG,EAAWljB,cADxB,iBACG,EAA6BwjB,iBADhC,aACG,EAAwCrb,KAAI,SAACpI,EAAMqI,GAAP,aAC3C,qBAAK9H,UAAWC,KAAEkjB,UAAlB,mBACM9B,GAAa5hB,EAAK2jB,YADxB,YACuC3jB,EAAK4jB,UAD5C,wBAEI5jB,EAAKoX,cAFT,aAEI,EAAa5C,MAFjB,YAGMrU,EAAmB,SAAUhC,EAAKL,gBAHNuK,QAOpC,QAEgB,yBAApB8a,EAAW9iB,KACb,sBAAKE,UAAWC,KAAEqjB,eAAlB,UACE,qBAAKtjB,UAAWC,KAAEsjB,oBAAlB,mBAAwCd,EAAUG,EAAWljB,cAA7D,aAAwC,EAA6BC,UACpE,UAAA8iB,EAAUG,EAAWljB,cAArB,eAA6BC,QAC5B,qBAAKK,UAAWC,KAAEgjB,QAAlB,mBACGR,EAAUG,EAAWljB,cADxB,iBACG,EAA6BwjB,iBADhC,aACG,EAAwCrb,KAAI,SAACpI,EAAMqI,GAAP,OAC3C,qBAAK9H,UAAWC,KAAEkjB,UAAlB,mBACM9B,GAAa5hB,EAAK2jB,YADxB,YACuC3jB,EAAK4jB,UAD5C,cAC2D5jB,EAAK+jB,aADhE,MAAkC1b,QAKpC,QAEgB,uBAApB8a,EAAW9iB,KACb,sBAAKE,UAAWC,KAAEqjB,eAAlB,UACE,qBAAKtjB,UAAWC,KAAEsjB,oBAAlB,mBAAwCd,EAAUG,EAAWljB,cAA7D,aAAwC,EAA6BC,UACpE,UAAA8iB,EAAUG,EAAWljB,cAArB,eAA6BC,QAC5B,qBAAKK,UAAWC,KAAEgjB,QAAlB,mBACGR,EAAUG,EAAWljB,cADxB,iBACG,EAA6BwjB,iBADhC,aACG,EAAwCrb,KAAI,SAACpI,EAAMqI,GAAP,OAC3C,qBAAK9H,UAAWC,KAAEkjB,UAAlB,mBACM9B,GAAa5hB,EAAKsX,MADxB,YACiCtX,EAAK4jB,YADJvb,QAKpC,QAEH2a,EAAUG,EAAWljB,OAMF,SAApBkjB,EAAW9iB,KACbF,EAAkB,UAChBgjB,EAAWvb,kBADK,iBAChB,EAAuB7H,MAAK,SAACqR,GAAD,OAAaA,EAAQnR,QAAU+iB,EAAUG,EAAWljB,iBADhE,aAChB,EAAyFwH,MACzFtJ,EAAKL,cAEe,QAApBqlB,EAAW9iB,KACQ,aAArB8iB,EAAWljB,MACT+hB,EAAWgB,EAAUG,EAAWljB,QAEhCgiB,EACEe,EAAUG,EAAWljB,OAAO0I,MAC1B,EACAqa,EAAUG,EAAWljB,OAAOC,OAAS,EAAI,EAAI8iB,EAAUG,EAAWljB,OAAOC,SAIzD,SAApBijB,EAAW9iB,KACbmhB,GAAYwB,EAAUG,EAAWljB,QAEnCkjB,EAAWtQ,YAETmQ,EAAUG,EAAWljB,OAAOC,OAC1B8jB,OAAOnkB,EAAcmjB,EAAUG,EAAWljB,OAAQ9B,EAAKP,WAAWsC,OAAS,IACzE,UAAAL,EAAcmjB,EAAUG,EAAWljB,OAAQ9B,EAAKP,iBAAhD,eAA2D+K,MAAM,EAAG,KAAM,MAE1E9I,EAAcmjB,EAAUG,EAAWljB,OAAQ9B,EAAKP,UAGlD,GAEAolB,EAAUG,EAAWljB,OAAOC,QAC9B8jB,OAAOhB,EAAUG,EAAWljB,QAAQC,OAAS,GAC3C8iB,EAAUG,EAAWljB,OAAO0I,MAAM,EAAG,IAAM,MAM7Cqa,EAAUG,EAAWljB,OA3CA,aAArBkjB,EAAWljB,MACTE,EAAmB,SAAUhC,EAAKL,cAElC,WAzDPuK,Y,oBCxKR4b,GAAkB,SAAC,GAAkD,IAAjDlC,EAAgD,EAAhDA,KAAMmC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,QAAsB,EAAbC,QAEhE,OACI,sBAAK9jB,UAAWC,KAAE0D,KAAlB,UACI,qBAAK3D,UAAWwhB,IAASoC,EAAY3jB,KAAE8jB,mBAAqB9jB,KAAE+jB,YAAaniB,QAAS,kBAAM2f,IAASoC,GAAYC,EAAQrC,EAAK,IAA5H,SACI,cAAC,GAAD,CAAmB7c,GAAG,iBAE1B,sBAAK3E,UAAWC,KAAEgkB,MAAlB,UACI,qBAAKjkB,UAAWO,IAAY0hB,eAAiB,IAAMhiB,KAAEikB,QAArD,SACK1C,EAAO,IAEZ,qBAAKxhB,UAAWO,IAAY0hB,eAAiB,IAAMhiB,KAAEkkB,GAArD,eAGA,qBAAKnkB,UAAWO,IAAYmY,iBAAmB,IAAMzY,KAAEmkB,IAAvD,SACKT,EAAU,OAGnB,qBAAK3jB,UAAWwhB,IAASmC,EAAU1jB,KAAE8jB,mBAAqB9jB,KAAE+jB,YAAaniB,QAAS,kBAAM2f,IAASmC,GAAUE,EAAQrC,EAAK,IAAxH,SACI,cAAC,GAAD,CAAmB7c,GAAG,sB,oBClBhC0f,GAAQ,SAAC,GASR,IAAD,IARFC,EAQE,EARFA,QACA5kB,EAOE,EAPFA,MACA0f,EAME,EANFA,SACAC,EAKE,EALFA,QACAxK,EAIE,EAJFA,KACArQ,EAGE,EAHFA,YACArE,EAEE,EAFFA,YACA5C,EACE,EADFA,aAEA,EAA4BO,mBAAS,IAArC,mBAAOymB,EAAP,KAAeC,EAAf,KAEA/e,qBAAU,WACN+e,EAAU9kB,KACX,CAACA,IAEJ,IAAM+kB,EAAY,SAAC1lB,GACfqgB,EAASrgB,GACTylB,EAAUzlB,IAQd,OACI,sBAAKiB,UAAWC,KAAE4F,WAAlB,UACI,sBAAK7F,UAAWC,KAAE6F,aAAlB,UACI,qBACI9F,UACIO,IAAYwF,mBAAqB,IAAM9F,KAAE+F,YAFjD,SAKKpG,EAAmBO,EAAa5C,KAErC,qBAAKyC,UAAWC,KAAEgG,aAAcpE,QAAS,kBAAM2C,KAA/C,SACI,cAAC,GAAD,CAAmBG,GAAG,eAG9B,qBACI3E,UACIO,IAAY2B,kBAAoB,IAAMjC,KAAEykB,cAFhD,SAKK9kB,EAAkB,OAACiV,QAAD,IAACA,OAAD,EAACA,EAAM3N,MAAO3J,KAErC,sBAAKyC,UAAWC,KAAE0H,aAAlB,UACI,sBAAK3H,UAAWC,KAAEkI,WAAlB,UACI,sBACInI,UAAWC,KAAE8H,aACblG,QAAS,kBAAM4iB,EAAU,KAF7B,UAII,qBACIzkB,UACuB,KAAb,OAANukB,QAAM,IAANA,OAAA,EAAAA,EAAQ5kB,QAAeM,KAAE+H,YAAc/H,KAAEgI,OAGjD,qBAAKjI,UAAWC,KAAEiI,UAAlB,SACKtI,EAAmB,MAAOrC,QAXvC,OAcKsX,QAdL,IAcKA,GAdL,UAcKA,EAAMxN,kBAdX,aAcK,EACKe,MAAM,GAAO,OAAJyM,QAAI,IAAJA,OAAA,EAAAA,EAAMxN,WAAW1H,QAAS,GACpCkI,KAAI,SAACpI,EAAMqI,GAAP,OACD,sBACI9H,UAAWC,KAAE8H,aACblG,QAAS,kBAAM4iB,EAAUhlB,EAAKC,QAFlC,UAII,qBACIM,UACIukB,IAAW9kB,EAAKC,MACVO,KAAE+H,YACF/H,KAAEgI,OAGhB,qBAAKjI,UAAWC,KAAEiI,UAAlB,SACKtI,EACGH,EAAKyH,MACL3J,cAMxB,qBAAKyC,UAAWC,KAAEkI,WAAlB,gBACK0M,QADL,IACKA,GADL,UACKA,EAAMxN,kBADX,aACK,EACKe,OACM,OAAJyM,QAAI,IAAJA,OAAA,EAAAA,EAAMxN,WAAW1H,QAAS,EAFjC,OAGOkV,QAHP,IAGOA,OAHP,EAGOA,EAAMxN,WAAW1H,QAEpBkI,KAAI,SAACpI,EAAMqI,GAAP,OACD,sBACI9H,UAAWC,KAAE8H,aACblG,QAAS,kBAAM4iB,EAAUhlB,EAAKC,QAFlC,UAII,qBACIM,UACIukB,IAAW9kB,EAAKC,MACVO,KAAE+H,YACF/H,KAAEgI,OAGhB,qBAAKjI,UAAWC,KAAEiI,UAAlB,SACKtI,EACGH,EAAKyH,MACL3J,gBAO5B,sBAAKyC,UAAWC,KAAEmG,mBAAlB,UACI,qBACIpG,UAAWC,KAAEoG,gBACbxE,QAAS,kBA9FrBwd,EAAQ,EAAG,QAAJ,eAAgBiF,EAAUC,SACjC/f,KA2FQ,SAII,qBACIxE,UACIO,IAAY2B,kBACZ,IACAjC,KAAEsG,qBAJV,SAOK3G,EAAmB,QAASrC,OAGrC,qBACIyC,UAAWC,KAAEuG,kBACb3E,QAAS,kBAAM2C,KAFnB,SAII,qBACIxE,UACIO,IAAY2B,kBACZ,IACAjC,KAAEwG,uBAJV,SAOK7G,EAAmB,SAAUrC,cAQzConB,GAAS,SAAC,GAShB,IAAD,EARFtjB,EAQE,EARFA,MACAijB,EAOE,EAPFA,QACA5kB,EAME,EANFA,MACA0f,EAKE,EALFA,SACAjf,EAIE,EAJFA,YACAkf,EAGE,EAHFA,QACAxK,EAEE,EAFFA,KACAtX,EACE,EADFA,aAEM2H,EAAYT,KAEZD,EAAc,WAChBU,EAAUV,eAkBd,OACI,sBACIX,MAAO,CAAExC,MAAOA,GAAgB,KAChCrB,UAAWC,KAAE0D,KACb9B,QAAS,WAlBbqD,EAAUX,YACN,cAAC,GAAD,CACIhH,aAAcA,EACd+mB,QAASA,EACT5kB,MAAOA,EACP0f,SAAUA,EACVC,QAASA,EACTxK,KAAMA,EACNrQ,YAAaA,EACbrE,YAAaA,MAMrB,UAKI,qBAAKH,UAAWC,KAAEC,MAAlB,SACI,qBACIF,UACIO,IAAY2B,kBACZ,KACCxC,EAAQO,KAAEP,MAAQO,KAAEE,aAJ7B,SAOKP,EACGF,EAAK,UACCmV,EAAKxN,kBADN,aACC,EAAiB7H,MACb,SAACC,GAAD,OAAUA,EAAKC,QAAUA,KAC3BwH,MACF/G,EACN5C,OAIZ,qBAAKyC,UAAWC,KAAE0B,OAAlB,SACI,cAAC,GAAD,CAAmBgD,GAAG,iB,qBC3MzBigB,GAAc,SAAC,GAA6B,IAA3BllB,EAA0B,EAA1BA,MAAOnC,EAAmB,EAAnBA,aACjC,OACI,sBAAKyC,UAAWO,IAAY2B,kBAAoB,IAAMjC,KAAE0D,KAAxD,UACK/D,EAAmB,WAAYrC,GADpC,KACqDmC,MCdhDmlB,GAAQ,uCAAG,WAAOxmB,EAAKU,EAAM+lB,EAAU7lB,EAAQd,EAASP,GAA7C,SAAAU,EAAA,sEACPH,EAAQE,EAAK,OAAQ,CAC9BU,OACA+lB,WACA7lB,UACD,CACC2G,cAAehI,EAAKf,QANJ,mFAAH,gECoBRkoB,GAAQ,WACnB,IAAMnnB,EAAOC,qBAAWlB,GAClBuI,EAAYT,KAClB,EAAwB3G,mBAAS,IAAjC,mBAAOiB,EAAP,KAAamX,EAAb,KACA,EAAwBpY,mBAAS,GAAjC,mBAAO0jB,EAAP,KAAasC,EAAb,KACA,EAA8BhmB,mBAAS,GAAvC,mBAAO6lB,EAAP,KAAgBqB,EAAhB,KACA,EAAkClnB,mBAAS,GAA3C,mBAAO8lB,EAAP,KACA,GADA,KACgDjmB,KAAxCQ,EAAR,EAAQA,QAA4BJ,GAApC,EAAiBE,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SACpC,EAA4BD,mBAAS,IAArC,mBAAOmnB,EAAP,KAAeC,EAAf,KACA,EAAgCpnB,mBAAS,IAAzC,mBAAOqnB,EAAP,KAAiBC,EAAjB,KACA,EAA4BtnB,mBAAS,IAArC,mBAAOmd,EAAP,KAAeoK,EAAf,KACA,EAAgCvnB,mBAAS,IAAzC,mBAAOT,EAAP,KAAiBioB,EAAjB,KACA,EAAuCxnB,mBAAS,GAAhD,mBAAOynB,EAAP,KAAoBC,EAApB,KAMM3B,EAAO,uCAAG,WACd4B,EACAC,EACAC,EACA3L,EACA8K,EACAc,GANc,uBAAAtnB,EAAA,yDAQdmnB,EAAQA,IAAgBjE,GAAc,GAClCqE,GAAqB,OAAXF,QAAW,IAAXA,OAAA,EAAAA,EAAaV,QACvBU,EAAYV,QACN,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQtlB,QAAS,EACjBslB,EACA,OACAa,GAAuB,OAAXH,QAAW,IAAXA,OAAA,EAAAA,EAAaR,UAAWQ,EAAYR,SAAW,OAE3DY,GAAqB,OAAXJ,QAAW,IAAXA,OAAA,EAAAA,EAAa1K,QAAS0K,EAAY1K,OAAS,OACrD+K,GAAuB,OAAXL,QAAW,IAAXA,OAAA,EAAAA,EAAatoB,UAAWsoB,EAAYtoB,SAAW,OACnD,SAARqoB,IACFG,EAAU,OACVC,EAAY,OACZC,EAAU,OACVb,EAAU,IACVE,EAAY,IACZC,EAAU,IACVC,EAAY,KAzBA,UA+BRtL,EA/BQ,kCAgCK6K,GAAS,8BAEtB,CACErD,KAAMiE,EACNQ,UAAWJ,EACXV,SAAUW,EACV7K,OAAQ8K,EACR1oB,SAAU2oB,GAEZlB,EACAc,EACAznB,EACAP,GA5CQ,QAgCV6Q,EAhCU,gDA+CKtQ,EAAQ,0BAAD,OACMsnB,EADN,YACeI,EADf,YAC0BC,EAD1B,YACuCC,EADvC,YACkDC,GACtE,MACA,KACA,CACEpgB,cAAehI,EAAKf,QApDd,QA+CV4R,EA/CU,eAuDZqV,EAAQtC,GACRwD,EAAWvW,EAAOyX,YAClBhQ,EAAQzH,EAAO1P,MACfymB,EAAgB/W,EAAO0X,YA1DX,4GAAH,gEA8Db1gB,qBAAU,WACRoe,EAAQ,EAAG,UACV,IAaH,OACE,sBAAK7jB,UAAWC,KAAE0D,KAAlB,UACE,sBAAK3D,UAAWC,KAAEmmB,OAAlB,UACE,sBAAKpmB,UAAWC,KAAEomB,eAAlB,UACE,cAAC,GAAD,CACE9oB,aAAcK,EAAKL,aACnBmC,MAAOulB,EACP7F,SAAU8F,EACV/kB,YAAa,mBACbkf,QAASwE,IAEX,cAAC,GAAD,CACEtmB,aAAcK,EAAKL,aACnB8D,MAAO,IACPijB,QAAS,WACT5kB,MAAOylB,EACP/F,SAAUgG,EACVjlB,YAAa,eACbkf,QAASwE,EACThP,KAAMsF,GAAenM,OAAO,KAE9B,cAAC,GAAD,CACEzQ,aAAcK,EAAKL,aACnB8D,MAAO,IACPijB,QAAS,SACT5kB,MAAOub,EACPmE,SAAUiG,EACVllB,YAAa,gBACbkf,QAASwE,EACThP,KAAMsF,GAAenM,OAAO,KAE9B,cAAC,GAAD,CACEzQ,aAAcK,EAAKL,aACnB8D,MAAO,IACPijB,QAAS,WACT5kB,MAAOrC,EACP+hB,SAAUkG,EACVnlB,YAAa,mBACbkf,QAASwE,EACThP,KAAM4F,GAAWzM,OAAO,GAAGwB,iBAAiB,GAAG,KAEjD,cAAC,GAAD,CAAajS,aAAcK,EAAKL,aAAcmC,MAAO6lB,OAEvD,qBAAKvlB,UAAWC,KAAEqmB,iBAAkBzkB,QAAS,WArDjDqD,EAAUX,YACR,cAAC,GAAD,CACExF,KAAM,KACN6d,OAAQlC,GACR0C,OAAQyG,EACRpE,WAAYhF,OAgDZ,SACE,qBACEza,UACEO,IAAY2B,kBAAoB,IAAMjC,KAAEsmB,sBAF5C,SAKG3mB,EAAmB,aAAchC,EAAKL,qBAI7C,cAAC,GAAD,CACEqf,OAAQzC,GACRsF,WAAYhF,GACZ1b,KAAMA,EACNhB,QAASA,EACTqf,OAAQyG,EACR3N,QA5Ic,SAAChF,GACnBgF,EAAQ,aAAIhF,KA4IRsQ,KAAMA,IAER,qBAAKxhB,UAAWC,KAAEiE,OAAlB,SACE,cAAC,GAAD,CACEsd,KAAMA,EACNmC,QAASA,EACTC,UAAWA,EACXC,QAASC,EACTmB,OAAQA,U,qBCrKLuB,GAAS,WAClB,IAAM5oB,EAAOC,qBAAWlB,GAClBuI,EAAYT,KAClB,EAAwB3G,mBAAS,IAAjC,mBAAOiB,EAAP,KAAamX,EAAb,KACA,EAAwBpY,mBAAS,GAAjC,mBAAO0jB,EAAP,KAAasC,EAAb,KACA,EAA8BhmB,mBAAS,GAAvC,mBAAO6lB,EAAP,KAAgBqB,EAAhB,KACA,EAAkClnB,mBAAS,GAA3C,mBAAO8lB,EAAP,KACA,GADA,KACgDjmB,KAAxCQ,EAAR,EAAQA,QAA4BJ,GAApC,EAAiBE,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SACpC,EAA4BD,mBAAS,QAArC,mBAAOmnB,EAAP,KAAeC,EAAf,KAMMrB,EAAO,uCAAG,WAAOrC,EAAMkE,GAAb,iBAAApnB,EAAA,6DACZkjB,EAAOA,GAAc,EACjBqE,GAAgB,OAANZ,QAAM,IAANA,OAAA,EAAAA,EAAQtlB,QAAS,EAAIslB,EAAS,OAChC,SAARS,IACAG,EAAU,OACVX,EAAU,KALF,kBAQa/mB,EAAQ,+BAAD,OACOqjB,EADP,YACeqE,GACvC,MACA,KACA,CACIjgB,cAAehI,EAAKf,QAbpB,OAQF4R,EARE,OAgBRqV,EAAQtC,GACRwD,EAAWvW,EAAOyX,YAClBhQ,EAAQ6D,GAAmBtL,EAAO1P,OAlB1B,4GAAH,wDAsBb0G,qBAAU,WACNoe,EAAQ,EAAG,UACZ,IAaH,OACI,sBAAK7jB,UAAWC,KAAE0D,KAAlB,UACI,sBAAK3D,UAAWC,KAAEmmB,OAAlB,UACI,cAAC,GAAD,CACI7oB,aAAcK,EAAKL,aACnBmC,MAAOulB,EACP7F,SAAU8F,EACV/kB,YAAa,eACbkf,QAASwE,IAEb,qBACI7jB,UAAWC,KAAEqmB,iBACbzkB,QAAS,WAtBrBqD,EAAUX,YACN,cAAC,GAAD,CACIxF,KAAM,KACN6d,OAAQL,GACRa,OAAQyG,EACRpE,WAAY3D,OAeZ,SAII,qBACI9b,UACIO,IAAY2B,kBACZ,IACAjC,KAAEsmB,sBAJV,SAOK3mB,EAAmB,eAAgBhC,EAAKL,qBAIrD,cAAC,GAAD,CACIqf,OAAQd,GACR/c,KAAMA,EACNhB,QAASA,EACTqf,OAAQyG,EACR3N,QAvEQ,SAAChF,GACjBgF,EAAQ,aAAIhF,KAuEJqQ,WAAY,aACZC,KAAMA,IAEV,qBAAKxhB,UAAWC,KAAEiE,OAAlB,SACI,cAAC,GAAD,CACIsd,KAAMA,EACNmC,QAASA,EACTC,UAAWA,EACXC,QAASC,EACTmB,OAAQA,U,qBCvFfwB,GAAQ,WACjB,IAAM7oB,EAAOC,qBAAWlB,GAClBuI,EAAYT,KAClB,EAAwB3G,mBAAS,IAAjC,mBAAOiB,EAAP,KAAamX,EAAb,KACA,EAAwBpY,mBAAS,GAAjC,mBAAO0jB,EAAP,KAAasC,EAAb,KACA,EAA8BhmB,mBAAS,GAAvC,mBAAO6lB,EAAP,KAAgBqB,EAAhB,KACA,EAAkClnB,mBAAS,GAA3C,mBAAO8lB,EAAP,KACA,GADA,KACgDjmB,KAAxCQ,EAAR,EAAQA,QAA4BJ,GAApC,EAAiBE,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SACpC,EAA4BD,mBAAS,QAArC,mBAAOmnB,EAAP,KAAeC,EAAf,KACA,EAAuCpnB,mBAAS,GAAhD,mBAAOynB,EAAP,KAAoBC,EAApB,KAMM3B,EAAO,uCAAG,WACZrC,EACAkE,EACAC,EACA3L,EACA8K,EACAc,GANY,qBAAAtnB,EAAA,yDAQZkjB,EAAOA,GAAc,EACjBqE,GAAgB,OAANZ,QAAM,IAANA,OAAA,EAAAA,EAAQtlB,QAAS,EAAIslB,EAAS,OAChC,SAARS,IACAG,EAAU,OACVX,EAAU,KAZF,UAgBJlL,EAhBI,iCAiBW6K,GAAS,8BAEpB,CACIrD,OACAyD,OAAQY,GAEZf,EACAc,EACAznB,EACAP,GA1BA,OAiBJ6Q,EAjBI,gDA6BWtQ,EAAQ,0BAAD,OACQqjB,EADR,YACgBqE,GAClC,MACA,KACA,CACIjgB,cAAehI,EAAKf,QAlCxB,QA6BJ4R,EA7BI,eAsCRqV,EAAQtC,GACRwD,EAAU,UAACvW,SAAD,aAAC,EAAQyX,YACnBhQ,EAAQ6D,GAAkB,UAACtL,SAAD,aAAC,EAAQ1P,OACnCymB,EAAgB/W,EAAO0X,YAzCf,4GAAH,gEA6Cb1gB,qBAAU,WACNoe,EAAQ,EAAG,UACZ,IAaH,OACI,sBAAK7jB,UAAWC,KAAE0D,KAAlB,UACI,sBAAK3D,UAAWC,KAAEmmB,OAAlB,UACI,sBAAKpmB,UAAWC,KAAEomB,eAAlB,UACI,cAAC,GAAD,CACI9oB,aAAcK,EAAKL,aACnBmC,MAAOulB,EACP7F,SAAU8F,EACV/kB,YAAa,eACbkf,QAASwE,IAEb,cAAC,GAAD,CACItmB,aAAcK,EAAKL,aACnBmC,MAAO6lB,OAGf,qBACIvlB,UAAWC,KAAEqmB,iBACbzkB,QAAS,WA5BrBqD,EAAUX,YACN,cAAC,GAAD,CACIxF,KAAM,KACN6d,OAAQR,GACRgB,OAAQyG,EACRpE,WAAYxD,OAqBZ,SAII,qBACIjc,UACIO,IAAY2B,kBACZ,IACAjC,KAAEsmB,sBAJV,SAOK3mB,EAAmB,cAAehC,EAAKL,qBAIpD,cAAC,GAAD,CACIqf,OAAQX,GACRld,KAAMA,EACNhB,QAASA,EACTqf,OAAQyG,EACR3N,QApGQ,SAAChF,GACjBgF,EAAQ,aAAIhF,KAoGJuO,WAAY1D,GACZwF,WAAY,QACZC,KAAMA,IAEV,qBAAKxhB,UAAWC,KAAEiE,OAAlB,SACI,cAAC,GAAD,CACIsd,KAAMA,EACNmC,QAASA,EACTC,UAAWA,EACXC,QAASC,EACTmB,OAAQA,U,qBCxHfyB,GAAQ,WACjB,IAAM9oB,EAAOC,qBAAWlB,GAClBuI,EAAYT,KAClB,EAAwB3G,mBAAS,IAAjC,mBAAOiB,EAAP,KAAamX,EAAb,KACA,EAAwBpY,mBAAS,GAAjC,mBAAO0jB,EAAP,KAAasC,EAAb,KACA,EAA8BhmB,mBAAS,GAAvC,mBAAO6lB,EAAP,KAAgBqB,EAAhB,KACA,EAAkClnB,mBAAS,GAA3C,mBAAO8lB,EAAP,KACA,GADA,KACgDjmB,KAAxCQ,EAAR,EAAQA,QAA4BJ,GAApC,EAAiBE,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SACpC,EAA4BD,mBAAS,IAArC,mBAAOmnB,EAAP,KAAeC,EAAf,KACA,EAAgCpnB,mBAAS,IAAzC,mBAAO6oB,EAAP,KAAiBC,EAAjB,KACA,EAA0B9oB,mBAAS,IAAnC,mBAAO+oB,EAAP,KAAcC,EAAd,KACA,EAA8BhpB,mBAAS,MAAvC,mBAAgBwS,GAAhB,WACA,EAAuCxS,mBAAS,GAAhD,mBAAOynB,EAAP,KAAoBC,EAApB,KAMM3B,EAAO,uCAAG,WACZrC,EACAkE,EACAC,EACA3L,EACA8K,EACAc,GANY,qBAAAtnB,EAAA,yDAQZkjB,EAAOA,GAAc,EACjBqE,GAAqB,OAAXF,QAAW,IAAXA,OAAA,EAAAA,EAAaV,QACrBU,EAAYV,QACN,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQtlB,QAAS,EACjBslB,EACA,OACF8B,GAAuB,OAAXpB,QAAW,IAAXA,OAAA,EAAAA,EAAagB,UAAWhB,EAAYgB,SAAW,OAC3DK,GAAoB,OAAXrB,QAAW,IAAXA,OAAA,EAAAA,EAAakB,OAAQlB,EAAYkB,MAAQ,OAC1C,SAARnB,IACAG,EAAU,OACVkB,EAAY,OACZC,EAAS,OACT9B,EAAU,IACV0B,EAAY,IACZE,EAAS,KAtBD,UA0BJ9M,EA1BI,iCA2BW6K,GAAS,8BAEpB,CACIrD,OACAyD,OAAQY,EACRc,SAAUI,EACVF,MAAOG,GAEXlC,EACAc,EACAznB,EACAP,GAtCA,OA2BJ6Q,EA3BI,gDAyCWtQ,EAAQ,0BAAD,OACQqjB,EADR,YACgBqE,EADhB,YAC2BkB,EAD3B,YACwCC,GAC1D,MACA,KACA,CACIphB,cAAehI,EAAKf,QA9CxB,QAyCJ4R,EAzCI,eAiDRqV,EAAQtC,GACRwD,EAAWvW,EAAOyX,YAClBhQ,EAAQ6D,GAAmBtL,EAAO1P,OAClCymB,EAAgB/W,EAAO0X,YApDf,4GAAH,gEAwDb1gB,qBAAU,WACNoe,EAAQ,EAAG,UACZ,IAcH,OACI,sBAAK7jB,UAAWC,KAAE0D,KAAlB,UACI,sBAAK3D,UAAWC,KAAEmmB,OAAlB,UACI,sBAAKpmB,UAAWC,KAAEomB,eAAlB,UACI,cAAC,GAAD,CACI9oB,aAAcK,EAAKL,aACnBmC,MAAOulB,EACP7F,SAAU8F,EACV/kB,YAAa,eACbkf,QAASwE,IAEb,cAAC,GAAD,CACItmB,aAAcK,EAAKL,aACnB8D,MAAO,IACPijB,QAAS,WACT5kB,MAAOinB,EACPvH,SAAUwH,EACVzmB,YAAa,mBACbkf,QAASwE,EACThP,KAAMsH,GAAYnO,OAAO,KAE7B,cAAC,GAAD,CACIzQ,aAAcK,EAAKL,aACnB8D,MAAO,IACPijB,QAAS,QACT5kB,MAAOmnB,EACPzH,SAAU0H,EACV3mB,YAAa,gBACbkf,QAASwE,EACThP,KAAMsH,GAAYnO,OAAO,KAE7B,cAAC,GAAD,CACIzQ,aAAcK,EAAKL,aACnBmC,MAAO6lB,OAGf,qBACIvlB,UAAWC,KAAEqmB,iBACbzkB,QAAS,WAjDrBqD,EAAUX,YACN,cAAC,GAAD,CACIxF,KAAM,KACN6d,OAAQP,GACRe,OAAQyG,EACRpE,WAAYtD,GACZ7L,WAAYA,MAyCZ,SAII,qBACItQ,UACIO,IAAY2B,kBACZ,IACAjC,KAAEsmB,sBAJV,SAOK3mB,EAAmB,cAAehC,EAAKL,qBAIpD,cAAC,GAAD,CACIqf,OAAQT,GACRpd,KAAMA,EACNhB,QAASA,EACTqf,OAAQyG,EACR3N,QApIQ,SAAChF,GACjBgF,EAAQ,aAAIhF,KAoIJuO,WAAYvD,GACZqF,WAAY,QACZC,KAAMA,IAEV,qBAAKxhB,UAAWC,KAAEiE,OAAlB,SACI,cAAC,GAAD,CACIsd,KAAMA,EACNmC,QAASA,EACTC,UAAWA,EACXC,QAASC,U,qBC/JhBmD,GAAQ,WACjB,IAAMrpB,EAAOC,qBAAWlB,GAClBuI,EAAYT,KAClB,EAAwB3G,mBAAS,IAAjC,mBAAOiB,EAAP,KAAamX,EAAb,KACA,EAAwBpY,mBAAS,GAAjC,mBAAO0jB,EAAP,KAAasC,EAAb,KACA,EAA8BhmB,mBAAS,GAAvC,mBAAO6lB,EAAP,KAAgBqB,EAAhB,KACA,EAAkClnB,mBAAS,GAA3C,mBAAO8lB,EAAP,KACA,GADA,KACgDjmB,KAAxCQ,EAAR,EAAQA,QAA4BJ,GAApC,EAAiBE,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SACpC,EAA4BD,mBAAS,QAArC,mBAAOmnB,EAAP,KAAeC,EAAf,KAMMrB,EAAO,uCAAG,WAAOrC,EAAMkE,GAAb,iBAAApnB,EAAA,6DACZkjB,EAAOA,GAAc,EACjBqE,GAAgB,OAANZ,QAAM,IAANA,OAAA,EAAAA,EAAQtlB,QAAS,EAAIslB,EAAS,OAChC,SAARS,IACAG,EAAU,OACVX,EAAU,KALF,kBAQa/mB,EAAQ,yBAAD,OACCqjB,EADD,YACSqE,GACjC,MACA,KACA,CACIjgB,cAAehI,EAAKf,QAbpB,OAQF4R,EARE,OAgBRqV,EAAQtC,GACRwD,EAAWvW,EAAOyX,YAClBhQ,EAAQ6D,GAAmBtL,EAAO1P,OAlB1B,4GAAH,wDAsBb0G,qBAAU,WACNoe,EAAQ,EAAG,UACZ,IAaH,OACI,sBAAK7jB,UAAWC,KAAE0D,KAAlB,UACI,sBAAK3D,UAAWC,KAAEmmB,OAAlB,UACI,cAAC,GAAD,CACI7oB,aAAcK,EAAKL,aACnBmC,MAAOulB,EACP7F,SAAU8F,EACV/kB,YAAa,eACbkf,QAASwE,IAEb,qBACI7jB,UAAWC,KAAEqmB,iBACbzkB,QAAS,WAtBrBqD,EAAUX,YACN,cAAC,GAAD,CACIxF,KAAM,KACN6d,OAAQvB,GACR+B,OAAQyG,EACRpE,WAAYpE,OAeZ,SAII,qBACIrb,UACIO,IAAY2B,kBACZ,IACAjC,KAAEsmB,sBAJV,SAOK3mB,EAAmB,aAAchC,EAAKL,qBAInD,cAAC,GAAD,CACIqf,OAAQjB,GACR8D,WAAY/D,GACZ3c,KAAMA,EACNhB,QAASA,EACTqf,OAAQyG,EACR3N,QAxEQ,SAAChF,GACjBgF,EAAQ,aAAIhF,KAwEJqQ,WAAY,aACZC,KAAMA,IAEV,qBAAKxhB,UAAWC,KAAEiE,OAAlB,SACI,cAAC,GAAD,CACIsd,KAAMA,EACNmC,QAASA,EACTC,UAAWA,EACXC,QAASC,EACTmB,OAAQA,U,qBC5FfiC,GAAU,WACnB,IAAMtpB,EAAOC,qBAAWlB,GAClBuI,EAAYT,KAClB,EAAwB3G,mBAAS,IAAjC,mBAAOiB,EAAP,KAAamX,EAAb,KACA,EAAwBpY,mBAAS,GAAjC,mBAAO0jB,EAAP,KAAasC,EAAb,KACA,EAA8BhmB,mBAAS,GAAvC,mBAAO6lB,EAAP,KAAgBqB,EAAhB,KACA,EAAkClnB,mBAAS,GAA3C,mBAAO8lB,EAAP,KACA,GADA,KACgDjmB,KAAxCQ,EAAR,EAAQA,QAA4BJ,GAApC,EAAiBE,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SACpC,EAA4BD,mBAAS,QAArC,mBAAOmnB,EAAP,KAAeC,EAAf,KAMMrB,EAAO,uCAAG,WAAOrC,EAAMkE,GAAb,iBAAApnB,EAAA,6DACZkjB,EAAOA,GAAc,EACjBqE,GAAgB,OAANZ,QAAM,IAANA,OAAA,EAAAA,EAAQtlB,QAAS,EAAIslB,EAAS,OAChC,SAARS,IACAG,EAAU,OACVX,EAAU,KALF,kBAQa/mB,EAAQ,4BAAD,OACIqjB,EADJ,YACYqE,GACpC,MACA,KACA,CACIjgB,cAAehI,EAAKf,QAbpB,OAQF4R,EARE,OAgBRqV,EAAQtC,GACRwD,EAAWvW,EAAOyX,YAClBhQ,EAAQ6D,GAAmBtL,EAAO1P,OAlB1B,4GAAH,wDAsBb0G,qBAAU,WACNoe,EAAQ,EAAG,UACZ,IAcH,OACI,sBAAK7jB,UAAWC,KAAE0D,KAAlB,UACI,sBAAK3D,UAAWC,KAAEmmB,OAAlB,UACI,cAAC,GAAD,CACI7oB,aAAcK,EAAKL,aACnBmC,MAAOulB,EACP7F,SAAU8F,EACV/kB,YAAa,eACbkf,QAASwE,IAEb,qBACI7jB,UAAWC,KAAEqmB,iBACbzkB,QAAS,WAvBrBqD,EAAUX,YACN,cAAC,GAAD,CACIxF,KAAM,KACN6d,OAAQzB,GACRiC,OAAQyG,EACRpE,WAAYtE,GACZjL,YAAa,QAeb,SAII,qBACIlQ,UACIO,IAAY2B,kBACZ,IACAjC,KAAEsmB,sBAJV,SAOK3mB,EAAmB,eAAgBhC,EAAKL,qBAIrD,cAAC,GAAD,CACIkiB,WAAYjE,GACZoB,OAAQf,GACR9c,KAAMA,EACNhB,QAASA,EACTqf,OAAQyG,EACR3N,QAzEQ,SAAChF,GACjBgF,EAAQ,aAAIhF,KAyEJqQ,WAAY,aACZrR,YAAa,IACbsR,KAAMA,IAEV,qBAAKxhB,UAAWC,KAAEiE,OAAlB,SACI,cAAC,GAAD,CACIsd,KAAMA,EACNmC,QAASA,EACTC,UAAWA,EACXC,QAASC,EACTmB,OAAQA,UC9FfkC,GAAW,WACpB,IAAMvpB,EAAOC,qBAAWlB,GAClBuI,EAAYT,KAClB,EAAwB3G,mBAAS,IAAjC,mBAAOiB,EAAP,KAAamX,EAAb,KACA,EAAwBpY,mBAAS,GAAjC,mBAAO0jB,EAAP,KAAasC,EAAb,KACA,EAA8BhmB,mBAAS,GAAvC,mBAAO6lB,EAAP,KAAgBqB,EAAhB,KACA,EAAkClnB,mBAAS,GAA3C,mBAAO8lB,EAAP,KACA,GADA,KACgDjmB,KAAxCQ,EAAR,EAAQA,QAA4BJ,GAApC,EAAiBE,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SACpC,EAA4BD,mBAAS,IAArC,mBAAOmnB,EAAP,KAAeC,EAAf,KACA,EAAgCpnB,mBAAS,IAAzC,mBAAOqnB,EAAP,KAAiBC,EAAjB,KACA,EAA4BtnB,mBAAS,IAArC,mBAAOmd,EAAP,KAAeoK,EAAf,KACA,EAAgCvnB,mBAAS,IAAzC,mBAAOT,EAAP,KAAiBioB,EAAjB,KACA,EAAuCxnB,mBAAS,GAAhD,mBAAOynB,EAAP,KAAoBC,EAApB,KAMM3B,EAAO,uCAAG,WACZ4B,EACAC,EACAC,EACA3L,EACA8K,EACAc,GANY,uBAAAtnB,EAAA,6DAQZmnB,EAAQA,IAAgBjE,GAAc,GAClCqE,GAAqB,OAAXF,QAAW,IAAXA,OAAA,EAAAA,EAAaV,QACrBU,EAAYV,QACN,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQtlB,QAAS,EACjBslB,EACA,OACFa,GAAuB,OAAXH,QAAW,IAAXA,OAAA,EAAAA,EAAaR,UAAWQ,EAAYR,SAAW,OAC3DY,GAAqB,OAAXJ,QAAW,IAAXA,OAAA,EAAAA,EAAa1K,QAAS0K,EAAY1K,OAAS,OACrD+K,GAAuB,OAAXL,QAAW,IAAXA,OAAA,EAAAA,EAAatoB,UAAWsoB,EAAYtoB,SAAW,OACnD,SAARqoB,IACAG,EAAU,OACVC,EAAY,OACZC,EAAU,OACVb,EAAU,IACVE,EAAY,IACZC,EAAU,IACVC,EAAY,KAxBJ,kBA8BOnnB,EAAQ,8BAAD,OACYsnB,EADZ,YACqBI,EADrB,YACgCC,EADhC,YAC6CC,EAD7C,YACwDC,GAC1E,MACA,KACA,CACIpgB,cAAehI,EAAKf,QAnCpB,OA8BR4R,EA9BQ,OAsCRqV,EAAQtC,GACRwD,EAAWvW,EAAOyX,YAClBhQ,EAAQzH,EAAO1P,MACfymB,EAAgB/W,EAAO0X,YAzCf,4GAAH,gEA6Cb1gB,qBAAU,WACNoe,EAAQ,EAAG,UACZ,IAaH,OACI,sBAAK7jB,UAAWC,KAAE0D,KAAlB,UACI,sBAAK3D,UAAWC,KAAEmmB,OAAlB,UACI,sBAAKpmB,UAAWC,KAAEomB,eAAlB,UACI,cAAC,GAAD,CACI9oB,aAAcK,EAAKL,aACnBmC,MAAOulB,EACP7F,SAAU8F,EACV/kB,YAAa,mBACbkf,QAASwE,IAEb,cAAC,GAAD,CACItmB,aAAcK,EAAKL,aACnB8D,MAAO,IACPijB,QAAS,WACT5kB,MAAOylB,EACP/F,SAAUgG,EACVjlB,YAAa,eACbkf,QAASwE,EACThP,KAAMsF,GAAenM,OAAO,KAEhC,cAAC,GAAD,CACIzQ,aAAcK,EAAKL,aACnB8D,MAAO,IACPijB,QAAS,SACT5kB,MAAOub,EACPmE,SAAUiG,EACVllB,YAAa,gBACbkf,QAASwE,EACThP,KAAMsF,GAAenM,OAAO,KAEhC,cAAC,GAAD,CACIzQ,aAAcK,EAAKL,aACnB8D,MAAO,IACPijB,QAAS,WACT5kB,MAAOrC,EACP+hB,SAAUkG,EACVnlB,YAAa,mBACbkf,QAASwE,EACThP,KAAM4F,GAAWzM,OAAO,GAAGwB,iBAAiB,GAAG,KAEnD,cAAC,GAAD,CAAa9P,MAAO6lB,OAExB,qBACIvlB,UAAWC,KAAEqmB,iBACbzkB,QAAS,WAvDrBqD,EAAUX,YACN,cAAC,GAAD,CACIxF,KAAM,KACN6d,OAAQpC,GACR4C,OAAQyG,EACRpE,WAAYnF,OAgDZ,SAII,qBACIta,UACIO,IAAY2B,kBACZ,IACAjC,KAAEsmB,sBAJV,SAOK3mB,EAAmB,aAAchC,EAAKL,qBAInD,cAAC,GAAD,CACIqf,OAAQzC,GACRsF,WAAYnF,GACZvb,KAAMA,EACNhB,QAASA,EACTqf,OAAQyG,EACR3N,QAhIQ,SAAChF,GACjBgF,EAAQ,aAAIhF,KAgIJsQ,KAAMA,IAEV,qBAAKxhB,UAAWC,KAAEiE,OAAlB,SACI,cAAC,GAAD,CACIsd,KAAMA,EACNmC,QAASA,EACTC,UAAWA,EACXC,QAASC,EACTmB,OAAQA,U,qBC7JfzY,GAAQ,WACjB,IAAM5O,EAAOC,qBAAWlB,GAClBuI,EAAYT,KAClB,EAAwB3G,mBAAS,IAAjC,mBAAOiB,EAAP,KAAamX,EAAb,KACA,EAAwBpY,mBAAS,GAAjC,mBAAO0jB,EAAP,KAAasC,EAAb,KACA,EAA8BhmB,mBAAS,GAAvC,mBAAO6lB,EAAP,KACA,GADA,KACkC7lB,mBAAS,IAA3C,mBAAO8lB,EAAP,KACA,GADA,KACgDjmB,KAAxCQ,EAAR,EAAQA,QAA4BJ,GAApC,EAAiBE,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SAM9B8lB,EAAO,uCAAG,WAAOrC,EAAMkE,GAAb,eAAApnB,EAAA,+EAEaH,EAAQ,0BAEzB,MACA,KACA,CACIyH,cAAehI,EAAKf,QAPpB,OAEF4R,EAFE,OAURyH,EAAQzH,GAVA,uGAAH,wDAcbhJ,qBAAU,WACNoe,EAAQ,EAAG,UACZ,IAaH,OACI,sBAAK7jB,UAAWC,KAAE0D,KAAlB,UACI,sBAAK3D,UAAWC,KAAEmmB,OAAlB,UACI,qBACIpmB,UACIO,IAAY2B,kBAAoB,IAAMjC,KAAEmnB,YAFhD,SAKKxnB,EAAmB,YAAahC,EAAKL,gBAE1C,qBACIyC,UAAWC,KAAEqmB,iBACbzkB,QAAS,WAtBrBqD,EAAUX,YACN,cAAC,GAAD,CACIxF,KAAM,KACN6d,OAAQN,GACRc,OAAQyG,EACRpE,WAAYhE,OAeZ,SAII,qBACIzb,UACIO,IAAY2B,kBACZ,IACAjC,KAAEsmB,sBAJV,SAOK3mB,EACG,iBACAhC,EAAKL,qBAKrB,cAAC,GAAD,CACIqf,OAAQnB,GACR1c,KAAMA,EACNhB,QAASA,EACTqf,OAAQyG,EACR3N,QAlEQ,SAAChF,GACjBgF,EAAQ,aAAIhF,KAmEJsQ,KAAMA,IAEV,qBAAKxhB,UAAWC,KAAEiE,OAAlB,SACI,cAAC,GAAD,CACIsd,KAAMA,EACNmC,QAASA,EACTC,UAAWA,EACXC,QAASC,U,qBC/EhBuD,GAAW,WACpB,IAAMzpB,EAAOC,qBAAWlB,GAClBuI,EAAYT,KAClB,EAAwB3G,mBAAS,IAAjC,mBAAOiB,EAAP,KAAamX,EAAb,KACA,EAAwBpY,mBAAS,GAAjC,mBAAO0jB,EAAP,KAAasC,EAAb,KACA,EAA8BhmB,mBAAS,GAAvC,mBAAO6lB,EAAP,KAAgBqB,EAAhB,KACA,EAAkClnB,mBAAS,GAA3C,mBAAO8lB,EAAP,KACA,GADA,KACgDjmB,KAAxCQ,EAAR,EAAQA,QAA4BJ,GAApC,EAAiBE,MAAjB,EAAwBmB,WAAxB,EAAoCrB,SACpC,EAA4BD,mBAAS,QAArC,mBAAOmnB,EAAP,KAAeC,EAAf,KAMMrB,EAAO,uCAAG,WAAOrC,EAAMkE,GAAb,iBAAApnB,EAAA,6DACZkjB,EAAOA,GAAc,EACjBqE,GAAgB,OAANZ,QAAM,IAANA,OAAA,EAAAA,EAAQtlB,QAAS,EAAIslB,EAAS,OAChC,SAARS,IACAG,EAAU,OACVX,EAAU,KALF,kBAQa/mB,EAAQ,6BAAD,OACK0nB,GAC7B,MACA,KACA,CACIjgB,cAAehI,EAAKf,QAbpB,OAQF4R,EARE,OAgBRqV,EAAQtC,GACRwD,EAAWvW,EAAOyX,YAClBhQ,EAAQ6D,GAAmBtL,EAAO1P,OAlB1B,4GAAH,wDAsBb0G,qBAAU,WACNoe,EAAQ,EAAG,UACZ,IAaH,OACI,sBAAK7jB,UAAWC,KAAE0D,KAAlB,UACI,sBAAK3D,UAAWC,KAAEmmB,OAAlB,UACI,cAAC,GAAD,CACI7oB,aAAcK,EAAKL,aACnBmC,MAAOulB,EACP7F,SAAU8F,EACV/kB,YAAa,eACbkf,QAASwE,IAEb,qBACI7jB,UAAWC,KAAEqmB,iBACbzkB,QAAS,WAtBrBqD,EAAUX,YACN,cAAC,GAAD,CACIxF,KAAM,KACN6d,OAAQ7B,GACRqC,OAAQyG,EACRpE,WAAY1E,OAeZ,SAII,qBACI/a,UACIO,IAAY2B,kBACZ,IACAjC,KAAEsmB,sBAJV,SAOK3mB,EACG,iBACAhC,EAAKL,qBAKrB,cAAC,GAAD,CACIqf,OAAQ9B,GACR2E,WAAY1E,GACZhc,KAAMA,EACNhB,QAASA,EACTqf,OAAQyG,EACR3N,QA3EQ,SAAChF,GACjBgF,EAAQ,aAAIhF,KA2EJqQ,WAAY,aACZC,KAAMA,IAEV,qBAAKxhB,UAAWC,KAAEiE,OAAlB,SACI,cAAC,GAAD,CACIsd,KAAMA,EACNmC,QAASA,EACTC,UAAWA,EACXC,QAASC,EACTmB,OAAQA,U,gBChHfqC,GAAoB,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,SAAazG,EAAW,mBACvD,EAA4BhjB,oBAAS,GAArC,mBAAOwG,EAAP,KAAekjB,EAAf,KACA,EAAwB1pB,mBAAS,MAAjC,mBAAOiB,EAAP,KAAamX,EAAb,KAYA,OAAO,cAAC7R,EAAiBojB,SAAlB,yBACH/nB,MAAO,CACH4E,SACAvF,OACAwF,YAdY,SAAC2M,GACjBgF,EAAQhF,GACRsW,GAAU,IAaNhjB,YAVY,WAChB0R,EAAQ,MACRsR,GAAU,MAUN1G,GAPD,aASFyG,M,qBCrBIG,GAAY,WACrB,IAAMC,EAAYljB,KAElB,IAAKkjB,EAAUrjB,OACX,OAAO,KAOX,OACI,qBAAKtE,UAAWC,KAAE2nB,KAAM/lB,QAAS,kBAAM8lB,EAAUnjB,eAAjD,SACI,qBAAKxE,UAAWC,KAAE0D,KAAM9B,QAAS,SAACwP,GAAD,OANtB,SAACA,GAChBA,EAAEC,kBAK0CC,CAAWF,IAAnD,SACKsW,EAAU5oB,U,oBCLrB8oB,GAAQC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,MAAO,UACPzlB,KAAM9B,EAAaC,YACnBunB,KAAMxnB,EAAaC,YACnBwnB,aAAc,QAEhBC,UAAW,CACTH,MAAO,UACPzlB,KAAM,UACN0lB,KAAM,UACNC,aAAc,WAwDLE,OAnDf,WACE,MrE3BqB,WACrB,MAA0BvqB,mBAAS,MAAnC,mBAAOjB,EAAP,KAAcyrB,EAAd,KACA,EAA0BxqB,oBAAS,GAAnC,mBAAOyqB,EAAP,KAAcC,EAAd,KACA,EAA0B1qB,mBAAS,MAAnC,mBAAOb,EAAP,KAAc8F,EAAd,KACA,EAAqCjF,mBAAS,MAA9C,mBAAOX,EAAP,KAAmBsrB,EAAnB,KACA,EAAyB3qB,mBAAS,MAAlC,mBAAOV,EAAP,KAAasrB,EAAb,KACA,EAAgC5qB,mBAAS,MAAzC,mBAAOT,EAAP,KAAiBioB,EAAjB,KACA,EAAwCxnB,mBAAS,MAAjD,mBAAOP,EAAP,KAAqBorB,EAArB,KACA,EAA8ChrB,IAA9BQ,GAAhB,EAAOJ,QAAP,EAAgBI,SAChB,GADA,EAAyBF,MAAzB,EAAgCmB,WACYtB,mBAAS,KAArD,mBAAON,EAAP,KAAuBorB,EAAvB,KAEM1rB,EAAWkB,uBAAY,SAACnB,GAC5B8F,EAAS9F,GAET4rB,aAAaC,QAAQ,QAASpqB,KAAKC,UAAU1B,MAC5C,IAEGH,EAAQsB,uBAAY,SAAC2qB,EAAU9rB,EAAOE,EAAYC,GACtDkrB,EAASS,GACThmB,EAAS9F,GACTwrB,EAAetrB,GACfurB,EAAStrB,GAETyrB,aAAaC,QACXzpB,EACAX,KAAKC,UAAU,CACb9B,MAAOksB,KAGXF,aAAaC,QAAQ,QAASpqB,KAAKC,UAAU1B,IAC7C4rB,aAAaC,QAAQ,aAAcpqB,KAAKC,UAAUxB,IAClD0rB,aAAaC,QAAQ,OAAQpqB,KAAKC,UAAUvB,MAC3C,IAEGL,EAASqB,uBAAY,WACzBkqB,EAAS,MACTvlB,EAAS,MACT0lB,EAAe,MAEfI,aAAaG,WAAW3pB,KACvB,IAEG4pB,EAAe,uCAAG,WAAOjD,GAAP,eAAA1nB,EAAA,+EAEDH,EAAQ,uCAAD,OAAwC6nB,GAAa,MAAO,KAAM,CAC1FpgB,cAAc,GAAD,OAAK/I,KAHA,OAEdkC,EAFc,OAKpB4pB,EAAgB5pB,GALI,gDAOpBiW,QAAQ/W,MAAM,SAAd,MAPoB,yDAAH,sDAWfX,EAAW,uCAAG,WAAO0oB,GAAP,SAAA1nB,EAAA,6DAClBgnB,EAAYU,GADM,SAEZ6C,aAAaC,QAAQ,WAAY9C,GAFrB,uBAGZiD,EAAgBjD,GAHJ,2CAAH,sDAMXvoB,EAAc,uCAAG,4BAAAa,EAAA,+EAEAH,EAAQ,yBAA0B,MAAO,KAAM,CAChEyH,cAAc,GAAD,OAAK/I,KAHD,OAEbkC,EAFa,OAKnB6pB,EAAkB7pB,GALC,uGAAH,qDAwBpB,OAfA0G,qBAAU,WACRhI,IACA,IAAMsB,EAAOL,KAAKwqB,MAAML,aAAaM,QAAQ9pB,IACvCpC,EAAQyB,KAAKwqB,MAAML,aAAaM,QAAQ,UACxChsB,EAAauB,KAAKwqB,MAAML,aAAaM,QAAQ,eAC7C/rB,EAAOsB,KAAKwqB,MAAML,aAAaM,QAAQ,SACvCnD,EAAY6C,aAAaM,QAAQ,YACvC7rB,EAAY0oB,GAAwB,MAEhCjnB,GAAQA,EAAKlC,OAASI,GAASE,GAAcC,GAC/CN,EAAMiC,EAAKlC,MAAOI,EAAOE,EAAYC,GAEvCorB,GAAS,KACR,CAAC1rB,IAEG,CACLA,QACAC,SACAF,QACA0rB,QACAtrB,QACAC,WACAC,aACAC,OACAC,WACAC,cACAC,eACAC,iBACAC,kBqEvDE2rB,GAbFvsB,EADF,EACEA,MACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,OAEAE,GALF,EAIEsrB,MAJF,EAKEtrB,OACAC,EANF,EAMEA,SACAC,EAPF,EAOEA,WACAC,EARF,EAQEA,KACAC,EATF,EASEA,SACAC,EAVF,EAUEA,YACAC,EAXF,EAWEA,aACAC,EAZF,EAYEA,eACAC,EAbF,EAaEA,eAGIT,IAAoBH,EAEpBwsB,ECnCiB,SAACrsB,EAAiBssB,GACzC,OAAItsB,EACEssB,EAEA,qCACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,8BAA8BC,OAAK,EAA/C,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,8BAA8BC,OAAK,EAA/C,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,8BAA8BC,OAAK,EAA/C,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,gCAAgCC,OAAK,EAAjD,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,8BAA8BC,OAAK,EAA/C,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,gCAAgCC,OAAK,EAAjD,SACE,cAAC,GAAD,MAQF,cAAC,IAAD,CAAOD,KAAK,8BAA8BC,OAAK,EAA/C,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,kCAAkCC,OAAK,EAAnD,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAUpL,GAAG,sCAKnB,qCACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmL,KAAK,kCAAkCC,OAAK,EAAnD,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAUpL,GAAG,0CAOnB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmL,KAAK,6BAA6BC,OAAK,EAA9C,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUpL,GAAG,kCDxBFqL,CAAUzsB,EADM,mFAAfG,GAGhB,OACE,cAACusB,GAAA,EAAD,CAAsBC,YAAaC,KAAnC,SACE,cAACC,EAAA,EAAD,CAAehC,MAAOA,GAAtB,SACE,cAAClrB,EAAY8qB,SAAb,CACE/nB,MAAO,CACL7C,QACAC,QACAC,SACAC,kBACAC,QACAC,WACAC,aACAC,OACAC,WACAC,cACAC,eACAC,iBACAC,kBAdJ,SAiBE,eAAC,GAAD,WACE,cAAC,GAAD,IACA,cAAC,IAAD,UAAS4rB,cEpErBS,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UAAe,cAAC,GAAD,QAEnBC,SAASC,eAAe,U,kBCT1B1tB,EAAOC,QAAU,CAAC,OAAS,qBAAqB,QAAU,sBAAsB,SAAW,uBAAuB,OAAS,qBAAqB,SAAW,uBAAuB,uBAAyB,qCAAqC,kBAAoB,gCAAgC,UAAY,wBAAwB,iBAAmB,+BAA+B,sBAAwB,oCAAoC,gBAAkB,8BAA8B,kBAAoB,gCAAgC,iBAAmB,+BAA+B,wBAA0B,sCAAsC,4BAA8B,0CAA0C,mBAAqB,iCAAiC,aAAe,2BAA2B,UAAY,wBAAwB,aAAe,2BAA2B,KAAO,mBAAmB,oBAAsB,kCAAkC,aAAe,2BAA2B,YAAc,0BAA0B,aAAe,2BAA2B,YAAc,0BAA0B,WAAa,yBAAyB,aAAe,2BAA2B,gBAAkB,8BAA8B,YAAc,0BAA0B,WAAa,yBAAyB,aAAe,2BAA2B,eAAiB,6BAA6B,gBAAkB,8BAA8B,IAAM,kBAAkB,WAAa,yBAAyB,KAAO,mBAAmB,YAAc,0BAA0B,UAAY,wBAAwB,WAAa,yBAAyB,WAAa,yBAAyB,YAAc,0BAA0B,KAAO,mBAAmB,WAAa,yBAAyB,YAAc,0BAA0B,aAAe,2BAA2B,YAAc,0BAA0B,aAAe,2BAA2B,YAAc,0BAA0B,YAAc,0BAA0B,cAAgB,4BAA4B,SAAW,uBAAuB,aAAe,2BAA2B,gBAAkB,8BAA8B,qBAAuB,mCAAmC,4BAA8B,0CAA0C,aAAe,2BAA2B,cAAgB,4BAA4B,QAAU,sBAAsB,gBAAkB,8BAA8B,oBAAsB,kCAAkC,uBAAyB,qCAAqC,eAAiB,6BAA6B,gBAAkB,8BAA8B,cAAgB,4BAA4B,qBAAuB,mCAAmC,+BAAiC,6CAA6C,eAAiB,6BAA6B,cAAgB,4BAA4B,YAAc,0BAA0B,SAAW,uBAAuB,MAAQ,oBAAoB,WAAa,yBAAyB,IAAM,kBAAkB,KAAO,mBAAmB,MAAQ,oBAAoB,YAAc,0BAA0B,iBAAmB,+BAA+B,UAAY,wBAAwB,UAAY,wBAAwB,mBAAqB,iCAAiC,WAAa,yBAAyB,aAAe,2BAA2B,YAAc,0BAA0B,UAAY,wBAAwB,gBAAkB,8BAA8B,kBAAoB,gCAAgC,oBAAsB,kCAAkC,cAAgB,4BAA4B,qBAAuB,mCAAmC,uBAAyB,qCAAqC,aAAe,2BAA2B,OAAS,qBAAqB,KAAO,mBAAmB,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,KAAO,mBAAmB,YAAc,0BAA0B,mBAAqB,iCAAiC,qBAAuB,mCAAmC,qBAAuB,mCAAmC,MAAQ,oBAAoB,QAAU,sBAAsB,YAAc,0BAA0B,oBAAsB,kCAAkC,yBAA2B,uCAAuC,cAAgB,4BAA4B,WAAa,yBAAyB,gBAAkB,8BAA8B,uBAAyB,qCAAqC,MAAQ,sB,mBCAhqJD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,OAAS,sBAAsB,eAAiB,8BAA8B,OAAS,sBAAsB,iBAAmB,gCAAgC,sBAAwB,uC,mBCArOD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,IAAM,kBAAkB,IAAM,kBAAkB,IAAM,kBAAkB,UAAY,wBAAwB,OAAS,qBAAqB,cAAgB,4BAA4B,mBAAqB,iCAAiC,KAAO,mBAAmB,MAAQ,oBAAoB,UAAY,0B,mBCAtXD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,MAAQ,+BAA+B,GAAK,4BAA4B,QAAU,iCAAiC,IAAM,6BAA6B,YAAc,qCAAqC,mBAAqB,8C,kBCArRD,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,kBAAoB,uCAAuC,iBAAmB,sCAAsC,eAAiB,oCAAoC,gBAAkB,qCAAqC,mBAAqB,wCAAwC,gBAAkB,uC,mBCAtXD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,WAAa,6BAA6B,aAAe,+BAA+B,KAAO,uBAAuB,YAAc,8BAA8B,UAAY,4BAA4B,WAAa,6BAA6B,WAAa,6BAA6B,YAAc,8BAA8B,KAAO,uBAAuB,WAAa,6BAA6B,aAAe,+BAA+B,YAAc,8BAA8B,aAAe,+BAA+B,YAAc,8BAA8B,YAAc,8BAA8B,SAAW,2BAA2B,WAAa,6BAA6B,MAAQ,wBAAwB,mBAAqB,qCAAqC,YAAc,8BAA8B,gBAAkB,kCAAkC,kBAAoB,oCAAoC,oBAAsB,sCAAsC,cAAgB,gCAAgC,cAAgB,gCAAgC,qBAAuB,uCAAuC,uBAAyB,yCAAyC,aAAe,+BAA+B,OAAS,yBAAyB,KAAO,uBAAuB,KAAO,uBAAuB,MAAQ,wBAAwB,MAAQ,wBAAwB,KAAO,uBAAuB,YAAc,8BAA8B,mBAAqB,qCAAqC,qBAAuB,uCAAuC,qBAAuB,uCAAuC,MAAQ,wBAAwB,QAAU,0BAA0B,YAAc,8BAA8B,oBAAsB,sCAAsC,yBAA2B,2CAA2C,cAAgB,mC","file":"static/js/main.3939de53.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Video_root__2WCLr\",\"header\":\"Video_header__in5ej\",\"wrapper_header\":\"Video_wrapper_header__3tKK5\",\"footer\":\"Video_footer__1WJ0G\",\"create_button_ok\":\"Video_create_button_ok__3pzSY\",\"create_button_ok_text\":\"Video_create_button_ok_text__RpVbU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Video_root__3r8-a\",\"header\":\"Video_header__2tOTT\",\"wrapper_header\":\"Video_wrapper_header__3cLmU\",\"footer\":\"Video_footer__1hKlL\",\"create_button_ok\":\"Video_create_button_ok__29D5O\",\"create_button_ok_text\":\"Video_create_button_ok_text__13_3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Lengs_root__1fcWB\",\"header\":\"Lengs_header__1woan\",\"footer\":\"Lengs_footer__2GhYb\",\"create_button_ok\":\"Lengs_create_button_ok__1-rlR\",\"create_button_ok_text\":\"Lengs_create_button_ok_text__2xTUY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Poster_root__VZJul\",\"header\":\"Poster_header__2jeFn\",\"footer\":\"Poster_footer__38MCo\",\"create_button_ok\":\"Poster_create_button_ok__1xt9x\",\"create_button_ok_text\":\"Poster_create_button_ok_text__2SYg_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Tests_root__ZUsfm\",\"header\":\"Tests_header__2EP9D\",\"footer\":\"Tests_footer__2Y5i5\",\"create_button_ok\":\"Tests_create_button_ok__2va2q\",\"create_button_ok_text\":\"Tests_create_button_ok_text__1h78p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Courses_root__3tAzj\",\"header\":\"Courses_header__3pYz7\",\"footer\":\"Courses_footer__11rdY\",\"create_button_ok\":\"Courses_create_button_ok__2s8lX\",\"create_button_ok_text\":\"Courses_create_button_ok_text__3928V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Playlist_root__3BkaV\",\"header\":\"Playlist_header__1u2Gp\",\"footer\":\"Playlist_footer__2hdxG\",\"create_button_ok\":\"Playlist_create_button_ok__2Oton\",\"create_button_ok_text\":\"Playlist_create_button_ok_text__3UVoP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonFull_button__3z14e\",\"button_text\":\"ButtonFull_button_text__1n9A3\",\"block_loader\":\"ButtonFull_block_loader__2UXF6\",\"loader\":\"ButtonFull_loader__14UKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"HeaderAuth_body__3JxgL\",\"block\":\"HeaderAuth_block__3N8pF\",\"logo\":\"HeaderAuth_logo__3SjDS\",\"text_glav\":\"HeaderAuth_text_glav__3cWPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"LogoApp_label__3bd9D\",\"logo_app\":\"LogoApp_logo_app__gNBlv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Search_root__25_QS\",\"input\":\"Search_input__3A19Q\",\"button\":\"Search_button__CrIXF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_popup\":\"Header_root_popup__2Rr2V\",\"popup_header\":\"Header_popup_header__2w7zz\",\"lines\":\"Header_lines__2g7vP\",\"lang\":\"Header_lang__2Lz5H\",\"lang_item_active\":\"Header_lang_item_active__1HTwT\",\"lang_item\":\"Header_lang_item__3uX8h\",\"popup_label\":\"Header_popup_label__2OQKe\",\"button_close\":\"Header_button_close__3-cfP\",\"placeholder\":\"Header_placeholder__EFcPl\",\"popup_error\":\"Header_popup_error__FRJtw\",\"popup_ok\":\"Header_popup_ok___oWKU\",\"lenBut\":\"Header_lenBut__28ejG\",\"input\":\"Header_input__3CNeB\",\"popup_liner_button\":\"Header_popup_liner_button__2RxmB\",\"popup_button_ok\":\"Header_popup_button_ok__2Hmvc\",\"popup_button_exit\":\"Header_popup_button_exit__3C5TG\",\"popup_button_ok_text\":\"Header_popup_button_ok_text__bYnBN\",\"popup_button_exit_text\":\"Header_popup_button_exit_text__3hBKN\",\"block_loader\":\"Header_block_loader__1PYq-\",\"loader\":\"Header_loader__2hnkK\",\"root\":\"Header_root__3V5FA\",\"blur\":\"Header_blur__1Kd_P\",\"block\":\"Header_block__3yUud\",\"label\":\"Header_label__1K22w\",\"menu\":\"Header_menu__1xax1\",\"button_item\":\"Header_button_item__1xOcW\",\"button_item_active\":\"Header_button_item_active__McWfW\",\"block_profile_active\":\"Header_block_profile_active__1VKsN\",\"block_profile_header\":\"Header_block_profile_header__2w3rM\",\"email\":\"Header_email__28aKv\",\"profile\":\"Header_profile__3JnHw\",\"list_button\":\"Header_list_button__1TeqS\",\"button_profile_item\":\"Header_button_profile_item__31yLe\",\"button_profile_item_text\":\"Header_button_profile_item_text__ZG0aW\",\"label_profile\":\"Header_label_profile__2TlFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputFull_input__1zHE9\",\"error_text\":\"InputFull_error_text__3ICWK\",\"inp\":\"InputFull_inp__xFmDs\",\"but\":\"InputFull_but__FYN7e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PopupForm_root__3i08r\",\"blur\":\"PopupForm_blur__2pesW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"BackgroundLogo_main__26NbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CustomFontLite\":\"GlobalStyle_CustomFontLite__3gF3n\",\"CustomFontRegular\":\"GlobalStyle_CustomFontRegular__2bMDp\",\"CustomFontMedium\":\"GlobalStyle_CustomFontMedium__3AtpB\",\"CustomFontBold\":\"GlobalStyle_CustomFontBold__2VGOP\",\"BellotaFontLite\":\"GlobalStyle_BellotaFontLite__OBm3_\",\"BellotaFontRegular\":\"GlobalStyle_BellotaFontRegular__2P0oS\",\"BellotaFontBold\":\"GlobalStyle_BellotaFontBold__2l6vT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TextCounter_root__31ONQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_file\":\"Form_root_file__2tpIr\",\"item_header_label\":\"Form_item_header_label__2aI1X\",\"wrapper_bool\":\"Form_wrapper_bool__247ft\",\"root_click\":\"Form_root_click__2AGxQ\",\"root_click_b\":\"Form_root_click_b__14KE6\",\"block_wrapper_b\":\"Form_block_wrapper_b__2JN2I\",\"wrapper_box\":\"Form_wrapper_box__2Jphc\",\"block_root\":\"Form_block_root__3yWmk\",\"button_input\":\"Form_button_input__3cWy5\",\"button_input_b\":\"Form_button_input_b__2dqDG\",\"box\":\"Form_box__2geIS\",\"box_active\":\"Form_box_active__srXGA\",\"clip\":\"Form_clip__3ovCd\",\"clip_active\":\"Form_clip_active__1HKVb\",\"clip_text\":\"Form_clip_text__1JaUI\",\"open_input\":\"Form_open_input__9StE7\",\"input_file\":\"Form_input_file__30lMh\",\"button_file\":\"Form_button_file__As_mS\",\"step\":\"Form_step__230yu\",\"root_popup\":\"Form_root_popup__1C65G\",\"popup_header\":\"Form_popup_header__1pcuG\",\"popup_label\":\"Form_popup_label__2andW\",\"button_close\":\"Form_button_close__35R-E\",\"placeholder\":\"Form_placeholder__22L7n\",\"popup_error\":\"Form_popup_error__dCbuB\",\"popup_ok\":\"Form_popup_ok__yrSXZ\",\"inputarrea\":\"Form_inputarrea__-B7nh\",\"input\":\"Form_input__nmc9_\",\"popup_liner_button\":\"Form_popup_liner_button__3qZA5\",\"popup_button_ok\":\"Form_popup_button_ok__1su1k\",\"popup_button_exit\":\"Form_popup_button_exit__1h9Kn\",\"popup_button_delete\":\"Form_popup_button_delete__3PXFn\",\"block_buttons\":\"Form_block_buttons__31JBR\",\"popup_button_ok_text\":\"Form_popup_button_ok_text__1P7hC\",\"popup_button_exit_text\":\"Form_popup_button_exit_text__1-0Nj\",\"block_loader\":\"Form_block_loader__2v_aU\",\"loader\":\"Form_loader__1fDLk\",\"root\":\"Form_root__1yMyi\",\"blur\":\"Form_blur__3m5SF\",\"block\":\"Form_block__1rDqr\",\"label\":\"Form_label__ipNO8\",\"menu\":\"Form_menu__2h9ue\",\"button_item\":\"Form_button_item__1mtil\",\"button_item_active\":\"Form_button_item_active____Xrn\",\"block_profile_active\":\"Form_block_profile_active__pqgQE\",\"block_profile_header\":\"Form_block_profile_header__3wIm4\",\"email\":\"Form_email__1KmCb\",\"profile\":\"Form_profile__1PPcJ\",\"list_button\":\"Form_list_button__1Qo6i\",\"button_profile_item\":\"Form_button_profile_item__15puw\",\"button_profile_item_text\":\"Form_button_profile_item_text__3Qb5Q\",\"label_profile\":\"Form_label_profile__2ELsa\",\"liner_menu\":\"Form_liner_menu__3p3Rp\",\"liner_menu_item\":\"Form_liner_menu_item__2qgwd\",\"liner_menu_item_active\":\"Form_liner_menu_item_active__3gX7E\",\"button_upload\":\"Form_button_upload__3m7M5\",\"button_upload_text\":\"Form_button_upload_text__cks30\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Search_root__3iGsq\",\"value\":\"Search_value__1Y28c\",\"placeholder\":\"Search_placeholder__12AD9\",\"input\":\"Search_input__DuGRO\",\"button\":\"Search_button__1dx3t\",\"root_popup\":\"Search_root_popup__3XVM9\",\"popup_header\":\"Search_popup_header__vN7BI\",\"popup_label\":\"Search_popup_label__3zh4Q\",\"button_close\":\"Search_button_close__2bz4K\",\"placeholder_i\":\"Search_placeholder_i__3kgoE\",\"popup_error\":\"Search_popup_error__3maJQ\",\"popup_ok\":\"Search_popup_ok__2iZyL\",\"popup_liner_button\":\"Search_popup_liner_button__35z3Z\",\"popup_button_ok\":\"Search_popup_button_ok__Q0x8Q\",\"popup_button_ok_text\":\"Search_popup_button_ok_text__3-OsN\",\"popup_button_exit_text\":\"Search_popup_button_exit_text__2QfpW\",\"popup_button_exit\":\"Search_popup_button_exit__3t4Vn\",\"popup_button_delete\":\"Search_popup_button_delete__PLf4o\",\"wrapper_bool\":\"Search_wrapper_bool__3B58b\",\"root_click\":\"Search_root_click__2Ia6J\",\"button_input\":\"Search_button_input__2R_gA\",\"button_input_b\":\"Search_button_input_b__1qjUM\",\"box\":\"Search_box__IzWGq\",\"box_active\":\"Search_box_active__qMTCP\",\"clip\":\"Search_clip__3M_YS\",\"clip_active\":\"Search_clip_active__39j8c\",\"clip_text\":\"Search_clip_text__3eKDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TableCard_table__23y1R\",\"tooltip_test\":\"TableCard_tooltip_test__uYqOW\",\"tooltip\":\"TableCard_tooltip__2stCz\",\"tooltip_course\":\"TableCard_tooltip_course__Gzawc\",\"text_item\":\"TableCard_text_item__3W4AV\",\"icon_filter\":\"TableCard_icon_filter__BDR6Z\",\"icon_filter_active\":\"TableCard_icon_filter_active__RpnhL\",\"table_tr\":\"TableCard_table_tr__6wyRk\",\"table_td\":\"TableCard_table_td__3nBP0\",\"table_td_block\":\"TableCard_table_td_block__2ffOg\",\"table_td_label\":\"TableCard_table_td_label__bOxg1\",\"loader\":\"TableCard_loader__qWunP\",\"td_error_text\":\"TableCard_td_error_text__2vghv\",\"tr_error\":\"TableCard_tr_error__22hsG\",\"td_error\":\"TableCard_td_error__SaYBw\",\"td_error_block\":\"TableCard_td_error_block__2HGmC\",\"wrapper_buttons\":\"TableCard_wrapper_buttons__29g1-\",\"default_reordering\":\"TableCard_default_reordering__3mPnp\",\"button_reordering\":\"TableCard_button_reordering__1hnR0\",\"tr_br\":\"TableCard_tr_br__pGymg\",\"tr\":\"TableCard_tr__2U98C\",\"td\":\"TableCard_td__3DvCv\"};","import { createContext } from \"react\";\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false,\r\n    email: null,\r\n    newEmail: null,\r\n    type_admin: null,\r\n    name: null,\r\n    language: null,\r\n    newLanguage: noop,\r\n    translations: null,\r\n    languages_list: null,\r\n    get_list_lengs: noop,\r\n});\r\n","import {httpServer as http} from './Settings/const.js';\r\n\r\n// localhost\r\nexport const httpServer = http;\r\n\r\n// prodaction\r\n// export const httpServer = \"https://admin.koleznev.by\";\r\n\r\n// herocku\r\n// export const httpServer = \"https://musictherapy96.herokuapp.com\";\r\n","// localhost\r\n// export const httpServer = 'http://localhost:5000';\r\n\r\n// prodaction\r\nexport const httpServer = 'https://178.172.165.101/koleznev';\r\n\r\n// herocku\r\n// export const httpServer = \"https://musictherapy96.herokuapp.com\";\r\n","import {useState, useCallback, useContext} from 'react';\r\nimport {httpServer} from '../const';\r\nimport {AuthContext} from \"../context/authContext\";\r\n\r\nexport const useHttp = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    setLoading(true)\r\n    try {\r\n      if (body) {\r\n        body = JSON.stringify(body)\r\n        headers['Content-Type'] = 'application/json'\r\n      }\r\n\r\n      const response = await fetch(httpServer + url, {method, body, headers})\r\n      const data = await response.json()\r\n\r\n      if (!response.ok && response.status === 401) {\r\n        auth.logout();\r\n      }\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Что-то пошло не так')\r\n      }\r\n\r\n      setLoading(false)\r\n\r\n      return data\r\n    } catch (e) {\r\n      setLoading(false)\r\n      setError(e.message)\r\n      throw e\r\n    }\r\n  }, [])\r\n\r\n  const clearError = useCallback(() => setError(null), [])\r\n\r\n  return { loading, request, error, clearError }\r\n}\r\n","import {useState, useCallback, useEffect} from 'react';\r\nimport {useHttp} from './http.hook';\r\n\r\nconst storageName = 'userData';\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n  const [ready, setReady] = useState(false);\r\n  const [email, setEmail] = useState(null);\r\n  const [type_admin, set_type_admin] = useState(null);\r\n  const [name, set_name] = useState(null);\r\n  const [language, setLanguage] = useState(null);\r\n  const [translations, setTranslations] = useState(null);\r\n  const {loading, request, error, clearError} = useHttp();\r\n  const [languages_list, setLanguages_list] = useState([]);\r\n\r\n  const newEmail = useCallback((email) => {\r\n    setEmail(email);\r\n\r\n    localStorage.setItem('email', JSON.stringify(email));\r\n  }, []);\r\n\r\n  const login = useCallback((jwtToken, email, type_admin, name) => {\r\n    setToken(jwtToken);\r\n    setEmail(email);\r\n    set_type_admin(type_admin);\r\n    set_name(name);\r\n\r\n    localStorage.setItem(\r\n      storageName,\r\n      JSON.stringify({\r\n        token: jwtToken,\r\n      })\r\n    );\r\n    localStorage.setItem('email', JSON.stringify(email));\r\n    localStorage.setItem('type_admin', JSON.stringify(type_admin));\r\n    localStorage.setItem('name', JSON.stringify(name));\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setEmail(null);\r\n    set_type_admin(null);\r\n\r\n    localStorage.removeItem(storageName);\r\n  }, []);\r\n\r\n  const getTranslations = async (language_) => {\r\n    try {\r\n      const data = await request(`/api/admin_panel/translations/admin/${language_}`, 'GET', null, {\r\n        Authorization: `${token}`,\r\n      });\r\n      setTranslations(data);\r\n    } catch (e) {\r\n      console.error('error-', e);\r\n    }\r\n  };\r\n\r\n  const newLanguage = async (language_) => {\r\n    setLanguage(language_);\r\n    await localStorage.setItem('language', language_);\r\n    await getTranslations(language_);\r\n  };\r\n\r\n  const get_list_lengs = async () => {\r\n    try {\r\n      const data = await request(`/api/admin_panel/lengs`, 'GET', null, {\r\n        Authorization: `${token}`,\r\n      });\r\n      setLanguages_list(data);\r\n    } catch (e) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    get_list_lengs();\r\n    const data = JSON.parse(localStorage.getItem(storageName));\r\n    const email = JSON.parse(localStorage.getItem('email'));\r\n    const type_admin = JSON.parse(localStorage.getItem('type_admin'));\r\n    const name = JSON.parse(localStorage.getItem('name'));\r\n    const language_ = localStorage.getItem('language');\r\n    newLanguage(language_ ? language_ : 'ru');\r\n\r\n    if (data && data.token && email && type_admin && name) {\r\n      login(data.token, email, type_admin, name);\r\n    }\r\n    setReady(true);\r\n  }, [login]);\r\n\r\n  return {\r\n    login,\r\n    logout,\r\n    token,\r\n    ready,\r\n    email,\r\n    newEmail,\r\n    type_admin,\r\n    name,\r\n    language,\r\n    newLanguage,\r\n    translations,\r\n    languages_list,\r\n    get_list_lengs,\r\n  };\r\n};\r\n","export const checkLanguage = (field, language) => {\r\n    if (typeof field === \"string\") return field;\r\n    let data = field?.find(\r\n        (item) => item?.language === language && item.value?.length\r\n    );\r\n    if (!data) return field[0].value;\r\n    return data.value;\r\n};\r\n\r\nexport const checkLanguageConst = (value, translations) => {\r\n    if (!value) return \"\";\r\n    return translations && translations[value] ? translations[value] : value;\r\n};\r\n","import React, { useContext, useCallback, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport s from \"./InputFull.module.scss\";\r\nimport GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const InputFull = ({ data, translations }) => {\r\n    return (\r\n        <>\r\n            <input\r\n                type={data.secret}\r\n                value={data.value}\r\n                // placeholderTextColor={'#F3F3F3'}\r\n                className={s.input}\r\n                placeholder={checkLanguageConst(data.placeholder, translations)}\r\n                onChange={(value) => data.change(value.target.value)}\r\n            />\r\n            {data.error?.length ? (\r\n                <div\r\n                    className={GlobalStyle.CustomFontLite + \" \" + s.error_text}\r\n                >\r\n                    {checkLanguageConst(data.error, translations)}\r\n                </div>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n","export const ColorsStyles = {\r\n    colorButton: \"#7092be\",\r\n    colorTextError: \"#fcb900\",\r\n    backgroundFooter: \"#021f2d\",\r\n    colorHr: \"#b3b3b3\",\r\n\r\n    colorInput: \"#7092be\",\r\n    background: \"#fff\",\r\n    backgroundTwo: \"rgba(112, 146, 190, 0.6)\",\r\n    backgroundTwoHover: \"rgba(112, 146, 190, 0.45)\",\r\n    backgroundInput: \"#e0e6f1\",\r\n    borderInput: {\r\n        width: 0,\r\n        color: \"#fff\",\r\n    },\r\n    colorTextInput: \"#212529\",\r\n    colorTextFilter: \"#7e7e7e\",\r\n};\r\n","import { ColorsStyles as Colors } from \"../Settings/Components/ColorsStyles\";\r\n\r\nexport const ColorsStyles = {\r\n    colorButton: Colors.colorButton,\r\n    colorTextError: Colors.colorTextError,\r\n    backgroundFooter: Colors.backgroundFooter,\r\n    colorHr: Colors.backgroundFooter,\r\n    colorInput: Colors.colorInput,\r\n    background: Colors.background,\r\n    backgroundTwo: Colors.backgroundTwo,\r\n    backgroundTwoHover: Colors.backgroundTwoHover,\r\n    backgroundInput: Colors.backgroundInput,\r\n    borderInput: Colors.borderInput,\r\n    colorTextInput: Colors.colorTextInput,\r\n};\r\n","import React from 'react';\r\nimport s from \"./ButtonFull.module.scss\";\r\nimport GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {ColorsStyles} from \"../../constants/ColorsStyles\";\r\nimport {checkLanguageConst} from \"../../hooks/translashion\";\r\n\r\n\r\nexport const ButtonFull = ({ data, translations }) => {\r\n    return (\r\n        <div\r\n        className={s.button + ' ' + (data?.styles ? data.styles : null)}\r\n        onClick={() => data.change()}\r\n        >\r\n            {data.loading ? (\r\n                <div className={s.block_loader}>\r\n                    <ClipLoader color={ColorsStyles.colorTextError} loading={true} css={s.loader} size={32} />\r\n                </div>\r\n            ) : (\r\n                <div className={GlobalStyle.CustomFontRegular + ' ' + s.button_text}>\r\n                    {checkLanguageConst(data.value, translations)}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/background-logo.4f74ab78.png\";","import React from \"react\";\r\nimport s from \"./BackgroundLogo.module.scss\";\r\nimport backgroundLogoImg from \"./background-logo.png\";\r\n\r\nexport const BackgroundLogo = () => (\r\n    <img src={backgroundLogoImg} alt=\"Background Logo\" className={s.main} />\r\n);\r\n","export default __webpack_public_path__ + \"static/media/logo.11397f42.png\";","import React from \"react\";\r\nimport s from \"./HeaderAuth.module.scss\";\r\nimport GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport logo from \"./logo.png\";\r\nimport { checkLanguageConst } from \"../../../hooks/translashion\";\r\n\r\nexport const HeaderAuth = ({ data, translations }) => {\r\n    return (\r\n        <div className={s.body}>\r\n            <div className={s.block}>\r\n                <img src={logo} className={s.logo} />\r\n\r\n                <div\r\n                    className={GlobalStyle.BellotaFontBold + \" \" + s.text_glav}\r\n                >\r\n                    {checkLanguageConst(\"ApplicationName\", translations)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport s from \"./Auth.module.scss\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { InputFull } from \"../../components/inputFull/InputFull\";\r\nimport { ButtonFull } from \"../../components/buttonFull/ButtonFull\";\r\nimport GlobalStyle from \"../../components/GlobalStyle.module.scss\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\nimport { BackgroundLogo } from \"../../Settings/Components/BackgroundLogo/BackgroundLogo\";\r\nimport { HeaderAuth } from \"../../Settings/Components/headerAuth/HeaderAuth\";\r\n\r\nexport const Auth = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loader, setLoader] = useState(false);\r\n    const [status, setStatus] = useState(false);\r\n    const [errorField, setErrorField] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const AuthHandler = async () => {\r\n        clearError();\r\n        if (email.length === 0) {\r\n            return setErrorField({\r\n                name: \"\",\r\n                fullName: \"\",\r\n                telephone: \"\",\r\n                email: \"Введите E-mail\",\r\n                password: \"\",\r\n            });\r\n        }\r\n        if (password.length === 0) {\r\n            return setErrorField({\r\n                name: \"\",\r\n                fullName: \"\",\r\n                telephone: \"\",\r\n                email: \"\",\r\n                password: \"Введите пароль\",\r\n            });\r\n        }\r\n        setErrorField({\r\n            email: \"\",\r\n            password: \"\",\r\n        });\r\n\r\n        try {\r\n            const data = await request(`/api/admin_panel/login`, \"POST\", {\r\n                email,\r\n                password,\r\n            });\r\n            if (data.errors) {\r\n                setErrorField({\r\n                    ...errorField,\r\n                    [data.errors[0][0]]: data.errors[0][1],\r\n                });\r\n            } else {\r\n                auth.login(data.token, email, data.type_admin, data.name);\r\n            }\r\n        } catch (e) {}\r\n    };\r\n\r\n    const helpHandler = async () => {\r\n        try {\r\n            setLoader(true);\r\n            await request(`/api/admin_panel/help_password`, \"POST\", {});\r\n            setStatus(true);\r\n            setLoader(false);\r\n        } catch (e) {}\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* <div className={s.main}> */}\r\n            <BackgroundLogo />\r\n            {/* </div> */}\r\n            <div className={s.root}>\r\n                <HeaderAuth translations={auth.translations} />\r\n                <div\r\n                    className={\r\n                        GlobalStyle.CustomFontRegular + \" \" + s.text_foot\r\n                    }\r\n                >\r\n                    {checkLanguageConst(\"EnterYourDetails\", auth.translations)}\r\n                </div>\r\n                <div className={s.block}>\r\n                    <InputFull\r\n                        translations={auth.translations}\r\n                        data={{\r\n                            value: email,\r\n                            change: setEmail,\r\n                            placeholder: \"E-mail\",\r\n                            error: errorField.email,\r\n                            secret: \"email\",\r\n                            style: s.inp,\r\n                        }}\r\n                    />\r\n                    <div className={s.top_input} />\r\n                    <InputFull\r\n                        translations={auth.translations}\r\n                        data={{\r\n                            value: password,\r\n                            change: setPassword,\r\n                            placeholder: \"Password\",\r\n                            error: errorField.password,\r\n                            secret: \"password\",\r\n                            style: s.inp,\r\n                        }}\r\n                    />\r\n                    <div className={s.top} />\r\n                    <ButtonFull\r\n                        data={{\r\n                            value: \"SignIn\",\r\n                            change: AuthHandler,\r\n                            loading: loading,\r\n                            styles: s.but,\r\n                        }}\r\n                        translations={auth.translations}\r\n                    />\r\n                    <div className={s.footer}>\r\n                        {!loader ? (\r\n                            status ? (\r\n                                <div\r\n                                    className={\r\n                                        GlobalStyle.CustomFontRegular +\r\n                                        \" \" +\r\n                                        s.button_footer_text\r\n                                    }\r\n                                >\r\n                                    {checkLanguageConst(\r\n                                        \"SentPassword\",\r\n                                        auth.translations\r\n                                    )}\r\n                                </div>\r\n                            ) : (\r\n                                <div\r\n                                    className={s.button_footer}\r\n                                    onClick={() => helpHandler()}\r\n                                >\r\n                                    <div\r\n                                        className={\r\n                                            GlobalStyle.CustomFontRegular +\r\n                                            \" \" +\r\n                                            s.button_footer_text\r\n                                        }\r\n                                    >\r\n                                        {checkLanguageConst(\r\n                                            \"ForgotPassword?\",\r\n                                            auth.translations\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        ) : (\r\n                            <ClipLoader\r\n                                color={ColorsStyles.colorTextError}\r\n                                loading={true}\r\n                                css={s.loader}\r\n                                size={32}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import {createContext} from \"react\";\r\n\r\nfunction noop(){}\r\n\r\nexport const PopupFormContext = createContext({\r\n    isOpen: null,\r\n    data: null,\r\n    openHandler: noop,\r\n    exitHandler: noop,\r\n});\r\n","import {useContext} from \"react\";\r\nimport {PopupFormContext} from \"../context/PopupFormContext\";\r\n\r\nexport const usePopupForm = () => useContext(PopupFormContext);\r\n","import React from \"react\";\r\n\r\nexport const GlobalSvgSelector = ({ id }) => {\r\n    switch (id) {\r\n        case \"edit_mini\":\r\n            return (\r\n                <svg\r\n                    width=\"18\"\r\n                    height=\"18\"\r\n                    viewBox=\"0 0 18 18\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M2.7 14.401H6.516C6.63445 14.4017 6.75186 14.379 6.86152 14.3343C6.97117 14.2895 7.0709 14.2235 7.155 14.1401L13.383 7.90493L15.939 5.40365C16.0234 5.32001 16.0903 5.2205 16.136 5.11086C16.1817 5.00121 16.2052 4.88361 16.2052 4.76484C16.2052 4.64606 16.1817 4.52846 16.136 4.41882C16.0903 4.30918 16.0234 4.20966 15.939 4.12602L12.123 0.266141C12.0393 0.18181 11.9398 0.114875 11.8301 0.0691962C11.7204 0.0235176 11.6028 0 11.484 0C11.3652 0 11.2476 0.0235176 11.1379 0.0691962C11.0282 0.114875 10.9287 0.18181 10.845 0.266141L8.307 2.8124L2.061 9.0476C1.97759 9.13167 1.91159 9.23137 1.86681 9.34099C1.82202 9.45062 1.79932 9.568 1.8 9.68641V13.5013C1.8 13.7399 1.89482 13.9688 2.0636 14.1375C2.23239 14.3063 2.46131 14.401 2.7 14.401ZM11.484 2.17359L14.031 4.71985L12.753 5.99748L10.206 3.45122L11.484 2.17359ZM3.6 10.0553L8.937 4.71985L11.484 7.26611L6.147 12.6016H3.6V10.0553ZM17.1 16.2005H0.9C0.661305 16.2005 0.432387 16.2953 0.263604 16.464C0.0948211 16.6328 0 16.8616 0 17.1003C0 17.3389 0.0948211 17.5677 0.263604 17.7365C0.432387 17.9052 0.661305 18 0.9 18H17.1C17.3387 18 17.5676 17.9052 17.7364 17.7365C17.9052 17.5677 18 17.3389 18 17.1003C18 16.8616 17.9052 16.6328 17.7364 16.464C17.5676 16.2953 17.3387 16.2005 17.1 16.2005Z\"\r\n                        fill=\"white\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"arrow_item_bottom\":\r\n            return (\r\n                <svg\r\n                    width=\"14\"\r\n                    height=\"8\"\r\n                    viewBox=\"0 0 14 8\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M7.80005 7.50001L13.4 1.80001C13.8 1.40001 13.8 0.800006 13.4 0.400006C13 6.10948e-06 12.4 6.10948e-06 12 0.400006L7.00005 5.30001L2.00005 0.400006C1.60005 6.10948e-06 1.00005 6.10948e-06 0.600049 0.400006C0.400049 0.600006 0.300049 0.800007 0.300049 1.10001C0.300049 1.40001 0.400049 1.60001 0.600049 1.80001L6.20005 7.50001C6.70005 7.90001 7.30005 7.90001 7.80005 7.50001C7.70005 7.50001 7.70005 7.50001 7.80005 7.50001Z\"\r\n                        fill=\"white\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"arrow_item_right\":\r\n            return (\r\n                <svg\r\n                    width=\"8\"\r\n                    height=\"14\"\r\n                    viewBox=\"0 0 8 14\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M7.49998 6.2L1.79998 0.600003C1.39998 0.200003 0.799976 0.200003 0.399976 0.600003C-2.44081e-05 1 -2.44081e-05 1.6 0.399976 2L5.29998 7L0.399976 12C-2.44081e-05 12.4 -2.44081e-05 13 0.399976 13.4C0.599976 13.6 0.799976 13.7 1.09998 13.7C1.39998 13.7 1.59998 13.6 1.79998 13.4L7.49998 7.8C7.89998 7.3 7.89998 6.7 7.49998 6.2C7.49998 6.3 7.49998 6.3 7.49998 6.2Z\"\r\n                        fill=\"white\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"arrow_button\":\r\n            return (\r\n                <svg\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M16.9999 9.17C16.8126 8.98375 16.5591 8.87921 16.2949 8.87921C16.0308 8.87921 15.7773 8.98375 15.5899 9.17L11.9999 12.71L8.45995 9.17C8.27259 8.98375 8.01913 8.87921 7.75495 8.87921C7.49076 8.87921 7.23731 8.98375 7.04995 9.17C6.95622 9.26297 6.88183 9.37357 6.83106 9.49543C6.78029 9.61729 6.75415 9.74799 6.75415 9.88C6.75415 10.012 6.78029 10.1427 6.83106 10.2646C6.88183 10.3864 6.95622 10.497 7.04995 10.59L11.2899 14.83C11.3829 14.9237 11.4935 14.9981 11.6154 15.0489C11.7372 15.0997 11.8679 15.1258 11.9999 15.1258C12.132 15.1258 12.2627 15.0997 12.3845 15.0489C12.5064 14.9981 12.617 14.9237 12.7099 14.83L16.9999 10.59C17.0937 10.497 17.1681 10.3864 17.2188 10.2646C17.2696 10.1427 17.2957 10.012 17.2957 9.88C17.2957 9.74799 17.2696 9.61729 17.2188 9.49543C17.1681 9.37357 17.0937 9.26297 16.9999 9.17Z\"\r\n                        fill=\"black\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"clear\":\r\n            return (\r\n                <svg\r\n                    width=\"10\"\r\n                    height=\"10\"\r\n                    viewBox=\"0 0 10 10\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M6.17387 4.99929L9.75374 1.42723C9.91051 1.27044 9.99858 1.05779 9.99858 0.836054C9.99858 0.614319 9.91051 0.401665 9.75374 0.244875C9.59697 0.0880841 9.38435 0 9.16264 0C8.94094 0 8.72832 0.0880841 8.57155 0.244875L5 3.82526L1.42845 0.244875C1.27168 0.0880841 1.05906 -1.65206e-09 0.837356 0C0.615652 1.65206e-09 0.403029 0.0880841 0.246261 0.244875C0.0894923 0.401665 0.0014208 0.614319 0.00142079 0.836054C0.00142079 1.05779 0.0894923 1.27044 0.246261 1.42723L3.82613 4.99929L0.246261 8.57135C0.168229 8.64875 0.106294 8.74084 0.0640274 8.84231C0.021761 8.94377 0 9.05261 0 9.16253C0 9.27244 0.021761 9.38128 0.0640274 9.48274C0.106294 9.58421 0.168229 9.6763 0.246261 9.7537C0.323655 9.83175 0.415733 9.89369 0.517185 9.93596C0.618636 9.97824 0.727452 10 0.837356 10C0.94726 10 1.05608 9.97824 1.15753 9.93596C1.25898 9.89369 1.35106 9.83175 1.42845 9.7537L5 6.17332L8.57155 9.7537C8.64894 9.83175 8.74102 9.89369 8.84247 9.93596C8.94392 9.97824 9.05274 10 9.16264 10C9.27255 10 9.38136 9.97824 9.48282 9.93596C9.58427 9.89369 9.67634 9.83175 9.75374 9.7537C9.83177 9.6763 9.89371 9.58421 9.93597 9.48274C9.97824 9.38128 10 9.27244 10 9.16253C10 9.05261 9.97824 8.94377 9.93597 8.84231C9.89371 8.74084 9.83177 8.64875 9.75374 8.57135L6.17387 4.99929Z\"\r\n                        fill=\"red\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"reordering_top\":\r\n            return (\r\n                <svg\r\n                    width=\"12\"\r\n                    height=\"8\"\r\n                    viewBox=\"0 0 12 8\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M10.9999 5.41L6.70995 1.17C6.61699 1.07627 6.50638 1.00187 6.38453 0.951106C6.26267 0.900337 6.13196 0.874199 5.99995 0.874199C5.86794 0.874199 5.73723 0.900337 5.61537 0.951106C5.49351 1.00187 5.38291 1.07627 5.28995 1.17L1.04995 5.41C0.95622 5.50296 0.881826 5.61356 0.831057 5.73542C0.780288 5.85728 0.75415 5.98799 0.75415 6.12C0.75415 6.25201 0.780288 6.38271 0.831057 6.50457C0.881826 6.62643 0.95622 6.73703 1.04995 6.83C1.23731 7.01625 1.49076 7.12079 1.75495 7.12079C2.01913 7.12079 2.27259 7.01625 2.45995 6.83L5.99995 3.29L9.53995 6.83C9.72621 7.01474 9.97761 7.11889 10.2399 7.12C10.3716 7.12076 10.502 7.09553 10.6239 7.04577C10.7457 6.996 10.8565 6.92268 10.9499 6.83C11.047 6.74038 11.1254 6.63241 11.1805 6.51234C11.2356 6.39226 11.2664 6.26246 11.271 6.13042C11.2757 5.99839 11.2541 5.86674 11.2076 5.74308C11.161 5.61943 11.0905 5.50622 10.9999 5.41Z\"\r\n                        fill=\"black\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"reordering_bottom\":\r\n            return (\r\n                <svg\r\n                    width=\"11\"\r\n                    height=\"8\"\r\n                    viewBox=\"0 0 11 8\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M0.271658 2.58499L4.56166 6.82499C4.65462 6.91872 4.76522 6.99311 4.88708 7.04388C5.00894 7.09465 5.13965 7.12079 5.27166 7.12079C5.40367 7.12079 5.53438 7.09465 5.65623 7.04388C5.77809 6.99311 5.88869 6.91872 5.98166 6.82499L10.2217 2.58499C10.3154 2.49203 10.3898 2.38143 10.4405 2.25957C10.4913 2.13771 10.5175 2.007 10.5175 1.87499C10.5175 1.74298 10.4913 1.61227 10.4405 1.49041C10.3898 1.36855 10.3154 1.25795 10.2217 1.16499C10.0343 0.978739 9.78084 0.874198 9.51666 0.874198C9.25247 0.874198 8.99902 0.978739 8.81166 1.16499L5.27166 4.70499L1.73166 1.16499C1.5454 0.980246 1.294 0.876095 1.03166 0.87499C0.900052 0.87423 0.769588 0.899454 0.647751 0.949219C0.525913 0.998983 0.415097 1.07231 0.321657 1.16499C0.224582 1.25461 0.146228 1.36257 0.0911217 1.48265C0.0360149 1.60273 0.00524804 1.73253 0.000598907 1.86457C-0.00405022 1.9966 0.0175107 2.12825 0.0640354 2.2519C0.11056 2.37556 0.181127 2.48877 0.271658 2.58499Z\"\r\n                        fill=\"black\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"ok\":\r\n            return (\r\n                <svg\r\n                    width=\"16\"\r\n                    height=\"12\"\r\n                    viewBox=\"0 0 16 12\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M14.7099 1.20998C14.617 1.11625 14.5064 1.04186 14.3845 0.991091C14.2627 0.940323 14.132 0.914185 13.9999 0.914185C13.8679 0.914185 13.7372 0.940323 13.6154 0.991091C13.4935 1.04186 13.3829 1.11625 13.29 1.20998L5.83995 8.66998L2.70995 5.52998C2.61343 5.43674 2.49949 5.36343 2.37463 5.31423C2.24978 5.26502 2.11645 5.24089 1.98227 5.24321C1.84809 5.24554 1.71568 5.27426 1.5926 5.32776C1.46953 5.38125 1.35819 5.45846 1.26495 5.55498C1.17171 5.6515 1.0984 5.76545 1.04919 5.8903C0.999989 6.01516 0.975859 6.14848 0.97818 6.28266C0.980502 6.41684 1.00923 6.54925 1.06272 6.67233C1.11622 6.79541 1.19343 6.90674 1.28995 6.99998L5.12995 10.84C5.22291 10.9337 5.33351 11.0081 5.45537 11.0589C5.57723 11.1096 5.70794 11.1358 5.83995 11.1358C5.97196 11.1358 6.10267 11.1096 6.22453 11.0589C6.34639 11.0081 6.45699 10.9337 6.54995 10.84L14.7099 2.67998C14.8115 2.58634 14.8925 2.47269 14.9479 2.34619C15.0033 2.21969 15.0319 2.08308 15.0319 1.94498C15.0319 1.80688 15.0033 1.67028 14.9479 1.54378C14.8925 1.41728 14.8115 1.30363 14.7099 1.20998Z\"\r\n                        fill=\"black\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"filter\":\r\n            return (\r\n                <svg\r\n                    width=\"21\"\r\n                    height=\"21\"\r\n                    viewBox=\"0 0 21 21\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M17.85 0H3.15C2.31457 0 1.51335 0.331874 0.922614 0.922613C0.331874 1.51335 1.89922e-07 2.31457 1.89922e-07 3.15V4.3785C-0.000150368 4.81209 0.0892147 5.24104 0.2625 5.6385V5.7015C0.410844 6.03852 0.620962 6.34479 0.882 6.6045L7.35 13.0305V19.95C7.34964 20.1284 7.39477 20.304 7.48111 20.4602C7.56746 20.6163 7.69218 20.7479 7.8435 20.8425C8.0106 20.9461 8.20341 21.0006 8.4 21C8.56437 20.999 8.72621 20.9594 8.8725 20.8845L13.0725 18.7845C13.2457 18.6972 13.3913 18.5637 13.4932 18.3988C13.5951 18.2338 13.6494 18.0439 13.65 17.85V13.0305L20.076 6.6045C20.337 6.34479 20.5472 6.03852 20.6955 5.7015V5.6385C20.8833 5.24415 20.9869 4.81507 21 4.3785V3.15C21 2.31457 20.6681 1.51335 20.0774 0.922613C19.4866 0.331874 18.6854 0 17.85 0ZM11.8545 11.8545C11.7572 11.9526 11.6802 12.069 11.6279 12.1969C11.5757 12.3248 11.5492 12.4618 11.55 12.6V17.199L9.45 18.249V12.6C9.4508 12.4618 9.42431 12.3248 9.37206 12.1969C9.31981 12.069 9.24282 11.9526 9.1455 11.8545L3.5805 6.3H17.4195L11.8545 11.8545ZM18.9 4.2H2.1V3.15C2.1 2.87152 2.21063 2.60445 2.40754 2.40754C2.60445 2.21062 2.87152 2.1 3.15 2.1H17.85C18.1285 2.1 18.3955 2.21062 18.5925 2.40754C18.7894 2.60445 18.9 2.87152 18.9 3.15V4.2Z\"\r\n                        fill=\"black\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"upload\":\r\n            return (\r\n                <svg\r\n                    width=\"18\"\r\n                    height=\"21\"\r\n                    viewBox=\"0 0 18 21\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M6.71 5.70994L8 4.40994V15.9999C8 16.2652 8.10536 16.5195 8.29289 16.707C8.48043 16.8946 8.73478 16.9999 9 16.9999C9.26522 16.9999 9.51957 16.8946 9.70711 16.707C9.89464 16.5195 10 16.2652 10 15.9999V4.40994L11.29 5.70994C11.383 5.80367 11.4936 5.87806 11.6154 5.92883C11.7373 5.9796 11.868 6.00574 12 6.00574C12.132 6.00574 12.2627 5.9796 12.3846 5.92883C12.5064 5.87806 12.617 5.80367 12.71 5.70994C12.8037 5.61698 12.8781 5.50638 12.9289 5.38452C12.9797 5.26266 13.0058 5.13195 13.0058 4.99994C13.0058 4.86793 12.9797 4.73722 12.9289 4.61536C12.8781 4.4935 12.8037 4.3829 12.71 4.28994L9.71 1.28994C9.61704 1.19621 9.50644 1.12182 9.38458 1.07105C9.26272 1.02028 9.13201 0.994141 9 0.994141C8.86799 0.994141 8.73728 1.02028 8.61542 1.07105C8.49356 1.12182 8.38296 1.19621 8.29 1.28994L5.29 4.28994C5.1017 4.47824 4.99591 4.73364 4.99591 4.99994C4.99591 5.26624 5.1017 5.52164 5.29 5.70994C5.4783 5.89824 5.7337 6.00403 6 6.00403C6.2663 6.00403 6.5217 5.89824 6.71 5.70994ZM15 7.99994H13C12.7348 7.99994 12.4804 8.1053 12.2929 8.29283C12.1054 8.48037 12 8.73472 12 8.99994C12 9.26516 12.1054 9.51951 12.2929 9.70705C12.4804 9.89458 12.7348 9.99994 13 9.99994H15C15.2652 9.99994 15.5196 10.1053 15.7071 10.2928C15.8946 10.4804 16 10.7347 16 10.9999V17.9999C16 18.2652 15.8946 18.5195 15.7071 18.707C15.5196 18.8946 15.2652 18.9999 15 18.9999H3C2.73478 18.9999 2.48043 18.8946 2.29289 18.707C2.10536 18.5195 2 18.2652 2 17.9999V10.9999C2 10.7347 2.10536 10.4804 2.29289 10.2928C2.48043 10.1053 2.73478 9.99994 3 9.99994H5C5.26522 9.99994 5.51957 9.89458 5.70711 9.70705C5.89464 9.51951 6 9.26516 6 8.99994C6 8.73472 5.89464 8.48037 5.70711 8.29283C5.51957 8.1053 5.26522 7.99994 5 7.99994H3C2.20435 7.99994 1.44129 8.31601 0.87868 8.87862C0.316071 9.44123 0 10.2043 0 10.9999V17.9999C0 18.7956 0.316071 19.5587 0.87868 20.1213C1.44129 20.6839 2.20435 20.9999 3 20.9999H15C15.7956 20.9999 16.5587 20.6839 17.1213 20.1213C17.6839 19.5587 18 18.7956 18 17.9999V10.9999C18 10.2043 17.6839 9.44123 17.1213 8.87862C16.5587 8.31601 15.7956 7.99994 15 7.99994Z\"\r\n                        fill=\"black\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"delete\":\r\n            return (\r\n                <svg\r\n                    width=\"18\"\r\n                    height=\"20\"\r\n                    viewBox=\"0 0 18 20\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M7 16C7.26522 16 7.51957 15.8946 7.70711 15.7071C7.89464 15.5196 8 15.2652 8 15V9C8 8.73478 7.89464 8.48043 7.70711 8.29289C7.51957 8.10536 7.26522 8 7 8C6.73478 8 6.48043 8.10536 6.29289 8.29289C6.10536 8.48043 6 8.73478 6 9V15C6 15.2652 6.10536 15.5196 6.29289 15.7071C6.48043 15.8946 6.73478 16 7 16ZM17 4H13V3C13 2.20435 12.6839 1.44129 12.1213 0.87868C11.5587 0.316071 10.7956 0 10 0H8C7.20435 0 6.44129 0.316071 5.87868 0.87868C5.31607 1.44129 5 2.20435 5 3V4H1C0.734784 4 0.48043 4.10536 0.292893 4.29289C0.105357 4.48043 0 4.73478 0 5C0 5.26522 0.105357 5.51957 0.292893 5.70711C0.48043 5.89464 0.734784 6 1 6H2V17C2 17.7956 2.31607 18.5587 2.87868 19.1213C3.44129 19.6839 4.20435 20 5 20H13C13.7956 20 14.5587 19.6839 15.1213 19.1213C15.6839 18.5587 16 17.7956 16 17V6H17C17.2652 6 17.5196 5.89464 17.7071 5.70711C17.8946 5.51957 18 5.26522 18 5C18 4.73478 17.8946 4.48043 17.7071 4.29289C17.5196 4.10536 17.2652 4 17 4ZM7 3C7 2.73478 7.10536 2.48043 7.29289 2.29289C7.48043 2.10536 7.73478 2 8 2H10C10.2652 2 10.5196 2.10536 10.7071 2.29289C10.8946 2.48043 11 2.73478 11 3V4H7V3ZM14 17C14 17.2652 13.8946 17.5196 13.7071 17.7071C13.5196 17.8946 13.2652 18 13 18H5C4.73478 18 4.48043 17.8946 4.29289 17.7071C4.10536 17.5196 4 17.2652 4 17V6H14V17ZM11 16C11.2652 16 11.5196 15.8946 11.7071 15.7071C11.8946 15.5196 12 15.2652 12 15V9C12 8.73478 11.8946 8.48043 11.7071 8.29289C11.5196 8.10536 11.2652 8 11 8C10.7348 8 10.4804 8.10536 10.2929 8.29289C10.1054 8.48043 10 8.73478 10 9V15C10 15.2652 10.1054 15.5196 10.2929 15.7071C10.4804 15.8946 10.7348 16 11 16Z\"\r\n                        fill=\"black\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"error\":\r\n            return (\r\n                <svg\r\n                    width=\"22\"\r\n                    height=\"22\"\r\n                    viewBox=\"0 0 22 22\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M9.65994 4.99994H16.9999C17.2652 4.99994 17.5195 5.1053 17.707 5.29283C17.8946 5.48037 17.9999 5.73472 17.9999 5.99994V11.9999C18.0011 12.1764 17.9526 12.3497 17.8599 12.4999C17.7897 12.6109 17.7419 12.7346 17.7195 12.864C17.697 12.9934 17.7003 13.126 17.7291 13.2542C17.7579 13.3823 17.8116 13.5035 17.8873 13.6109C17.9629 13.7183 18.059 13.8097 18.1699 13.8799C18.3265 13.9853 18.5112 14.041 18.6999 14.0399C18.8673 14.0397 19.0318 13.9974 19.1786 13.917C19.3253 13.8367 19.4496 13.7208 19.5399 13.5799C19.8405 13.1078 20.0001 12.5597 19.9999 11.9999V5.99994C19.9999 5.20429 19.6839 4.44123 19.1213 3.87862C18.5587 3.31601 17.7956 2.99994 16.9999 2.99994H9.65994C9.39472 2.99994 9.14037 3.1053 8.95283 3.29283C8.7653 3.48037 8.65994 3.73472 8.65994 3.99994C8.65994 4.26516 8.7653 4.51951 8.95283 4.70705C9.14037 4.89458 9.39472 4.99994 9.65994 4.99994ZM20.7099 19.2899L4.85994 3.44994L2.70994 1.28994C2.6167 1.1967 2.50601 1.12274 2.38419 1.07228C2.26237 1.02182 2.1318 0.99585 1.99994 0.99585C1.86808 0.99585 1.73751 1.02182 1.61569 1.07228C1.49387 1.12274 1.38318 1.1967 1.28994 1.28994C1.10164 1.47824 0.99585 1.73364 0.99585 1.99994C0.99585 2.26624 1.10164 2.52164 1.28994 2.70994L2.68994 4.09994C2.24707 4.63438 2.00322 5.30586 1.99994 5.99994V11.9999C1.99994 12.7956 2.31601 13.5587 2.87862 14.1213C3.44123 14.6839 4.20429 14.9999 4.99994 14.9999H9.99994V16.9999H5.99994C5.73472 16.9999 5.48037 17.1053 5.29283 17.2928C5.1053 17.4804 4.99994 17.7347 4.99994 17.9999C4.99994 18.2652 5.1053 18.5195 5.29283 18.707C5.48037 18.8946 5.73472 18.9999 5.99994 18.9999H15.9999C16.2037 18.9978 16.402 18.9335 16.5682 18.8155C16.7345 18.6975 16.8607 18.5316 16.9299 18.3399L19.2899 20.7099C19.3829 20.8037 19.4935 20.8781 19.6154 20.9288C19.7372 20.9796 19.8679 21.0057 19.9999 21.0057C20.132 21.0057 20.2627 20.9796 20.3845 20.9288C20.5064 20.8781 20.617 20.8037 20.7099 20.7099C20.8037 20.617 20.8781 20.5064 20.9288 20.3845C20.9796 20.2627 21.0057 20.132 21.0057 19.9999C21.0057 19.8679 20.9796 19.7372 20.9288 19.6154C20.8781 19.4935 20.8037 19.3829 20.7099 19.2899ZM4.99994 12.9999C4.73472 12.9999 4.48037 12.8946 4.29283 12.707C4.1053 12.5195 3.99994 12.2652 3.99994 11.9999V5.99994C4.00238 5.83919 4.04355 5.6814 4.11994 5.53994L11.5899 12.9999H4.99994ZM11.9999 16.9999V14.9999H13.5899L15.5899 16.9999H11.9999Z\"\r\n                        fill=\"black\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"arrow\":\r\n            return (\r\n                <svg\r\n                    width=\"12\"\r\n                    height=\"8\"\r\n                    viewBox=\"0 0 12 8\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M10.9999 1.17C10.8126 0.983753 10.5591 0.879211 10.2949 0.879211C10.0308 0.879211 9.77731 0.983753 9.58995 1.17L5.99995 4.71L2.45995 1.17C2.27259 0.983753 2.01913 0.879211 1.75495 0.879211C1.49076 0.879211 1.23731 0.983753 1.04995 1.17C0.95622 1.26297 0.881826 1.37357 0.831057 1.49543C0.780288 1.61729 0.75415 1.74799 0.75415 1.88C0.75415 2.01202 0.780288 2.14272 0.831057 2.26458C0.881826 2.38644 0.95622 2.49704 1.04995 2.59L5.28995 6.83C5.38291 6.92373 5.49351 6.99813 5.61537 7.04889C5.73723 7.09966 5.86794 7.1258 5.99995 7.1258C6.13196 7.1258 6.26267 7.09966 6.38453 7.04889C6.50638 6.99813 6.61699 6.92373 6.70995 6.83L10.9999 2.59C11.0937 2.49704 11.1681 2.38644 11.2188 2.26458C11.2696 2.14272 11.2957 2.01202 11.2957 1.88C11.2957 1.74799 11.2696 1.61729 11.2188 1.49543C11.1681 1.37357 11.0937 1.26297 10.9999 1.17Z\"\r\n                        fill=\"black\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"arrow_mini\":\r\n            return (\r\n                <svg\r\n                    width=\"12\"\r\n                    height=\"8\"\r\n                    viewBox=\"0 0 12 8\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M10.9999 1.17C10.8126 0.983753 10.5591 0.879211 10.2949 0.879211C10.0308 0.879211 9.77731 0.983753 9.58995 1.17L5.99995 4.71L2.45995 1.17C2.27259 0.983753 2.01913 0.879211 1.75495 0.879211C1.49076 0.879211 1.23731 0.983753 1.04995 1.17C0.95622 1.26297 0.881826 1.37357 0.831057 1.49543C0.780288 1.61729 0.75415 1.74799 0.75415 1.88C0.75415 2.01202 0.780288 2.14272 0.831057 2.26458C0.881826 2.38644 0.95622 2.49704 1.04995 2.59L5.28995 6.83C5.38291 6.92373 5.49351 6.99813 5.61537 7.04889C5.73723 7.09966 5.86794 7.1258 5.99995 7.1258C6.13196 7.1258 6.26267 7.09966 6.38453 7.04889C6.50638 6.99813 6.61699 6.92373 6.70995 6.83L10.9999 2.59C11.0937 2.49704 11.1681 2.38644 11.2188 2.26458C11.2696 2.14272 11.2957 2.01202 11.2957 1.88C11.2957 1.74799 11.2696 1.61729 11.2188 1.49543C11.1681 1.37357 11.0937 1.26297 10.9999 1.17Z\"\r\n                        fill=\"white\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"arrow_top\":\r\n            return (\r\n                <svg\r\n                    width=\"12\"\r\n                    height=\"8\"\r\n                    viewBox=\"0 0 12 8\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M1.04986 6.83503C1.23722 7.02128 1.49067 7.12582 1.75486 7.12582C2.01904 7.12582 2.27249 7.02128 2.45986 6.83503L6.04986 3.29503L9.58986 6.83503C9.77722 7.02128 10.0307 7.12582 10.2949 7.12582C10.559 7.12582 10.8125 7.02128 10.9999 6.83503C11.0936 6.74207 11.168 6.63147 11.2187 6.50961C11.2695 6.38775 11.2957 6.25704 11.2957 6.12503C11.2957 5.99302 11.2695 5.86231 11.2187 5.74045C11.168 5.6186 11.0936 5.50799 10.9999 5.41503L6.75986 1.17503C6.66689 1.0813 6.55629 1.00691 6.43443 0.956141C6.31257 0.905372 6.18187 0.879233 6.04986 0.879233C5.91784 0.879233 5.78714 0.905372 5.66528 0.956141C5.54342 1.00691 5.43282 1.0813 5.33986 1.17503L1.04986 5.41503C0.956128 5.50799 0.881734 5.6186 0.830965 5.74045C0.780196 5.86231 0.754057 5.99302 0.754057 6.12503C0.754057 6.25704 0.780196 6.38775 0.830965 6.50961C0.881734 6.63147 0.956128 6.74207 1.04986 6.83503Z\"\r\n                        fill=\"black\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"arrow-left\":\r\n            return (\r\n                <svg\r\n                    width=\"8\"\r\n                    height=\"12\"\r\n                    viewBox=\"0 0 8 12\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M3.29007 6.00001L6.83007 2.46001C7.01632 2.27265 7.12086 2.0192 7.12086 1.75501C7.12086 1.49082 7.01632 1.23737 6.83007 1.05001C6.7371 0.956281 6.6265 0.881887 6.50464 0.831118C6.38278 0.780349 6.25208 0.754211 6.12007 0.754211C5.98805 0.754211 5.85735 0.780349 5.73549 0.831118C5.61363 0.881887 5.50303 0.956281 5.41007 1.05001L1.17007 5.29001C1.07634 5.38297 1.00194 5.49357 0.951175 5.61543C0.900406 5.73729 0.874268 5.868 0.874268 6.00001C0.874268 6.13202 0.900406 6.26273 0.951175 6.38459C1.00194 6.50645 1.07634 6.61705 1.17007 6.71001L5.41007 11C5.50351 11.0927 5.61432 11.166 5.73616 11.2158C5.858 11.2655 5.98846 11.2908 6.12007 11.29C6.25167 11.2908 6.38213 11.2655 6.50397 11.2158C6.62581 11.166 6.73663 11.0927 6.83007 11C7.01632 10.8126 7.12086 10.5592 7.12086 10.295C7.12086 10.0308 7.01632 9.77737 6.83007 9.59001L3.29007 6.00001Z\"\r\n                        fill=\"black\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"arrow-right\":\r\n            return (\r\n                <svg\r\n                    width=\"8\"\r\n                    height=\"12\"\r\n                    viewBox=\"0 0 8 12\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M6.82994 5.29001L2.58994 1.05001C2.49698 0.956281 2.38638 0.881887 2.26452 0.831118C2.14266 0.780349 2.01195 0.754211 1.87994 0.754211C1.74793 0.754211 1.61723 0.780349 1.49537 0.831118C1.37351 0.881887 1.26291 0.956281 1.16994 1.05001C0.983692 1.23737 0.87915 1.49082 0.87915 1.75501C0.87915 2.0192 0.983692 2.27265 1.16994 2.46001L4.70994 6.00001L1.16994 9.54001C0.983692 9.72737 0.87915 9.98082 0.87915 10.245C0.87915 10.5092 0.983692 10.7626 1.16994 10.95C1.26338 11.0427 1.3742 11.116 1.49604 11.1658C1.61787 11.2155 1.74834 11.2408 1.87994 11.24C2.01155 11.2408 2.14201 11.2155 2.26385 11.1658C2.38569 11.116 2.4965 11.0427 2.58994 10.95L6.82994 6.71001C6.92367 6.61705 6.99807 6.50645 7.04883 6.38459C7.0996 6.26273 7.12574 6.13202 7.12574 6.00001C7.12574 5.868 7.0996 5.73729 7.04883 5.61543C6.99807 5.49357 6.92367 5.38297 6.82994 5.29001Z\"\r\n                        fill=\"black\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"search\":\r\n            return (\r\n                <svg\r\n                    width=\"21\"\r\n                    height=\"21\"\r\n                    viewBox=\"0 0 21 21\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M20.71 19.2899L17 15.6099C18.4401 13.8143 19.1375 11.5352 18.9488 9.2412C18.7601 6.94721 17.6997 4.81269 15.9855 3.27655C14.2714 1.74041 12.0338 0.919414 9.73295 0.982375C7.43207 1.04534 5.24275 1.98747 3.61517 3.61505C1.98759 5.24263 1.04546 7.43194 0.982497 9.73283C0.919537 12.0337 1.74053 14.2713 3.27667 15.9854C4.81281 17.6996 6.94733 18.76 9.24133 18.9487C11.5353 19.1374 13.8144 18.44 15.61 16.9999L19.29 20.6799C19.383 20.7736 19.4936 20.848 19.6154 20.8988C19.7373 20.9496 19.868 20.9757 20 20.9757C20.132 20.9757 20.2627 20.9496 20.3846 20.8988C20.5065 20.848 20.6171 20.7736 20.71 20.6799C20.8903 20.4934 20.991 20.2442 20.991 19.9849C20.991 19.7256 20.8903 19.4764 20.71 19.2899ZM10 16.9999C8.61556 16.9999 7.26218 16.5894 6.11103 15.8202C4.95989 15.051 4.06268 13.9578 3.53287 12.6787C3.00306 11.3996 2.86443 9.99214 3.13453 8.63427C3.40463 7.27641 4.07131 6.02912 5.05028 5.05016C6.02925 4.07119 7.27653 3.4045 8.63439 3.13441C9.99226 2.86431 11.3997 3.00293 12.6788 3.53275C13.9579 4.06256 15.0511 4.95977 15.8203 6.11091C16.5895 7.26206 17 8.61544 17 9.9999C17 11.8564 16.2625 13.6369 14.9498 14.9497C13.637 16.2624 11.8565 16.9999 10 16.9999Z\"\r\n                        fill=\"black\"\r\n                    />\r\n                </svg>\r\n            );\r\n        case \"close\":\r\n            return (\r\n                <svg\r\n                    width=\"18\"\r\n                    height=\"18\"\r\n                    viewBox=\"0 0 18 18\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M17.25 8.25C16.836 8.25 16.5 8.586 16.5 9C16.5 13.1355 13.1355 16.5 9 16.5C4.8645 16.5 1.5 13.1355 1.5 9C1.5 4.8645 4.8645 1.5 9 1.5C11.0134 1.5 12.9034 2.28675 14.322 3.7155C14.6138 4.00912 15.0889 4.011 15.3825 3.71925C15.6765 3.4275 15.678 2.95238 15.3862 2.65838C13.6841 0.94425 11.4157 0 9 0C4.03725 0 0 4.03725 0 9C0 13.9628 4.03725 18 9 18C13.9624 18 18 13.9628 18 9C18 8.586 17.664 8.25 17.25 8.25Z\"\r\n                        fill=\"#4793FF\"\r\n                    />\r\n                    <path\r\n                        d=\"M10.0605 9L11.7803 7.28025C12.0731 6.98737 12.0731 6.51262 11.7803 6.21975C11.4874 5.92687 11.0126 5.92687 10.7198 6.21975L9.00003 7.9395L7.28028 6.21975C6.98778 5.92687 6.51228 5.92687 6.21978 6.21975C5.9269 6.51262 5.9269 6.98737 6.21978 7.28025L7.93953 9L6.21978 10.7197C5.9269 11.0126 5.9269 11.4874 6.21978 11.7802C6.36603 11.9269 6.55803 12 6.75003 12C6.94203 12 7.13403 11.9269 7.28028 11.7802L9.00003 10.0605L10.7198 11.7802C10.8664 11.9269 11.058 12 11.25 12C11.442 12 11.6336 11.9269 11.7803 11.7802C12.0731 11.4874 12.0731 11.0126 11.7803 10.7197L10.0605 9Z\"\r\n                        fill=\"#4793FF\"\r\n                    />\r\n                </svg>\r\n            );\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport s from \"./Header.module.scss\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport logo from \"../../assets/images/logo-min.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const FormReEmail = () => {\r\n    const popupForm = usePopupForm();\r\n    const auth = useContext(AuthContext);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [newEmail, setNewEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [popupError, setPopupError] = useState(\"\");\r\n    const [popupOk, setPopupOk] = useState(\"\");\r\n\r\n    const clearErrorPopup = () => {\r\n        setPopupError(\"\");\r\n        setPopupOk(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        clearErrorPopup();\r\n    }, [popupForm.isOpen]);\r\n\r\n    const clearInput = () => {\r\n        setPassword(\"\");\r\n        setNewEmail(\"\");\r\n    };\r\n\r\n    const sendNewEmail = async () => {\r\n        clearErrorPopup();\r\n        if (newEmail.length === 0 || password.length === 0) {\r\n            return setPopupError(\"ErrorFields\");\r\n        }\r\n        clearErrorPopup();\r\n        try {\r\n            await request(\r\n                `/api/admin_panel/re_email`,\r\n                \"POST\",\r\n                { new_email: newEmail, password },\r\n                {\r\n                    Authorization: `${auth.token}`,\r\n                }\r\n            );\r\n            auth.newEmail(newEmail);\r\n            clearInput();\r\n            setPopupOk(\"EmailChanged\");\r\n        } catch (e) {\r\n            setPopupError(\"WrongPassword\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.root_popup}>\r\n            <div className={s.popup_header}>\r\n                <div\r\n                    className={\r\n                        GlobalStyle.BellotaFontRegular + \" \" + s.popup_label\r\n                    }\r\n                >\r\n                    {checkLanguageConst(\"ChangeE-mail\", auth.translations)}\r\n                </div>\r\n                <div\r\n                    className={s.button_close}\r\n                    onClick={() => popupForm.exitHandler()}\r\n                >\r\n                    <GlobalSvgSelector id=\"close\" />\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={GlobalStyle.CustomFontRegular + \" \" + s.placeholder}\r\n            >\r\n                {checkLanguageConst(\"NewE-mail\", auth.translations)}\r\n            </div>\r\n            <input\r\n                value={newEmail}\r\n                type=\"email\"\r\n                className={s.input}\r\n                onChange={(value) => setNewEmail(value.target.value)}\r\n            />\r\n            <div\r\n                className={GlobalStyle.CustomFontRegular + \" \" + s.placeholder}\r\n            >\r\n                {checkLanguageConst(\"Password\", auth.translations)}\r\n            </div>\r\n            <input\r\n                value={password}\r\n                type=\"password\"\r\n                className={s.input}\r\n                onChange={(value) => setPassword(value.target.value)}\r\n            />\r\n            <div\r\n                className={\r\n                    GlobalStyle.CustomFontRegular +\r\n                    \" \" +\r\n                    (popupOk.length !== 0 ? s.popup_ok : s.popup_error)\r\n                }\r\n            >\r\n                {checkLanguageConst(popupOk || popupError, auth.translations)}\r\n            </div>\r\n            <div className={s.popup_liner_button}>\r\n                <div\r\n                    className={s.popup_button_ok}\r\n                    onClick={() => sendNewEmail()}\r\n                >\r\n                    {loading ? (\r\n                        <div className={s.popup_button_ok_loader}>\r\n                            <ClipLoader\r\n                                color={ColorsStyles.colorTextError}\r\n                                loading={true}\r\n                                css={s.loader}\r\n                                size={32}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <div\r\n                            className={\r\n                                GlobalStyle.CustomFontRegular +\r\n                                \" \" +\r\n                                s.popup_button_ok_text\r\n                            }\r\n                        >\r\n                            {checkLanguageConst(\"Save\", auth.translations)}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div\r\n                    className={s.popup_button_exit}\r\n                    onClick={() => popupForm.exitHandler()}\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular +\r\n                            \" \" +\r\n                            s.popup_button_exit_text\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\"Cancel\", auth.translations)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport s from \"./Header.module.scss\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport logo from \"../../assets/images/logo-min.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const FormRePassword = () => {\r\n    const popupForm = usePopupForm();\r\n    const auth = useContext(AuthContext);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [newPasswordRe, setNewPasswordRe] = useState(\"\");\r\n    const [popupError, setPopupError] = useState(\"\");\r\n    const [popupOk, setPopupOk] = useState(\"\");\r\n\r\n    const clearErrorPopup = () => {\r\n        setPopupError(\"\");\r\n        setPopupOk(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        clearErrorPopup();\r\n    }, [popupForm.isOpen]);\r\n\r\n    const clearInput = () => {\r\n        setNewPasswordRe(\"\");\r\n        setNewPassword(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    const sendNewPassword = async () => {\r\n        clearErrorPopup();\r\n        if (!newPassword || !newPasswordRe || !password.length) {\r\n            return setPopupError(\"ErrorFields\");\r\n        }\r\n        if (\r\n            newPassword.length === 0 ||\r\n            newPasswordRe.length === 0 ||\r\n            password.length === 0\r\n        ) {\r\n            return setPopupError(\"ErrorFields\");\r\n        }\r\n        if (newPassword !== newPasswordRe) {\r\n            return setPopupError(\"PasswordsNotMatch\");\r\n        }\r\n        if (newPassword < 6) {\r\n            return setPopupError(\"PasswordErrorLength\");\r\n        }\r\n        clearErrorPopup();\r\n        try {\r\n            await request(\r\n                `/api/admin_panel/re_password`,\r\n                \"POST\",\r\n                { new_password: newPassword, password },\r\n                {\r\n                    Authorization: `${auth.token}`,\r\n                }\r\n            );\r\n            clearInput();\r\n            setPopupOk(\"PasswordChanged\");\r\n        } catch (e) {\r\n            setPopupError(\"WrongPassword\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.root_popup}>\r\n            <div className={s.popup_header}>\r\n                <div\r\n                    className={\r\n                        GlobalStyle.BellotaFontRegular + \" \" + s.popup_label\r\n                    }\r\n                >\r\n                    {checkLanguageConst(\"ChangePassword\", auth.translations)}\r\n                </div>\r\n                <div\r\n                    className={s.button_close}\r\n                    onClick={() => popupForm.exitHandler()}\r\n                >\r\n                    <GlobalSvgSelector id=\"close\" />\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={GlobalStyle.CustomFontRegular + \" \" + s.placeholder}\r\n            >\r\n                {checkLanguageConst(\"NewPassword\", auth.translations)}\r\n            </div>\r\n            <input\r\n                value={newPassword}\r\n                type=\"password\"\r\n                className={s.input}\r\n                onChange={(value) => setNewPassword(value.target.value)}\r\n            />\r\n            <div\r\n                className={GlobalStyle.CustomFontRegular + \" \" + s.placeholder}\r\n            >\r\n                {checkLanguageConst(\"ConfirmPassword\", auth.translations)}\r\n            </div>\r\n            <input\r\n                value={newPasswordRe}\r\n                type=\"password\"\r\n                className={s.input}\r\n                onChange={(value) => setNewPasswordRe(value.target.value)}\r\n            />\r\n            <div\r\n                className={GlobalStyle.CustomFontRegular + \" \" + s.placeholder}\r\n            >\r\n                {checkLanguageConst(\"CurrentPassword\", auth.translations)}\r\n            </div>\r\n            <input\r\n                value={password}\r\n                type=\"password\"\r\n                className={s.input}\r\n                onChange={(value) => setPassword(value.target.value)}\r\n            />\r\n            <div\r\n                className={\r\n                    GlobalStyle.CustomFontRegular +\r\n                    \" \" +\r\n                    (popupOk.length !== 0 ? s.popup_ok : s.popup_error)\r\n                }\r\n            >\r\n                {checkLanguageConst(popupError || popupOk, auth.translations)}\r\n            </div>\r\n            <div className={s.popup_liner_button}>\r\n                <div\r\n                    className={s.popup_button_ok}\r\n                    onClick={() => sendNewPassword()}\r\n                >\r\n                    {loading ? (\r\n                        <div className={s.popup_button_ok_loader}>\r\n                            <ClipLoader\r\n                                color={ColorsStyles.colorTextError}\r\n                                loading={true}\r\n                                css={s.loader}\r\n                                size={32}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <div\r\n                            className={\r\n                                GlobalStyle.CustomFontRegular +\r\n                                \" \" +\r\n                                s.popup_button_ok_text\r\n                            }\r\n                        >\r\n                            {checkLanguageConst(\"Save\", auth.translations)}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div\r\n                    className={s.popup_button_exit}\r\n                    onClick={() => popupForm.exitHandler()}\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular +\r\n                            \" \" +\r\n                            s.popup_button_exit_text\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\"Cancel\", auth.translations)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React from \"react\";\r\nimport {checkLanguageConst} from \"../../hooks/translashion\";\r\n\r\nexport const FieldInput = ({label, name, change, value, translations}) => {\r\n    return (\r\n        <div className={s.jin}>\r\n            <div className={GlobalStyle.CustomFontRegular + ' ' + s.placeholder}>\r\n                {checkLanguageConst(label, translations)}\r\n            </div>\r\n            <input\r\n                value={value}\r\n                type=\"email\"\r\n                className={s.input}\r\n                onChange={(value) => change({name, value: value.target.value})}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {checkLanguageConst} from \"../../hooks/translashion\";\r\n\r\nexport const FieldBool = ({label, name, change, value, list_value, st, translations}) => {\r\n    const [statusField, setStatusField] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if ((typeof value !== \"boolean\" && value && value.toString().length > 0) || value === true || value === false) {\r\n            setStatusField(value);\r\n        }\r\n    }, [value]);\r\n\r\n    const clickHandler = (data) => {\r\n        change({name, value: data});\r\n    }\r\n\r\n    return (\r\n        <div className={s.jin}>\r\n            <div className={GlobalStyle.CustomFontRegular + ' ' + s.placeholder}>\r\n                {checkLanguageConst(label, translations)}\r\n            </div>\r\n            <div className={s.wrapper_bool}>\r\n                {st ? (\r\n                    <div className={s.root_click_}>\r\n                        {list_value?.map((item, index) => (\r\n                            <div key={index} className={s.button_input} onClick={() => clickHandler(item.value)}>\r\n                                <div className={statusField === item.value ? s.clip_active : s.clip}/>\r\n                                <div className={s.clip_text}>\r\n                                    {checkLanguageConst(item.label, translations)}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                    <div className={s.root_click}>\r\n                        {list_value?.slice(0, ((list_value.length % 2) === 0 && list_value.length !== 2) ? (list_value.length/2) : (list_value.length/2 + 1)).map((item, index) => (\r\n                            <div key={index} className={s.button_input} onClick={() => clickHandler(item.value)}>\r\n                                <div className={statusField === item.value ? s.clip_active : s.clip}/>\r\n                                <div className={s.clip_text}>\r\n                                    {checkLanguageConst(item.label, translations)}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={s.root_click}>\r\n                        {list_value?.slice(((list_value.length % 2) === 0 && list_value.length !== 2) ? (list_value.length/2) : (list_value.length/2 + 1), list_value.length).map((item, index) => (\r\n                            <div key={index} className={s.button_input} onClick={() => clickHandler(item.value)}>\r\n                                <div className={statusField === item.value ? s.clip_active : s.clip}/>\r\n                                <div className={s.clip_text}>\r\n                                    {checkLanguageConst(item.label, translations)}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {checkLanguageConst} from \"../../hooks/translashion\";\r\n\r\nexport const FieldBox = ({label, name, change, value, list_value, st, translations}) => {\r\n    const [boxField, setBoxField] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (value && value.length > 0) {\r\n            setBoxField(value);\r\n        }\r\n    }, [value]);\r\n\r\n    const boxHandler = (data) => {\r\n        let arr_1 = value;\r\n        if (arr_1 && arr_1.indexOf(data) !== -1) {\r\n            arr_1.splice(arr_1.indexOf(data), 1);\r\n        } else {\r\n            arr_1 = arr_1 ? [...arr_1, data] : [data];\r\n            arr_1 = [...new Set(arr_1)];\r\n        }\r\n        change({name, value: arr_1});\r\n    }\r\n\r\n    return (\r\n        <div className={s.jin}>\r\n            <div className={GlobalStyle.CustomFontRegular + ' ' + s.placeholder}>\r\n                {checkLanguageConst(label, translations)}\r\n            </div>\r\n            <div className={s.wrapper_bool}>\r\n                {st ? (\r\n                    <div className={s.root_click_}>\r\n                        {list_value?.map((item, index) => (\r\n                            <div key={index} className={s.button_input_b} onClick={() => boxHandler(item.value)}>\r\n                                <div className={boxField.indexOf(item.value) !== -1 ? s.box_active : s.box}/>\r\n                                <div className={s.clip_text}>\r\n                                    {checkLanguageConst(item.label, translations)}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                    <div className={s.root_click}>\r\n                        {list_value?.slice(0, list_value.length/2 + 1).map((item, index) => (\r\n                            <div key={index} className={s.button_input_b} onClick={() => boxHandler(item.value)}>\r\n                                <div className={boxField.indexOf(item.value) !== -1 ? s.box_active : s.box}/>\r\n                                <div className={s.clip_text}>\r\n                                    {checkLanguageConst(item.label, translations)}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={s.root_click}>\r\n                        {list_value?.slice(list_value.length/2 + 1, list_value.length).map((item, index) => (\r\n                            <div key={index} className={s.button_input_b} onClick={() => boxHandler(item.value)}>\r\n                                <div className={boxField.indexOf(item.value) !== -1 ? s.box_active : s.box}/>\r\n                                <div className={s.clip_text}>\r\n                                    {checkLanguageConst(item.label, translations)}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React from \"react\";\r\nimport MobileDateTimePicker from \"@mui/lab/MobileDateTimePicker\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\n\r\nexport const FieldDate = ({ label, name, change, value, translations }) => {\r\n    return (\r\n        <div className={s.jin}>\r\n            <div\r\n                className={GlobalStyle.CustomFontRegular + \" \" + s.placeholder}\r\n            >\r\n                {checkLanguageConst(label, translations)}\r\n            </div>\r\n            <MobileDateTimePicker\r\n                value={value}\r\n                onChange={(newValue) => {\r\n                    change({ name, value: newValue });\r\n                }}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        sx={{\r\n                            marginTop: 0.5,\r\n                            height: 46,\r\n                            flexDirection: \"row\",\r\n                            display: \"flex\",\r\n                            borderRadius: 3.6,\r\n                            backgroundColor: ColorsStyles.backgroundInput,\r\n                            borderColor: ColorsStyles.borderInput.color,\r\n                            borderWidth: ColorsStyles.borderInput.width,\r\n                            width: \"100%\",\r\n                        }}\r\n                        InputProps={{\r\n                            disableUnderline: true,\r\n                            readOnly: false,\r\n                            style: {\r\n                                color: ColorsStyles.colorTextInput,\r\n                                width: \"100%\",\r\n                                paddingTop: 4,\r\n                                borderRadius: 14,\r\n                                borderColor: ColorsStyles.borderInput.color,\r\n                                borderWidth: ColorsStyles.borderInput.width,\r\n                            },\r\n                        }}\r\n                    />\r\n                )}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, { useEffect } from \"react\";\r\nimport MobileDatePicker from \"@mui/lab/MobileDatePicker\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\n\r\nexport const FieldDateFull = ({\r\n    label,\r\n    name,\r\n    change,\r\n    value,\r\n    isNowDate,\r\n    translations,\r\n}) => {\r\n    useEffect(() => {\r\n        if ((!value || value.length) && isNowDate) {\r\n            change({ name, value: new Date() });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className={s.jin}>\r\n            <div\r\n                className={GlobalStyle.CustomFontRegular + \" \" + s.placeholder}\r\n            >\r\n                {checkLanguageConst(label, translations)}\r\n            </div>\r\n            <MobileDatePicker\r\n                value={value ? value : \"\"}\r\n                onChange={(newValue) => {\r\n                    change({ name, value: newValue });\r\n                }}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        sx={{\r\n                            marginTop: 0.5,\r\n                            height: 46,\r\n                            flexDirection: \"row\",\r\n                            display: \"flex\",\r\n                            borderRadius: 3.6,\r\n                            backgroundColor: ColorsStyles.backgroundInput,\r\n                            width: \"100%\",\r\n                            borderColor: ColorsStyles.borderInput.color,\r\n                            borderWidth: ColorsStyles.borderInput.width,\r\n                        }}\r\n                        InputProps={{\r\n                            disableUnderline: true,\r\n                            readOnly: false,\r\n                            style: {\r\n                                color: ColorsStyles.colorTextInput,\r\n                                width: \"100%\",\r\n                                paddingTop: 4,\r\n                                borderRadius: 14,\r\n                                borderColor: ColorsStyles.borderInput.color,\r\n                                borderWidth: ColorsStyles.borderInput.width,\r\n                                // borderColor: \"red\",\r\n                            },\r\n                        }}\r\n                    />\r\n                )}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import axios from \"axios\";\r\nimport {httpServer} from \"../const\";\r\n\r\nconst api = axios.create({\r\n    baseURL: httpServer,\r\n});\r\n\r\n\r\nexport default api;\r\n","import api from \"../axios\";\r\n\r\nexport class PostService {\r\n    static zip(response) {\r\n        if (response.status !== 200  && response.status !== 201) {\r\n            throw new Error(response.message || 'Что-то пошло не так')\r\n        }\r\n        return response;\r\n    }\r\n\r\n    static async postUploadImage(image, token) {\r\n        try {\r\n            const formData = await new FormData();\r\n            formData.append('image', image)\r\n            const data_answer = await api.post(`/api/upload/image`, formData, {headers: {\"Authorization\" : token}});\r\n            return await this.zip(data_answer);\r\n        } catch (err) {\r\n            throw new Error(err.message || 'Что-то пошло не так')\r\n        }\r\n    }\r\n\r\n    static async postUploadVideo(file, token) {\r\n        try {\r\n            const formData = await new FormData();\r\n            formData.append('file', file)\r\n            const data_answer = await api.post(`/api/upload/video`, formData, {headers: {\"Authorization\" : token}});\r\n            return await this.zip(data_answer);\r\n        } catch (err) {\r\n            throw new Error(err.message || 'Что-то пошло не так')\r\n        }\r\n    }\r\n}\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {GlobalSvgSelector} from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport {AuthContext} from \"../../context/authContext\";\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport {ColorsStyles} from \"../../constants/ColorsStyles\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {PostService} from \"../../services/PostService\";\r\nimport {checkLanguageConst} from \"../../hooks/translashion\";\r\n\r\nexport const FieldFile = ({label, name, change, value, translations}) => {\r\n    const auth = useContext(AuthContext);\r\n    const {request, error, clearError, loading} = useHttp();\r\n    const [status, setStatus] = useState('upload');\r\n    const [statusOk, setStatusOk] = useState(false);\r\n    const [statusError, setStatusError] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (value && value.length > 0) setStatus('delete');\r\n        else setStatus('upload');\r\n    }, [value]);\r\n\r\n    const deleteFile = async () => {\r\n        try {\r\n            await request(`/api/upload/delete`, 'POST', {url: value}, {\r\n                Authorization: `${auth.token}`\r\n            });\r\n            change({name, value: ''});\r\n        } catch (e) {}\r\n    }\r\n\r\n    const openFile = async (event) => {\r\n        if (status === 'delete') {\r\n            await deleteFile();\r\n            return null;\r\n        }\r\n        setLoader(true);\r\n        setStatusOk(false);\r\n        setStatusError(false);\r\n        try {\r\n            const files = event.target.files[0];\r\n            const data = (await PostService.postUploadImage(files, auth.token)).data;\r\n            setStatusOk(true);\r\n            setTimeout(() => setStatusOk(false), 2500);\r\n            change({name, value: data});\r\n            setLoader(false);\r\n        } catch (e) {\r\n            setStatusError(true);\r\n            setLoader(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.jin}>\r\n            <div className={GlobalStyle.CustomFontRegular + ' ' + s.placeholder}>\r\n                {checkLanguageConst(label, translations)}\r\n            </div>\r\n            <div className={s.root_file}>\r\n                <input\r\n                    value={value}\r\n                    type='text'\r\n                    className={s.input_file}\r\n                />\r\n                <div className={s.button_file} onClick={() => openFile()}>\r\n                    {loader ? (\r\n                        <ClipLoader color={ColorsStyles.colorTextError} loading={true} css={s.loader} size={32} />\r\n                    ) : (\r\n                        status === 'upload' ? (\r\n                            <>\r\n                                <input className={s.step} type=\"file\" name=\"myImage\" onChange={(event) => openFile(event)} />\r\n                                <GlobalSvgSelector id={statusOk ? 'ok' : 'upload'} />\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <GlobalSvgSelector id={statusOk ? 'ok' : 'delete'} />\r\n                            </>\r\n                        )\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {GlobalSvgSelector} from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport {AuthContext} from \"../../context/authContext\";\r\nimport {useHttp} from \"../../hooks/http.hook\";\r\nimport {ColorsStyles} from \"../../constants/ColorsStyles\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport {PostService} from \"../../services/PostService\";\r\nimport {checkLanguageConst} from \"../../hooks/translashion\";\r\n\r\n\r\nexport const FieldVideo = ({label, name, change, value, translations}) => {\r\n    const auth = useContext(AuthContext);\r\n    const {request, error, clearError, loading} = useHttp();\r\n    const [status, setStatus] = useState('upload');\r\n    const [statusOk, setStatusOk] = useState(false);\r\n    const [statusError, setStatusError] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (value && value.length > 0) setStatus('delete');\r\n        else setStatus('upload');\r\n    }, [value]);\r\n\r\n    const deleteFile = async () => {\r\n        try {\r\n            await request(`/api/upload/delete`, 'POST', {url: value}, {\r\n                Authorization: `${auth.token}`\r\n            });\r\n            change({name, value: ''});\r\n        } catch (e) {}\r\n    }\r\n\r\n    const openFile = async (event) => {\r\n        if (status === 'delete') {\r\n            await deleteFile();\r\n            return null;\r\n        }\r\n        setLoader(true);\r\n        setStatusOk(false);\r\n        setStatusError(false);\r\n        try {\r\n            const files = event.target.files[0];\r\n            const data = (await PostService.postUploadVideo(files, auth.token)).data;\r\n            setStatusOk(true);\r\n            setTimeout(() => setStatusOk(false), 2500);\r\n            change({name, value: data});\r\n            setLoader(false);\r\n        } catch (e) {\r\n            setStatusError(true);\r\n            setLoader(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.jin}>\r\n            <div className={GlobalStyle.CustomFontRegular + ' ' + s.placeholder}>\r\n                {checkLanguageConst(label, translations)}\r\n            </div>\r\n            <div className={s.root_file}>\r\n                <input\r\n                    value={value}\r\n                    type='text'\r\n                    className={s.input_file}\r\n                />\r\n                <div className={s.button_file} onClick={() => openFile()}>\r\n                    {loader ? (\r\n                        <ClipLoader color={ColorsStyles.colorTextError} loading={true} css={s.loader} size={32} />\r\n                    ) : (\r\n                        status === 'upload' ? (\r\n                            <>\r\n                                <input className={s.step} type=\"file\" name=\"myImage\" onChange={(event) => openFile(event)} />\r\n                                <GlobalSvgSelector id={statusOk ? 'ok' : 'upload'} />\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <GlobalSvgSelector id={statusOk ? 'ok' : 'delete'} />\r\n                            </>\r\n                        )\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React from \"react\";\r\nimport {checkLanguageConst} from \"../../hooks/translashion\";\r\n\r\nexport const FieldText = ({label, name, change, value, translations}) => {\r\n    return (\r\n        <>\r\n            <div className={GlobalStyle.CustomFontRegular + ' ' + s.placeholder}>\r\n                {checkLanguageConst(label, translations)}\r\n            </div>\r\n            <textarea\r\n                rows=\"10\"\r\n                cols=\"45\"\r\n                value={value}\r\n                className={s.inputarrea}\r\n                onChange={(value) => change({name, value: value.target.value})}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React from \"react\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const Lengs = ({\r\n    languages,\r\n    translations,\r\n    setItemMenu,\r\n    itemMenu = 0,\r\n}) => {\r\n    const newLanguage = () => {\r\n        let new_itemMenu = itemMenu + 1;\r\n        if (new_itemMenu > languages.length - 1) {\r\n            new_itemMenu = 0;\r\n        }\r\n        setItemMenu(languages[new_itemMenu].code);\r\n    };\r\n\r\n    return (\r\n        <div className={s.box_translation}>\r\n            <div\r\n                className={s.wrapper_language_label}\r\n                onClick={() => newLanguage()}\r\n            >\r\n                <div\r\n                    className={\r\n                        GlobalStyle.CustomFontRegular + \" \" + s.language_label\r\n                    }\r\n                >\r\n                    {languages\r\n                        ? checkLanguageConst(\r\n                              languages[itemMenu].name,\r\n                              translations\r\n                          )\r\n                        : \"\"}\r\n                </div>\r\n                <GlobalSvgSelector id=\"arrow_mini\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\nimport { Lengs } from \"./Lengs\";\r\n\r\nexport const FieldTextTranslation = ({\r\n    label,\r\n    name,\r\n    change,\r\n    value,\r\n    languages,\r\n    translations,\r\n    lang,\r\n}) => {\r\n    const [boxField, setBoxField] = useState(\r\n        languages?.map((item) => ({ language: item.code, value: \"\" }))\r\n    );\r\n    const [itemMenu, setItemMenu] = useState(lang);\r\n\r\n    useEffect(() => {\r\n        if (value && value.length > 0) {\r\n            setBoxField(value);\r\n        } else {\r\n            languages?.map((item) => ({ language: item.code, value: \"\" }));\r\n        }\r\n    }, [value]);\r\n\r\n    const editFiled = (value) => {\r\n        let new_boxField = boxField;\r\n        const index_l = new_boxField.findIndex(\r\n            (item) => item.language === itemMenu\r\n        );\r\n        if (index_l === -1) {\r\n            new_boxField.push({ language: itemMenu, value });\r\n        } else {\r\n            new_boxField[index_l].value = value;\r\n        }\r\n        change({ name, value: new_boxField });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={s.wrpper_field_header}>\r\n                <div\r\n                    className={\r\n                        GlobalStyle.CustomFontRegular + \" \" + s.placeholder\r\n                    }\r\n                >\r\n                    {checkLanguageConst(label, translations)}\r\n                </div>\r\n                <Lengs\r\n                    languages={languages}\r\n                    translations={translations}\r\n                    setItemMenu={setItemMenu}\r\n                    itemMenu={languages.findIndex(\r\n                        (item) => item.code === itemMenu\r\n                    )}\r\n                />\r\n            </div>\r\n            <textarea\r\n                rows=\"10\"\r\n                cols=\"45\"\r\n                value={\r\n                    boxField?.find((item) => item.language === itemMenu)\r\n                        ? boxField?.find((item) => item.language === itemMenu)\r\n                              .value\r\n                        : \"\"\r\n                }\r\n                className={s.inputarrea}\r\n                onChange={(value) => editFiled(value.target.value)}\r\n            />\r\n        </>\r\n    );\r\n};\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { PostService } from \"../../services/PostService\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\nimport { Lengs } from \"./Lengs\";\r\n\r\nexport const FieldFileTranslation = ({\r\n    label,\r\n    name,\r\n    change,\r\n    value,\r\n    languages,\r\n    translations,\r\n    lang,\r\n}) => {\r\n    const auth = useContext(AuthContext);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [status, setStatus] = useState(\"upload\");\r\n    const [statusOk, setStatusOk] = useState(false);\r\n    const [statusError, setStatusError] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n    const [boxField, setBoxField] = useState(\r\n        languages?.map((item) => ({ language: item.code, value: \"\" }))\r\n    );\r\n    const [itemMenu, setItemMenu] = useState(lang);\r\n\r\n    const updateInfo = (valueNew) => {\r\n        valueNew = valueNew ? valueNew : value;\r\n        if (valueNew && valueNew.length > 0) {\r\n            setBoxField(valueNew);\r\n            const index_l = valueNew.findIndex(\r\n                (item) => item.language === itemMenu\r\n            );\r\n            if (\r\n                index_l !== -1 &&\r\n                valueNew[index_l].value &&\r\n                valueNew[index_l].value.length > 0\r\n            )\r\n                setStatus(\"delete\");\r\n            else setStatus(\"upload\");\r\n        } else {\r\n            setBoxField(\r\n                languages?.map((item) => ({ language: item.code, value: \"\" }))\r\n            );\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateInfo();\r\n    }, [value]);\r\n\r\n    const new_set_Language = (setr) => {\r\n        setItemMenu(setr);\r\n        const el = boxField?.find((item) => item.language === setr);\r\n        if (el && el.value && el.value.length > 0) setStatus(\"delete\");\r\n        else setStatus(\"upload\");\r\n        setStatusOk(false);\r\n    };\r\n\r\n    const editFiled = (value) => {\r\n        let new_boxField = boxField;\r\n        const index_l = new_boxField.findIndex(\r\n            (item) => item.language === itemMenu\r\n        );\r\n        if (index_l === -1) {\r\n            new_boxField.push({ language: itemMenu, value });\r\n        } else {\r\n            new_boxField[index_l].value = value;\r\n        }\r\n        change({ name, value: new_boxField });\r\n        setLoader(false);\r\n        setStatusError(false);\r\n        updateInfo(new_boxField);\r\n    };\r\n\r\n    const deleteFile = async () => {\r\n        try {\r\n            const index_l = boxField.findIndex(\r\n                (item) => item.language === itemMenu\r\n            );\r\n            await request(\r\n                `/api/upload/delete`,\r\n                \"POST\",\r\n                { url: value[index_l].value },\r\n                {\r\n                    Authorization: `${auth.token}`,\r\n                }\r\n            );\r\n            editFiled(\"\");\r\n        } catch (e) {}\r\n    };\r\n\r\n    const openFile = async (event) => {\r\n        if (status === \"delete\") {\r\n            await deleteFile();\r\n            return null;\r\n        }\r\n        setLoader(true);\r\n        setStatusOk(false);\r\n        setStatusError(false);\r\n        try {\r\n            const files = event.target.files[0];\r\n            const data = (await PostService.postUploadImage(files, auth.token))\r\n                .data;\r\n            setStatusOk(true);\r\n            setTimeout(() => setStatusOk(false), 2500);\r\n            editFiled(data);\r\n            setLoader(false);\r\n        } catch (e) {\r\n            setStatusError(true);\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.jin}>\r\n            <div className={s.wrpper_field_header}>\r\n                <div\r\n                    className={\r\n                        GlobalStyle.CustomFontRegular + \" \" + s.placeholder\r\n                    }\r\n                >\r\n                    {checkLanguageConst(label, translations)}\r\n                </div>\r\n                <Lengs\r\n                    languages={languages}\r\n                    translations={translations}\r\n                    setItemMenu={new_set_Language}\r\n                    itemMenu={languages.findIndex(\r\n                        (item) => item.code === itemMenu\r\n                    )}\r\n                />\r\n            </div>\r\n            <div className={s.root_file}>\r\n                <input\r\n                    value={\r\n                        boxField?.find((item) => item.language === itemMenu)\r\n                            ? boxField?.find(\r\n                                  (item) => item.language === itemMenu\r\n                              ).value\r\n                            : \"\"\r\n                    }\r\n                    type=\"text\"\r\n                    className={s.input_file}\r\n                />\r\n                <div\r\n                    className={s.button_file}\r\n                    onClick={() => openFile(itemMenu)}\r\n                >\r\n                    {loader ? (\r\n                        <ClipLoader\r\n                            color={ColorsStyles.colorTextError}\r\n                            loading={true}\r\n                            css={s.loader}\r\n                            size={32}\r\n                        />\r\n                    ) : status === \"upload\" ? (\r\n                        <>\r\n                            <input\r\n                                className={s.step}\r\n                                type=\"file\"\r\n                                name=\"myImage\"\r\n                                onChange={(event) => openFile(event)}\r\n                            />\r\n                            <GlobalSvgSelector\r\n                                id={statusOk ? \"ok\" : \"upload\"}\r\n                            />\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <GlobalSvgSelector\r\n                                id={statusOk ? \"ok\" : \"delete\"}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\nimport { Lengs } from \"./Lengs\";\r\n\r\nexport const FieldInputTranslation = ({\r\n    label,\r\n    name,\r\n    change,\r\n    value,\r\n    languages,\r\n    translations,\r\n    lang,\r\n}) => {\r\n    const [boxField, setBoxField] = useState(\r\n        languages?.map((item) => ({ language: item.code, value: \"\" }))\r\n    );\r\n    const [itemMenu, setItemMenu] = useState(lang);\r\n\r\n    useEffect(() => {\r\n        if (value && value.length > 0) {\r\n            setBoxField(value);\r\n        } else {\r\n            setBoxField(\r\n                languages?.map((item) => ({ language: item.code, value: \"\" }))\r\n            );\r\n        }\r\n    }, [value]);\r\n\r\n    const editFiled = (value) => {\r\n        let new_boxField = boxField;\r\n        const index_l = new_boxField.findIndex(\r\n            (item) => item.language === itemMenu\r\n        );\r\n        if (index_l === -1) {\r\n            new_boxField.push({ language: itemMenu, value });\r\n        } else {\r\n            new_boxField[index_l].value = value;\r\n        }\r\n        change({ name, value: new_boxField });\r\n    };\r\n\r\n    return (\r\n        <div className={s.jin}>\r\n            <div className={s.wrpper_field_header}>\r\n                <div\r\n                    className={\r\n                        GlobalStyle.CustomFontRegular + \" \" + s.placeholder\r\n                    }\r\n                >\r\n                    {checkLanguageConst(label, translations)}\r\n                </div>\r\n                <Lengs\r\n                    languages={languages}\r\n                    translations={translations}\r\n                    setItemMenu={setItemMenu}\r\n                    itemMenu={languages.findIndex(\r\n                        (item) => item.code === itemMenu\r\n                    )}\r\n                />\r\n            </div>\r\n            <input\r\n                value={\r\n                    boxField?.find((item) => item.language === itemMenu)\r\n                        ? boxField?.find((item) => item.language === itemMenu)\r\n                              .value\r\n                        : \"\"\r\n                }\r\n                type=\"email\"\r\n                className={s.input}\r\n                onChange={(value) => editFiled(value.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import s from \"../tableCard/Form.module.scss\";\r\nimport React from \"react\";\r\nimport { listField } from \"../../constants/OptionsTable\";\r\n\r\nexport const FieldDoubleFields = ({\r\n    fields,\r\n    change,\r\n    value,\r\n    translations,\r\n    lang,\r\n    languages,\r\n}) => {\r\n    return (\r\n        <div className={s.wrapper_full}>\r\n            <div className={s.block_field}>\r\n                {listField({\r\n                    lang,\r\n                    translations,\r\n                    item: fields[0],\r\n                    change: change,\r\n                    value: value,\r\n                    optionLanguages: languages,\r\n                    st: true,\r\n                })}\r\n            </div>\r\n            <div className={s.block_field}>\r\n                {listField({\r\n                    lang,\r\n                    translations,\r\n                    item: fields[1],\r\n                    change: change,\r\n                    value: value,\r\n                    optionLanguages: languages,\r\n                    st: true,\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport MobileDateTimePicker from \"@mui/lab/MobileDateTimePicker\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { checkLanguage, checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const FieldTemporaryAccessData = ({\r\n    label,\r\n    name,\r\n    change,\r\n    value,\r\n    url_get_data,\r\n    translations,\r\n}) => {\r\n    const auth = useContext(AuthContext);\r\n    const [boxField, setBoxField] = useState([]);\r\n    const [list_value, setList_value] = useState([]);\r\n    const { request, error, clearError, loading } = useHttp();\r\n\r\n    const getListValue = async () => {\r\n        try {\r\n            const answer = await request(\r\n                `/api/admin_panel${url_get_data}`,\r\n                \"GET\",\r\n                null,\r\n                {\r\n                    Authorization: auth.token,\r\n                }\r\n            );\r\n            setList_value([...answer]);\r\n        } catch (e) {}\r\n    };\r\n\r\n    useEffect(() => {\r\n        getListValue();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (value && value.length > 0) {\r\n            setBoxField(value);\r\n        }\r\n    }, [value]);\r\n\r\n    const boxHandler = (data, indexElement) => {\r\n        let arr_1 = value;\r\n        if (indexElement !== -1) {\r\n            arr_1.splice(indexElement, 1);\r\n        } else {\r\n            let end_date = new Date();\r\n            end_date.setMonth(end_date.getMonth() + 1);\r\n            arr_1 = [\r\n                ...arr_1,\r\n                {\r\n                    course_id: data._id,\r\n                    start_date: new Date(),\r\n                    end_date: end_date,\r\n                },\r\n            ];\r\n            // arr_1 = [...new Set(arr_1)];\r\n        }\r\n        change({ name, value: arr_1 });\r\n    };\r\n\r\n    const changeDate = (data, newValue, indexElement, status) => {\r\n        let arr_copy = value;\r\n        arr_copy[indexElement][status] = newValue;\r\n        change({ name, value: arr_copy });\r\n    };\r\n\r\n    return (\r\n        <div className={s.jin}>\r\n            <div\r\n                className={GlobalStyle.CustomFontRegular + \" \" + s.placeholder}\r\n            >\r\n                {checkLanguageConst(label, translations)}\r\n            </div>\r\n            <div className={s.wrapper_bool}>\r\n                <div className={s.root_click_}>\r\n                    {loading ? (\r\n                        <div className={s.wrappe_center}>\r\n                            <ClipLoader\r\n                                color={ColorsStyles.colorTextError}\r\n                                loading={true}\r\n                                css={s.loader}\r\n                                size={26}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        list_value?.map((item, index) => {\r\n                            let indexElement = boxField.findIndex(\r\n                                (el) => el.course_id === item._id\r\n                            );\r\n                            return (\r\n                                <div>\r\n                                    <div\r\n                                        key={index}\r\n                                        className={s.button_input_b}\r\n                                        onClick={() =>\r\n                                            boxHandler(item, indexElement)\r\n                                        }\r\n                                    >\r\n                                        <div\r\n                                            className={\r\n                                                indexElement !== -1\r\n                                                    ? s.box_active\r\n                                                    : s.box\r\n                                            }\r\n                                        />\r\n                                        <div className={s.clip_text}>\r\n                                            {checkLanguage(\r\n                                                item.label,\r\n                                                auth.language\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    {indexElement !== -1 ? (\r\n                                        <div className={s.wrapper_date}>\r\n                                            <div\r\n                                                className={\r\n                                                    GlobalStyle.CustomFontRegular +\r\n                                                    \" \" +\r\n                                                    s.st_date\r\n                                                }\r\n                                            >\r\n                                                {checkLanguageConst(\r\n                                                    \"From\",\r\n                                                    translations\r\n                                                )}\r\n                                            </div>\r\n                                            <MobileDateTimePicker\r\n                                                value={\r\n                                                    boxField[indexElement]\r\n                                                        .start_date\r\n                                                }\r\n                                                onChange={(newValue) => {\r\n                                                    changeDate(\r\n                                                        item,\r\n                                                        newValue,\r\n                                                        indexElement,\r\n                                                        \"start_date\"\r\n                                                    );\r\n                                                }}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        sx={{\r\n                                                            marginTop: 0.5,\r\n                                                            height: 46,\r\n                                                            flexDirection:\r\n                                                                \"row\",\r\n                                                            display: \"flex\",\r\n                                                            borderRadius: 3.6,\r\n                                                            backgroundColor:\r\n                                                                \"#E0E6F1\",\r\n                                                            width: \"44%\",\r\n                                                            borderColor: \"red\",\r\n                                                        }}\r\n                                                        InputProps={{\r\n                                                            disableUnderline: true,\r\n                                                            readOnly: false,\r\n                                                            style: {\r\n                                                                color: \"#000\",\r\n                                                                // width: '100%',\r\n                                                                paddingTop: 4,\r\n                                                                borderRadius: 14,\r\n                                                                borderColor:\r\n                                                                    \"red\",\r\n                                                            },\r\n                                                        }}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                            <div\r\n                                                className={\r\n                                                    GlobalStyle.CustomFontRegular +\r\n                                                    \" \" +\r\n                                                    s.st_date\r\n                                                }\r\n                                            >\r\n                                                {checkLanguageConst(\r\n                                                    \"To\",\r\n                                                    translations\r\n                                                )}\r\n                                            </div>\r\n                                            <MobileDateTimePicker\r\n                                                value={\r\n                                                    boxField[indexElement]\r\n                                                        .end_date\r\n                                                }\r\n                                                onChange={(newValue) => {\r\n                                                    changeDate(\r\n                                                        item,\r\n                                                        newValue,\r\n                                                        indexElement,\r\n                                                        \"end_date\"\r\n                                                    );\r\n                                                }}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        sx={{\r\n                                                            marginTop: 0.5,\r\n                                                            height: 46,\r\n                                                            flexDirection:\r\n                                                                \"row\",\r\n                                                            display: \"flex\",\r\n                                                            borderRadius: 3.6,\r\n                                                            backgroundColor:\r\n                                                                \"#E0E6F1\",\r\n                                                            width: \"44%\",\r\n                                                            borderColor: \"red\",\r\n                                                        }}\r\n                                                        InputProps={{\r\n                                                            disableUnderline: true,\r\n                                                            readOnly: false,\r\n                                                            style: {\r\n                                                                color: \"#000\",\r\n                                                                width: \"100%\",\r\n                                                                paddingTop: 4,\r\n                                                                borderRadius: 14,\r\n                                                                borderColor:\r\n                                                                    \"red\",\r\n                                                            },\r\n                                                        }}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            );\r\n                        })\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, { useState } from \"react\";\r\nimport { listField } from \"../../constants/OptionsTable\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const FieldListMenu = ({\r\n    labels,\r\n    list_menu_fields,\r\n    change,\r\n    value,\r\n    id_data,\r\n    translations,\r\n    lang,\r\n    languages,\r\n}) => {\r\n    const [itemMenu, setItemMenu] = useState(0);\r\n    return (\r\n        <>\r\n            <div className={s.liner_menu}>\r\n                {labels?.map((item, index) => (\r\n                    <div\r\n                        onClick={() => setItemMenu(index)}\r\n                        className={\r\n                            s.liner_menu_item +\r\n                            (itemMenu === index\r\n                                ? \" \" + s.liner_menu_item_active\r\n                                : \"\")\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(item, translations)}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {list_menu_fields[itemMenu]?.map((item) => {\r\n                return listField({\r\n                    lang,\r\n                    translations,\r\n                    item: item,\r\n                    change: change,\r\n                    value: value,\r\n                    optionLanguages: languages,\r\n                    id_data: id_data,\r\n                });\r\n            })}\r\n        </>\r\n    );\r\n};\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport MobileDateTimePicker from \"@mui/lab/MobileDateTimePicker\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\nimport Scrollbars from \"react-custom-scrollbars-2\";\r\nimport { listField, optionLanguages } from \"../../constants/OptionsTable\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const FieldListAdditionalFunctionality = ({\r\n    languages,\r\n    labelFunc,\r\n    placeholder,\r\n    label,\r\n    name,\r\n    change,\r\n    value,\r\n    url_get_data,\r\n    additional_functionality,\r\n    title_add,\r\n    id_data,\r\n    add_data,\r\n    translations,\r\n    wigth_panel,\r\n}) => {\r\n    const auth = useContext(AuthContext);\r\n    const [list_value, setList_value] = useState([]);\r\n    const [popapStatus, setPopapStatus] = useState(null);\r\n    const [popupOk, setPopupOk] = useState(\"\");\r\n    const [popupError, setPopupError] = useState(\"\");\r\n    const [newData, setNewData] = useState(null);\r\n    const { request, error, clearError, loading } = useHttp();\r\n\r\n    const changeRootMain = (value) => {\r\n        change({ name, value });\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     change({name, value: list_value});\r\n    // }, [list_value]);\r\n\r\n    const getListValue = async () => {\r\n        try {\r\n            const answer = await request(\r\n                `/api/admin_panel${url_get_data}${id_data}`,\r\n                \"GET\",\r\n                null,\r\n                {\r\n                    Authorization: auth.token,\r\n                }\r\n            );\r\n            changeRootMain(answer ? answer : []);\r\n            // setList_value(answer ? answer : []);\r\n        } catch (e) {}\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!value || value.length === 0) getListValue();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (value && value.length > 0) {\r\n            setList_value(value);\r\n        } else {\r\n            setList_value([]);\r\n        }\r\n    }, [value]);\r\n\r\n    const clearHandler = (status) => {\r\n        if (status.item) {\r\n            let new_data = [...list_value];\r\n            new_data.splice(status.index, 1);\r\n            changeRootMain([...new_data]);\r\n        }\r\n        setPopapStatus(null);\r\n    };\r\n\r\n    const deleteHandler = (index) => {\r\n        let new_data = [...list_value];\r\n        new_data.splice(index, 1);\r\n        changeRootMain([...new_data]);\r\n    };\r\n\r\n    const select = (item__) => {\r\n        let field = {};\r\n        additional_functionality?.forEach((item) => {\r\n            if (item.type === \"list_menu\") {\r\n                item?.list_menu_fields?.forEach((item_menu) => {\r\n                    item_menu?.forEach((element) => {\r\n                        if (element.type === \"double_fields\") {\r\n                            field[element.fields[0].value] = item__\r\n                                ? item__[element.fields[0].value]\r\n                                : cloneDeep(element.fields[0].default);\r\n                            field[element.fields[1].value] = item__\r\n                                ? item__[element.fields[1].value]\r\n                                : cloneDeep(element.fields[1].default);\r\n                        } else\r\n                            field[element.value] = item__\r\n                                ? item__[element.value]\r\n                                : cloneDeep(element.default);\r\n                    });\r\n                });\r\n                // field[item.fields[0].value] = data ? data[item.fields[0].value] : cloneDeep(item.fields[0].default);\r\n                // field[item.fields[1].value] = data ? data[item.fields[1].value] : cloneDeep(item.fields[1].default);\r\n            } else if (item.type === \"double_fields\") {\r\n                field[item.fields[0].value] = item__\r\n                    ? item__[item.fields[0].value]\r\n                    : cloneDeep(item.fields[0].default);\r\n                field[item.fields[1].value] = item__\r\n                    ? item__[item.fields[1].value]\r\n                    : cloneDeep(item.fields[1].default);\r\n            } else\r\n                field[item.value] = item__\r\n                    ? item__[item.value]\r\n                    : cloneDeep(item.default);\r\n        });\r\n        setNewData(field);\r\n        return field;\r\n    };\r\n\r\n    const itemHandler = (item, index) => {\r\n        let gim = select(item);\r\n        setNewData({ ...gim });\r\n        setPopapStatus({ item, index, data: gim });\r\n    };\r\n\r\n    const addHandler = () => {\r\n        itemHandler(null, list_value.length);\r\n    };\r\n\r\n    const folHandler = (e) => {\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const changeRoot = (data) => {\r\n        let new_data;\r\n        if (newData) {\r\n            new_data = { ...newData };\r\n        } else {\r\n            new_data = {};\r\n        }\r\n        new_data[data.name] = data.value;\r\n        setNewData({ ...new_data });\r\n    };\r\n\r\n    const saveHandler = () => {\r\n        let new_data = [...list_value];\r\n        if (!popapStatus.item) {\r\n            if (placeholder)\r\n                new_data.push({ ...newData, [placeholder]: auth.name });\r\n            else new_data.push(newData);\r\n        } else {\r\n            if (placeholder)\r\n                new_data[popapStatus.index] = {\r\n                    ...newData,\r\n                    [placeholder]: auth.name,\r\n                };\r\n            else new_data[popapStatus.index] = newData;\r\n        }\r\n        changeRootMain([...new_data]);\r\n        setPopapStatus(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {popapStatus ? (\r\n                <div className={s.blur__} onClick={() => setPopapStatus(null)}>\r\n                    <div className={s.root___l} onClick={(e) => folHandler(e)}>\r\n                        <div className={s.root_popup_}>\r\n                            <div\r\n                                style={{\r\n                                    width: wigth_panel ? wigth_panel : 400,\r\n                                }}\r\n                            >\r\n                                <div className={s.popup_header}>\r\n                                    <div\r\n                                        className={\r\n                                            GlobalStyle.BellotaFontRegular +\r\n                                            \" \" +\r\n                                            s.popup_label\r\n                                        }\r\n                                    >\r\n                                        {checkLanguageConst(\r\n                                            \"Editing\",\r\n                                            translations\r\n                                        )}\r\n                                    </div>\r\n                                    <div className={s.block_buttons}>\r\n                                        <div\r\n                                            className={s.popup_button_delete}\r\n                                            onClick={() =>\r\n                                                clearHandler(popapStatus)\r\n                                            }\r\n                                        >\r\n                                            <div\r\n                                                className={\r\n                                                    GlobalStyle.CustomFontRegular +\r\n                                                    \" \" +\r\n                                                    s.popup_button_exit_text\r\n                                                }\r\n                                            >\r\n                                                {checkLanguageConst(\r\n                                                    \"Delete\",\r\n                                                    translations\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div\r\n                                            className={s.button_close}\r\n                                            onClick={() => setPopapStatus(null)}\r\n                                        >\r\n                                            <GlobalSvgSelector id=\"close\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <Scrollbars\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        height: \"60vh\",\r\n                                        marginTop: 18,\r\n                                    }}\r\n                                >\r\n                                    <div className={s.items}>\r\n                                        {additional_functionality?.map(\r\n                                            (item, index) => {\r\n                                                return listField({\r\n                                                    lang: auth.language,\r\n                                                    translations,\r\n                                                    item: item,\r\n                                                    change: changeRoot,\r\n                                                    value: newData,\r\n                                                    optionLanguages: languages,\r\n                                                });\r\n                                            }\r\n                                        )}\r\n                                    </div>\r\n                                </Scrollbars>\r\n                                <div\r\n                                    className={\r\n                                        GlobalStyle.CustomFontRegular +\r\n                                        \" \" +\r\n                                        (popupOk.length !== 0\r\n                                            ? s.popup_ok\r\n                                            : s.popup_error)\r\n                                    }\r\n                                >\r\n                                    {checkLanguageConst(\r\n                                        popupOk || popupError,\r\n                                        translations\r\n                                    )}\r\n                                </div>\r\n                                <div className={s.popup_liner_button}>\r\n                                    <div\r\n                                        className={s.popup_button_ok}\r\n                                        onClick={() => saveHandler()}\r\n                                    >\r\n                                        {loading ? (\r\n                                            <div\r\n                                                className={\r\n                                                    s.popup_button_ok_loader\r\n                                                }\r\n                                            >\r\n                                                <ClipLoader\r\n                                                    color={\r\n                                                        ColorsStyles.colorTextError\r\n                                                    }\r\n                                                    loading={true}\r\n                                                    css={s.loader}\r\n                                                    size={32}\r\n                                                />\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div\r\n                                                className={\r\n                                                    GlobalStyle.CustomFontRegular +\r\n                                                    \" \" +\r\n                                                    s.popup_button_ok_text\r\n                                                }\r\n                                            >\r\n                                                {checkLanguageConst(\r\n                                                    popapStatus?.item\r\n                                                        ? \"Save\"\r\n                                                        : \"Add\",\r\n                                                    translations\r\n                                                )}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div\r\n                                        className={s.popup_button_exit}\r\n                                        onClick={() => setPopapStatus(null)}\r\n                                    >\r\n                                        <div\r\n                                            className={\r\n                                                GlobalStyle.CustomFontRegular +\r\n                                                \" \" +\r\n                                                s.popup_button_exit_text\r\n                                            }\r\n                                        >\r\n                                            {checkLanguageConst(\r\n                                                \"Cancel\",\r\n                                                translations\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/*</div>*/}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n\r\n            <div\r\n                className={\r\n                    GlobalStyle.CustomFontRegular + \" \" + s.placeholder_max\r\n                }\r\n            >\r\n                {label}\r\n            </div>\r\n            <div className={s.wrapper_bool}>\r\n                <div className={s.root_click_}>\r\n                    {loading ? (\r\n                        <div className={s.wrappe_center}>\r\n                            <ClipLoader\r\n                                color={ColorsStyles.colorTextError}\r\n                                loading={true}\r\n                                css={s.loader}\r\n                                size={26}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        list_value?.map((item, index) => (\r\n                            <div\r\n                                onClick={() => itemHandler(item, index)}\r\n                                className={s.additional_item}\r\n                            >\r\n                                <div\r\n                                    className={\r\n                                        GlobalStyle.CustomFontRegular +\r\n                                        \" \" +\r\n                                        s.additional_item_text\r\n                                    }\r\n                                >\r\n                                    {labelFunc\r\n                                        ? labelFunc(item)\r\n                                        : item.label.find(\r\n                                              (item) => item.language\r\n                                          )\r\n                                        ? item.label.find(\r\n                                              (item) => item.language\r\n                                          ).value\r\n                                        : item.label[0].value}\r\n                                </div>\r\n                                <div\r\n                                    className={s.button_delet}\r\n                                    onClick={(e) => {\r\n                                        e.stopPropagation();\r\n                                        deleteHandler(index);\r\n                                    }}\r\n                                >\r\n                                    <GlobalSvgSelector id=\"clear\" />\r\n                                </div>\r\n                                {placeholder ? (\r\n                                    <div\r\n                                        className={\r\n                                            GlobalStyle.CustomFontLite +\r\n                                            \" \" +\r\n                                            s.additional_item_placeholder\r\n                                        }\r\n                                    >\r\n                                        {item[placeholder]}\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                        ))\r\n                    )}\r\n                    {!loading ? (\r\n                        // <div className={s.button_add_function}>\r\n                        <div\r\n                            onClick={() => addHandler()}\r\n                            className={\r\n                                GlobalStyle.CustomFontRegular +\r\n                                \" \" +\r\n                                s.button_add_function\r\n                            }\r\n                        >\r\n                            {checkLanguageConst(title_add, translations)}\r\n                        </div>\r\n                    ) : // </div>\r\n                    null}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport MDEditor from \"@uiw/react-md-editor\";\r\nimport MarkdownEditor from \"@uiw/react-markdown-editor\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\nimport { Lengs } from \"./Lengs\";\r\n\r\nexport const FieldInputEditTranslation = ({\r\n    label,\r\n    name,\r\n    change,\r\n    value,\r\n    languages,\r\n    translation,\r\n    translations,\r\n    lang,\r\n}) => {\r\n    const [boxField, setBoxField] = useState(\r\n        translation\r\n            ? languages?.map((item) => ({ language: item.code, value: \"\" }))\r\n            : \"\"\r\n    );\r\n    const [itemMenu, setItemMenu] = useState(lang);\r\n\r\n    useEffect(() => {\r\n        if (value && value.length > 0) {\r\n            setBoxField(value);\r\n        } else {\r\n            setBoxField(\r\n                translation\r\n                    ? languages?.map((item) => ({\r\n                          language: item.code,\r\n                          value: \"\",\r\n                      }))\r\n                    : \"\"\r\n            );\r\n        }\r\n    }, [value]);\r\n\r\n    const editFiled = (value) => {\r\n        if (translation) {\r\n            let new_boxField = boxField;\r\n            const index_l = new_boxField.findIndex(\r\n                (item) => item.language === itemMenu\r\n            );\r\n            if (index_l === -1) {\r\n                new_boxField.push({\r\n                    language: itemMenu,\r\n                    value,\r\n                });\r\n            } else {\r\n                new_boxField[index_l].value = value;\r\n            }\r\n            change({ name, value: new_boxField });\r\n        } else {\r\n            change({ name, value });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.jinl}>\r\n            <div className={s.wrpper_field_header}>\r\n                <div\r\n                    className={\r\n                        GlobalStyle.CustomFontRegular + \" \" + s.placeholder\r\n                    }\r\n                >\r\n                    {checkLanguageConst(label, translations)}\r\n                </div>\r\n                {translation ? (\r\n                    <Lengs\r\n                        languages={languages}\r\n                        translations={translations}\r\n                        setItemMenu={setItemMenu}\r\n                        itemMenu={languages.findIndex(\r\n                            (item) => item.code === itemMenu\r\n                        )}\r\n                    />\r\n                ) : null}\r\n            </div>\r\n            <MDEditor\r\n                value={\r\n                    translation\r\n                        ? boxField?.find((item) => item.language === itemMenu)\r\n                            ? boxField?.find(\r\n                                  (item) => item.language === itemMenu\r\n                              ).value\r\n                            : \"\"\r\n                        : boxField\r\n                }\r\n                onChange={editFiled}\r\n                preview={\"edit\"}\r\n                className={s.markdown}\r\n                height={220}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\nimport { FieldInput } from \"./FielsInput\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\nimport { Lengs } from \"./Lengs\";\r\n\r\nexport const FieldIntervalBallTextTranslation = ({\r\n    labels,\r\n    name,\r\n    change,\r\n    value,\r\n    languages,\r\n    add_data,\r\n    title_add,\r\n    translations,\r\n    lang,\r\n}) => {\r\n    const [field, setField] = useState([]);\r\n    const [itemMenu, setItemMenu] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (value && value.length > 0) {\r\n            setField(value);\r\n            if (itemMenu.length === 0) {\r\n                let new_menu = [];\r\n                value.forEach(() => new_menu.push(lang));\r\n                setItemMenu(new_menu);\r\n            }\r\n        } else {\r\n            setField([]);\r\n        }\r\n    }, [value]);\r\n\r\n    const changeRoot = (value) => {\r\n        change({ name, value });\r\n    };\r\n\r\n    const new_set_Language = (index, setr) => {\r\n        let new_menu = [...itemMenu];\r\n        new_menu[index] = setr;\r\n        setItemMenu([...new_menu]);\r\n    };\r\n\r\n    const editText = (value, index) => {\r\n        let new_data = [...field];\r\n        const index_l = new_data[index].description.findIndex(\r\n            (item) => item.language === itemMenu[index]\r\n        );\r\n        if (index_l === -1) {\r\n            new_data[index].description.push({\r\n                language: itemMenu[index],\r\n                value,\r\n            });\r\n        } else {\r\n            new_data[index].description[index_l].value = value;\r\n        }\r\n        changeRoot(new_data);\r\n    };\r\n\r\n    const addData = () => {\r\n        let new_data = [...field];\r\n        new_data.push(cloneDeep(add_data));\r\n        changeRoot(new_data);\r\n        let new_menu = [...itemMenu];\r\n        new_menu.push(lang);\r\n        setItemMenu([...new_menu]);\r\n    };\r\n\r\n    const deleteHandler = (index) => {\r\n        let new_data = [...field];\r\n        new_data.splice(index, 1);\r\n        // changeRoot(new_data);\r\n        let new_menu = [...itemMenu];\r\n        new_menu.splice(index, 1);\r\n        change({ name, value: new_data });\r\n        // setItemMenu([...new_menu]);\r\n    };\r\n\r\n    const editBall = (value, index, type) => {\r\n        let new_data = [...field];\r\n        new_data[index][type] = value;\r\n        changeRoot(new_data);\r\n    };\r\n\r\n    const hasColor = /^#(?:[0-9a-f]{3}){1,2}$/i;\r\n\r\n    return (\r\n        <>\r\n            {field?.map((item, index) => (\r\n                <>\r\n                    <div className={s.wrapper_st}>\r\n                        <div\r\n                            className={\r\n                                GlobalStyle.CustomFontRegular +\r\n                                \" \" +\r\n                                s.placeholder\r\n                            }\r\n                        >\r\n                            {`${index + 1}. ${checkLanguageConst(\r\n                                labels[0],\r\n                                translations\r\n                            )}`}\r\n                        </div>\r\n                        <div\r\n                            className={s.button_delet_}\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                deleteHandler(index);\r\n                            }}\r\n                        >\r\n                            <GlobalSvgSelector id=\"clear\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.wrapper_st}>\r\n                        <input\r\n                            value={item.start_balls}\r\n                            type=\"text\"\r\n                            className={s.input_set}\r\n                            onChange={(value) =>\r\n                                editBall(\r\n                                    value.target.value,\r\n                                    index,\r\n                                    \"start_balls\"\r\n                                )\r\n                            }\r\n                        />\r\n                        <div\r\n                            className={\r\n                                GlobalStyle.CustomFontRegular +\r\n                                \" \" +\r\n                                s.text_list\r\n                            }\r\n                        >\r\n                            ——\r\n                        </div>\r\n                        <input\r\n                            value={item.end_balls}\r\n                            type=\"text\"\r\n                            className={s.input_set}\r\n                            onChange={(value) =>\r\n                                editBall(value.target.value, index, \"end_balls\")\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className={s.wrpper_field_header}>\r\n                        <div\r\n                            className={\r\n                                GlobalStyle.CustomFontRegular +\r\n                                \" \" +\r\n                                s.placeholder\r\n                            }\r\n                        >\r\n                            {checkLanguageConst(labels[1], translations)}\r\n                        </div>\r\n                        {/* <div className={s.box_translation}>\r\n                            <div\r\n                                className={s.wrapper_language_label}\r\n                                onClick={() => newLanguage(index)}\r\n                            >\r\n                                <div\r\n                                    className={\r\n                                        GlobalStyle.CustomFontRegular +\r\n                                        \" \" +\r\n                                        s.language_label\r\n                                    }\r\n                                >\r\n                                    {checkLanguageConst(\r\n                                        languages[itemMenu[index]].label,\r\n                                        translations\r\n                                    )}\r\n                                </div>\r\n                                <GlobalSvgSelector id=\"arrow_mini\" />\r\n                            </div>\r\n                        </div> */}\r\n                        <Lengs\r\n                            languages={languages}\r\n                            translations={translations}\r\n                            setItemMenu={(setr) =>\r\n                                new_set_Language(index, setr)\r\n                            }\r\n                            itemMenu={languages.findIndex(\r\n                                (item) => item.code === itemMenu[index]\r\n                            )}\r\n                        />\r\n                    </div>\r\n                    <textarea\r\n                        rows=\"10\"\r\n                        cols=\"45\"\r\n                        value={\r\n                            item.description?.find(\r\n                                (item) => item.language === itemMenu[index]\r\n                            )\r\n                                ? item.description?.find(\r\n                                      (item) =>\r\n                                          item.language === itemMenu[index]\r\n                                  ).value\r\n                                : \"\"\r\n                        }\r\n                        className={s.inputarrea}\r\n                        onChange={(value) =>\r\n                            editText(value.target.value, index)\r\n                        }\r\n                    />\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular + \" \" + s.placeholder\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(labels[2], translations)}\r\n                    </div>\r\n                    <div className={s.input_color}>\r\n                        <input\r\n                            value={item.color}\r\n                            type=\"text\"\r\n                            className={s.input_text_color}\r\n                            onChange={(value) =>\r\n                                editBall(value.target.value, index, \"color\")\r\n                            }\r\n                        />\r\n                        <div\r\n                            style={{\r\n                                marginLeft: 16,\r\n                                width: 30,\r\n                                height: 30,\r\n                                borderRadius: 2,\r\n                                backgroundColor: hasColor.test(item.color)\r\n                                    ? item.color\r\n                                    : \"rgba(0, 0, 0, 0)\",\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </>\r\n            ))}\r\n            <div\r\n                onClick={() => addData()}\r\n                className={\r\n                    GlobalStyle.CustomFontRegular + \" \" + s.button_add_function\r\n                }\r\n            >\r\n                {checkLanguageConst(title_add, translations)}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const FieldListAnswerBall = ({\r\n    name,\r\n    change,\r\n    value,\r\n    add_data,\r\n    title_add,\r\n    translations,\r\n}) => {\r\n    const [field, setField] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (value && value.length > 0) {\r\n            setField(value);\r\n        } else {\r\n            setField([]);\r\n        }\r\n    }, [value]);\r\n\r\n    const changeRoot = (value) => {\r\n        change({ name, value });\r\n    };\r\n\r\n    const editText = (value, index) => {\r\n        let new_data = [...field];\r\n        new_data[index].label = value;\r\n        changeRoot(new_data);\r\n    };\r\n\r\n    const addData = () => {\r\n        let new_data = [...field];\r\n        new_data.push(cloneDeep(add_data));\r\n        changeRoot(new_data);\r\n    };\r\n\r\n    const deleteHandler = (index) => {\r\n        let new_data = [...field];\r\n        new_data.splice(index, 1);\r\n        changeRoot(new_data);\r\n    };\r\n\r\n    const editBall = (value, index) => {\r\n        let new_data = [...field];\r\n        new_data[index].balls = value;\r\n        changeRoot(new_data);\r\n    };\r\n\r\n    const editBox = (index) => {\r\n        let new_data = [...field];\r\n        new_data[index].is_status = !new_data[index].is_status;\r\n        changeRoot(new_data);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {field?.map((item, index) => (\r\n                <div className={s.wrapper_st_}>\r\n                    <div>\r\n                        <div className={s.wrapper_st}>\r\n                            <div\r\n                                className={\r\n                                    GlobalStyle.CustomFontRegular +\r\n                                    \" \" +\r\n                                    s.placeholder\r\n                                }\r\n                            >\r\n                                {`${checkLanguageConst(\r\n                                    \"Answer\",\r\n                                    translations\r\n                                )} ${index + 1}`}\r\n                                {}\r\n                            </div>\r\n                            <div\r\n                                className={s.button_delet_}\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    deleteHandler(index);\r\n                                }}\r\n                            >\r\n                                <GlobalSvgSelector id=\"clear\" />\r\n                            </div>\r\n                        </div>\r\n                        <input\r\n                            value={item.label}\r\n                            type=\"text\"\r\n                            className={s.input_wil}\r\n                            onChange={(value) =>\r\n                                editText(value.target.value, index)\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className={s.lin_b}>\r\n                        <div\r\n                            className={\r\n                                GlobalStyle.CustomFontRegular +\r\n                                \" \" +\r\n                                s.placeholder\r\n                            }\r\n                        >\r\n                            {checkLanguageConst(\"Points\", translations)}\r\n                        </div>\r\n                        <input\r\n                            value={item.balls}\r\n                            type=\"text\"\r\n                            className={s.input_set}\r\n                            onChange={(value) =>\r\n                                editBall(value.target.value, index)\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className={s.lin_b}>\r\n                        <div\r\n                            className={\r\n                                GlobalStyle.CustomFontRegular +\r\n                                \" \" +\r\n                                s.placeholder\r\n                            }\r\n                        >\r\n                            {checkLanguageConst(\"Right\", translations)}?\r\n                        </div>\r\n                        <div\r\n                            className={s.button_input_b_}\r\n                            onClick={() => editBox(index)}\r\n                        >\r\n                            <div\r\n                                className={\r\n                                    item.is_status ? s.box_active : s.box\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            <div\r\n                onClick={() => addData()}\r\n                className={\r\n                    GlobalStyle.CustomFontRegular + \" \" + s.button_add_function\r\n                }\r\n            >\r\n                {checkLanguageConst(title_add, translations)}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","export const Tools = [\r\n    {label: 'Рояль', value: 'Рояль'},\r\n    {label: 'Флейта', value: 'Флейта'},\r\n    {label: 'Виолончель', value: 'Виолончель'},\r\n    {label: 'Скрипка', value: 'Скрипка'},\r\n    {label: 'Вокал', value: 'Вокал'},\r\n    {label: 'Арфа', value: 'Арфа'},\r\n    {label: 'Клавесин', value: 'Клавесин'},\r\n    {label: 'Орган', value: 'Орган'},\r\n    {label: 'Гонг', value: 'Гонг'},\r\n    {label: 'Тибетские поющие чаши', value: 'Тибетские поющие чаши'},\r\n    {label: 'Караталы', value: 'Караталы'},\r\n    {label: 'Чакрофоны', value: 'Чакрофоны'},\r\n    {label: 'Шум дождя', value: 'Шум дождя'},\r\n    {label: 'Шум ручья', value: 'Шум ручья'},\r\n    {label: 'Шум океана', value: 'Шум океана'},\r\n    {label: 'Калимба', value: 'Калимба'},\r\n    {label: 'Глюкофон', value: 'Глюкофон'},\r\n    {label: 'Барчаймс', value: 'Барчаймс'},\r\n    {label: 'Колокольчики Коши', value: 'Колокольчики Коши'},\r\n    {label: 'Колокольчики Нада', value: 'Колокольчики Нада'},\r\n    {label: 'Валдайские колокольчики', value: 'Валдайские колокольчики'},\r\n    {label: 'Этническая погремушка', value: 'Этническая погремушка'},\r\n    {label: 'Гитара', value: 'Гитара'},\r\n    {label: 'Контрабас', value: 'Контрабас'},\r\n    {label: 'Симфонический оркестр', value: 'Симфонический оркестр'}\r\n];","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { PostService } from \"../../services/PostService\";\r\nimport { httpServer } from \"../../const\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const FieldFileOpen = ({ label, name, change, value, translations }) => {\r\n    const auth = useContext(AuthContext);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [status, setStatus] = useState(\"upload\");\r\n    const [statusOk, setStatusOk] = useState(false);\r\n    const [statusError, setStatusError] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (value && value.length > 0) setStatus(\"delete\");\r\n        else setStatus(\"upload\");\r\n    }, [value]);\r\n\r\n    const deleteFile = async () => {\r\n        try {\r\n            await request(\r\n                `/api/upload/delete`,\r\n                \"POST\",\r\n                { url: value },\r\n                {\r\n                    Authorization: `${auth.token}`,\r\n                }\r\n            );\r\n            change({ name, value: \"\" });\r\n        } catch (e) {}\r\n    };\r\n\r\n    const openFile = async (event) => {\r\n        if (status === \"delete\") {\r\n            await deleteFile();\r\n            return null;\r\n        }\r\n        setLoader(true);\r\n        setStatusOk(false);\r\n        setStatusError(false);\r\n        try {\r\n            const files = event.target.files[0];\r\n            const data = (await PostService.postUploadVideo(files, auth.token))\r\n                .data;\r\n            setStatusOk(true);\r\n            setTimeout(() => setStatusOk(false), 2500);\r\n            change({ name, value: data });\r\n            setLoader(false);\r\n        } catch (e) {\r\n            setStatusError(true);\r\n            setLoader(false);\r\n        }\r\n    };\r\n    // .replace('\\\\', '/')\r\n    return (\r\n        <div className={s.jin}>\r\n            <div\r\n                style={{\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                }}\r\n            >\r\n                <div\r\n                    className={\r\n                        GlobalStyle.CustomFontRegular + \" \" + s.placeholder\r\n                    }\r\n                >\r\n                    {checkLanguageConst(label, translations)}\r\n                </div>\r\n                <a\r\n                    className={s.button_open}\r\n                    href={`${httpServer}/${value}`}\r\n                    target=\"_blank\"\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular + \" \" + s.placeholder\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\"Open\", translations)}\r\n                    </div>\r\n                </a>\r\n            </div>\r\n            <div className={s.root_file}>\r\n                <input value={value} type=\"text\" className={s.input_file} />\r\n                <div className={s.button_file} onClick={() => openFile()}>\r\n                    {loader ? (\r\n                        <ClipLoader\r\n                            color={ColorsStyles.colorTextError}\r\n                            loading={true}\r\n                            css={s.loader}\r\n                            size={32}\r\n                        />\r\n                    ) : status === \"upload\" ? (\r\n                        <>\r\n                            <input\r\n                                className={s.step}\r\n                                type=\"file\"\r\n                                name=\"myImage\"\r\n                                onChange={(event) => openFile(event)}\r\n                            />\r\n                            <GlobalSvgSelector\r\n                                id={statusOk ? \"ok\" : \"upload\"}\r\n                            />\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <GlobalSvgSelector\r\n                                id={statusOk ? \"ok\" : \"delete\"}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import GlobalStyle from '../GlobalStyle.module.scss';\r\nimport s from '../tableCard/Form.module.scss';\r\nimport React, {useContext, useEffect, useState} from 'react';\r\nimport {GlobalSvgSelector} from '../../assets/icons/global/GlobalSvgSelector';\r\nimport {AuthContext} from '../../context/authContext';\r\nimport {useHttp} from '../../hooks/http.hook';\r\nimport Scrollbars from 'react-custom-scrollbars-2';\r\nimport {checkLanguageConst} from '../../hooks/translashion';\r\n\r\nexport const FieldDropDownList = ({label, name, change, value, url_get_data, valueIn, labelIn, translations}) => {\r\n  const auth = useContext(AuthContext);\r\n  const {request, error, clearError, loading} = useHttp();\r\n  const [status, setStatus] = useState(false);\r\n  const [statusError, setStatusError] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [list, setList] = useState([]);\r\n\r\n  const getList = async () => {\r\n    try {\r\n      const answer = await request(`/api/admin_panel${url_get_data}`, 'GET', null, {\r\n        Authorization: auth.token,\r\n      });\r\n      setList([...answer]);\r\n    } catch (e) {\r\n      console.error('Error-', e);\r\n    }\r\n  };\r\n\r\n  const updateStatusList = () => {\r\n    setStatus((status) => !status);\r\n  };\r\n\r\n  const changeHandler = (value) => {\r\n    change({name, value});\r\n    updateStatusList();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (url_get_data) getList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={s.jin + ' ' + s.marginBottom}>\r\n      <div className={GlobalStyle.CustomFontRegular + ' ' + s.placeholder}>{checkLanguageConst(label, translations)}</div>\r\n      <div className={s.root_file + ' ' + s.drop}>\r\n        <input value={checkLanguageConst(value ? value[labelIn] : 'Select', translations)} type='text' className={s.input_file} />\r\n        <div className={s.button_file} onClick={() => updateStatusList()}>\r\n          <GlobalSvgSelector id={'arrow_button'} />\r\n        </div>\r\n      </div>\r\n      {status && (\r\n        <div className={s.dropList}>\r\n          <Scrollbars style={{width: '100%', height: '100%'}}>\r\n            {list?.map((item) => (\r\n              <div\r\n                key={item[valueIn]}\r\n                className={GlobalStyle.CustomFontRegular + ' ' + s.dropListItem}\r\n                onClick={() => changeHandler(item)}\r\n              >\r\n                {item[labelIn]}\r\n              </div>\r\n            ))}\r\n          </Scrollbars>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport { checkLanguage, checkLanguageConst } from \"../../hooks/translashion\";\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement,\r\n} from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement\r\n);\r\n\r\nexport const FieldStatistics = ({\r\n    label,\r\n    url_get_data,\r\n    id_data,\r\n    translations,\r\n}) => {\r\n    const auth = useContext(AuthContext);\r\n    const [data, setData] = useState(null);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [activeIndex, setActiveIndex] = useState({});\r\n    const labels = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n    ];\r\n\r\n    const [dataGraph, setDataGraph] = useState([]);\r\n\r\n    let dataF = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                // label: \"fff\",\r\n                data: [3, 6, 8, 10, 200],\r\n                backgroundColor: [\"rgba(255, 99, 132, 0.5)\", \"#FFF\", \"red\"],\r\n            },\r\n        ],\r\n    };\r\n\r\n    const getList = async () => {\r\n        try {\r\n            const answer = await request(\r\n                `/api/admin_panel${url_get_data}${id_data}`,\r\n                \"GET\",\r\n                null,\r\n                {\r\n                    Authorization: auth.token,\r\n                }\r\n            );\r\n            setData(answer);\r\n            let dataG = [];\r\n            for (let i = 0; i < answer.length; i++) {\r\n                let lit = {\r\n                    labels: [],\r\n                    datasets: [\r\n                        {\r\n                            data: [],\r\n                            backgroundColor: [],\r\n                        },\r\n                    ],\r\n                };\r\n                for (let j = 0; j < answer[i].result.length; j++) {\r\n                    lit.labels.push(dateToString(answer[i].result[j].date_end));\r\n                    lit.datasets[0].data.push(\r\n                        answer[i].result[j].result?.balls\r\n                    );\r\n                    const color = answer[i].result[j].test?.result?.find(\r\n                        (item) =>\r\n                            item.start_balls <=\r\n                                answer[i].result[j].result?.balls &&\r\n                            answer[i].result[j].result?.balls <= item.end_balls\r\n                    )?.color;\r\n                    lit.datasets[0].backgroundColor.push(\r\n                        color ? color : \"#D9D9D9\"\r\n                    );\r\n                }\r\n                dataG.push(lit);\r\n            }\r\n            setDataGraph(dataG);\r\n        } catch (e) {}\r\n    };\r\n\r\n    useEffect(() => {\r\n        getList();\r\n    }, []);\r\n\r\n    const viewHandler = (index) => {\r\n        let list_index = { ...activeIndex };\r\n        if (list_index[index] !== undefined) {\r\n            list_index[index] = undefined;\r\n        } else {\r\n            list_index[index] = [];\r\n        }\r\n        setActiveIndex({ ...list_index });\r\n    };\r\n\r\n    const viewResult = (index, indexResult) => {\r\n        let list_index = { ...activeIndex };\r\n        const delete_index = list_index[index].indexOf(indexResult);\r\n        if (delete_index !== -1) {\r\n            list_index[index].splice(delete_index, 1);\r\n        } else {\r\n            list_index[index].push(indexResult);\r\n        }\r\n        setActiveIndex({ ...list_index });\r\n    };\r\n\r\n    const dateToString = (date) => {\r\n        date = new Date(date);\r\n\r\n        let day = date.getDate() > 9 ? date.getDate() : `0${date.getDate()}`;\r\n        let month =\r\n            date.getMonth() > 8\r\n                ? date.getMonth() + 1\r\n                : `0${date.getMonth() + 1}`;\r\n        let year = date.getFullYear();\r\n\r\n        return `${day}.${month}.${year}`;\r\n    };\r\n\r\n    // const options = {\r\n    //     plugins: {\r\n    //         title: {\r\n    //             display: true,\r\n    //             text: 'Посещение сайтов',\r\n    //         },\r\n    //         legend: {\r\n    //             display: true,\r\n    //             position: 'bottom',\r\n    //         },\r\n    //     },\r\n    // };\r\n\r\n    const options = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n            },\r\n            title: {\r\n                display: false,\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div className={s.root_statistics}>\r\n            {loading ? (\r\n                <div className={s.popup_button_ok_loader}>\r\n                    <ClipLoader\r\n                        color={ColorsStyles.colorTextError}\r\n                        loading={true}\r\n                        css={s.loader}\r\n                        size={32}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                data?.map((data_view, index_view) => (\r\n                    <div className={s.statisctics_view}>\r\n                        <div\r\n                            className={s.statisctics_result}\r\n                            onClick={() => viewHandler(index_view)}\r\n                        >\r\n                            <GlobalSvgSelector\r\n                                id={\r\n                                    activeIndex[index_view] !== undefined\r\n                                        ? \"arrow_item_bottom\"\r\n                                        : \"arrow_item_right\"\r\n                                }\r\n                            />\r\n                            <div\r\n                                className={\r\n                                    GlobalStyle.CustomFontLite +\r\n                                    \" \" +\r\n                                    s.statisctics_view_label\r\n                                }\r\n                            >\r\n                                {checkLanguage(data_view?.label, auth.language)}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {activeIndex[index_view] !== undefined ? (\r\n                            <>\r\n                                <div className={s.diagramma}>\r\n                                    <Bar\r\n                                        options={options}\r\n                                        data={dataGraph[index_view]}\r\n                                        type={\"bar\"}\r\n                                    />\r\n                                    {/*<Bar type=\"bar\" data={[65, 59, 80, 81, 56, 55, 40]}*/}\r\n                                    {/*    // labels: ['ffff', 'ffff', '66666', 'fff', 'gggg', 'ggg', '5555'],*/}\r\n                                    {/*//     datasets: [{*/}\r\n                                    {/*//         label: 'My First Dataset',*/}\r\n                                    {/*//         data: [65, 59, 80, 81, 56, 55, 40],*/}\r\n                                    {/*//         backgroundColor: [*/}\r\n                                    {/*//             'rgba(255, 99, 132, 0.2)',*/}\r\n                                    {/*//             'rgba(255, 159, 64, 0.2)',*/}\r\n                                    {/*//             'rgba(255, 205, 86, 0.2)',*/}\r\n                                    {/*//             'rgba(75, 192, 192, 0.2)',*/}\r\n                                    {/*//             'rgba(54, 162, 235, 0.2)',*/}\r\n                                    {/*//             'rgba(153, 102, 255, 0.2)',*/}\r\n                                    {/*//             'rgba(201, 203, 207, 0.2)'*/}\r\n                                    {/*//         ],*/}\r\n                                    {/*//         borderColor: [*/}\r\n                                    {/*//             'rgb(255, 99, 132)',*/}\r\n                                    {/*//             'rgb(255, 159, 64)',*/}\r\n                                    {/*//             'rgb(255, 205, 86)',*/}\r\n                                    {/*//             'rgb(75, 192, 192)',*/}\r\n                                    {/*//             'rgb(54, 162, 235)',*/}\r\n                                    {/*//             'rgb(153, 102, 255)',*/}\r\n                                    {/*//             'rgb(201, 203, 207)'*/}\r\n                                    {/*//         ],*/}\r\n                                    {/*//         borderWidth: 1*/}\r\n                                    {/*//     }]*/}\r\n                                    {/*// }}*/}\r\n                                    {/*options={{*/}\r\n                                    {/*    scales: {*/}\r\n                                    {/*        y: {*/}\r\n                                    {/*            beginAtZero: true*/}\r\n                                    {/*        }*/}\r\n                                    {/*    }*/}\r\n                                    {/*}}/>*/}\r\n                                </div>\r\n                                <div className={s.statisctics_view_active}>\r\n                                    {data_view.result?.map(\r\n                                        (result, index_r) => (\r\n                                            <div\r\n                                                className={s.statisctics_block}\r\n                                            >\r\n                                                <div\r\n                                                    className={\r\n                                                        s.statisctics_result\r\n                                                    }\r\n                                                    onClick={() =>\r\n                                                        viewResult(\r\n                                                            index_view,\r\n                                                            index_r\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    <GlobalSvgSelector\r\n                                                        id={\r\n                                                            activeIndex[\r\n                                                                index_view\r\n                                                            ]?.indexOf(\r\n                                                                index_r\r\n                                                            ) !== -1\r\n                                                                ? \"arrow_item_bottom\"\r\n                                                                : \"arrow_item_right\"\r\n                                                        }\r\n                                                    />\r\n                                                    <div\r\n                                                        className={\r\n                                                            GlobalStyle.CustomFontMedium +\r\n                                                            \" \" +\r\n                                                            s.statisctics_label\r\n                                                        }\r\n                                                    >\r\n                                                        {dateToString(\r\n                                                            result?.date_end\r\n                                                        )}{\" \"}\r\n                                                        -{\" \"}\r\n                                                        {result?.result?.balls}{\" \"}\r\n                                                        {checkLanguageConst(\r\n                                                            \"Point\",\r\n                                                            translations\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                                {activeIndex[\r\n                                                    index_view\r\n                                                ].indexOf(index_r) !== -1 ? (\r\n                                                    <div\r\n                                                        className={\r\n                                                            s.root_statistics_item_active\r\n                                                        }\r\n                                                    >\r\n                                                        {result?.data?.map(\r\n                                                            (item, index) => (\r\n                                                                <div\r\n                                                                    className={\r\n                                                                        s.statisctics_item\r\n                                                                    }\r\n                                                                >\r\n                                                                    <div\r\n                                                                        className={\r\n                                                                            GlobalStyle.CustomFontLite +\r\n                                                                            \" \" +\r\n                                                                            s.statisctics_item_text\r\n                                                                        }\r\n                                                                    >\r\n                                                                        {`${checkLanguageConst(\r\n                                                                            \"Question\",\r\n                                                                            translations\r\n                                                                        )} ${\r\n                                                                            index +\r\n                                                                            1\r\n                                                                        }:  ${checkLanguage(\r\n                                                                            item?.question,\r\n                                                                            auth.language\r\n                                                                        )}`}\r\n                                                                    </div>\r\n                                                                    <div\r\n                                                                        className={\r\n                                                                            GlobalStyle.CustomFontLite +\r\n                                                                            \" \" +\r\n                                                                            s.statisctics_item_text\r\n                                                                        }\r\n                                                                    >\r\n                                                                        {`${checkLanguageConst(\r\n                                                                            \"Answer\",\r\n                                                                            translations\r\n                                                                        )} ${\r\n                                                                            index +\r\n                                                                            1\r\n                                                                        }: ${\r\n                                                                            item\r\n                                                                                ?.answer\r\n                                                                                ?.answer\r\n                                                                                ? item\r\n                                                                                      .answer\r\n                                                                                      ?.answer\r\n                                                                                : \"-\"\r\n                                                                        }`}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            )\r\n                                                        )}\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </div>\r\n                                        )\r\n                                    )}\r\n                                </div>\r\n                            </>\r\n                        ) : null}\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { listField } from \"../../constants/OptionsTable\";\r\n\r\nexport const EmptyProps = ({\r\n    name,\r\n    change,\r\n    value,\r\n    additional_functionality,\r\n    id_data,\r\n    st,\r\n    translations,\r\n    lang,\r\n    optionLanguages,\r\n}) => {\r\n    const changeRoot = (value_new) => {\r\n        change({\r\n            name,\r\n            value: { ...value, [value_new.name]: value_new.value },\r\n        });\r\n    };\r\n    return (\r\n        <>\r\n            {additional_functionality?.map((item, index) => {\r\n                return listField({\r\n                    lang,\r\n                    translations,\r\n                    item: item,\r\n                    change: changeRoot,\r\n                    value: value ? value : {},\r\n                    optionLanguages,\r\n                    id_data,\r\n                    st,\r\n                });\r\n            })}\r\n        </>\r\n    );\r\n};\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React from \"react\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const FieldInputSecret = ({\r\n    label,\r\n    name,\r\n    change,\r\n    value,\r\n    translations,\r\n}) => {\r\n    const [status, setStatus] = React.useState(false);\r\n\r\n    return (\r\n        <div className={s.jin}>\r\n            <div\r\n                className={GlobalStyle.CustomFontRegular + \" \" + s.placeholder}\r\n            >\r\n                {checkLanguageConst(label, translations)}\r\n            </div>\r\n            <input\r\n                value={status ? value : \"***\"}\r\n                type=\"email\"\r\n                className={s.input}\r\n                onChange={(value) => {\r\n                    change({ name, value: value.target.value });\r\n                }}\r\n                onClick={() => {\r\n                    if (status) {\r\n                        change({ name, value: \"\" });\r\n                        setStatus(true);\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Scrollbars from \"react-custom-scrollbars-2\";\r\nimport { checkLanguage, checkLanguageConst } from \"../../hooks/translashion\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\n\r\nexport const FieldSelectList = ({\r\n    label,\r\n    name,\r\n    change,\r\n    value,\r\n    url_get_data,\r\n    url_get_selected,\r\n    valueIn,\r\n    labelIn,\r\n    translations,\r\n    leng,\r\n}) => {\r\n    const auth = useContext(AuthContext);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [status, setStatus] = useState(false);\r\n    const [loader, setLoader] = useState(false);\r\n    const [loaderList, setLoadeList] = useState(false);\r\n    const [list, setList] = useState([]);\r\n    const [selected, setSelected] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setList([]);\r\n        setSelected(\"\");\r\n    }, [url_get_selected]);\r\n\r\n    const getSelect = async () => {\r\n        if (value === \"\") return;\r\n        try {\r\n            setLoader(true);\r\n            const answer = await request(\r\n                `/api/admin_panel${url_get_selected}`,\r\n                \"POST\",\r\n                { id: value },\r\n                {\r\n                    Authorization: auth.token,\r\n                }\r\n            );\r\n            setSelected(answer[labelIn]);\r\n            setLoader(false);\r\n        } catch (e) {\r\n            setLoader(false);\r\n        }\r\n    };\r\n\r\n    const getList = async () => {\r\n        if (list.length > 0) return;\r\n        try {\r\n            setLoadeList(true);\r\n            const answer = await request(\r\n                `/api/admin_panel${url_get_data}`,\r\n                \"GET\",\r\n                null,\r\n                {\r\n                    Authorization: auth.token,\r\n                }\r\n            );\r\n            setList(answer);\r\n            setLoadeList(false);\r\n        } catch (e) {\r\n            setLoadeList(false);\r\n        }\r\n    };\r\n\r\n    const updateStatusList = () => {\r\n        setStatus((status) => !status);\r\n        getList();\r\n    };\r\n\r\n    const changeHandler = (value) => {\r\n        // setSelected(value[labelIn]);\r\n        change(value[valueIn]);\r\n        updateStatusList();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (url_get_data) getSelect();\r\n    }, [value]);\r\n\r\n    return (\r\n        <div className={s.jin + \" \" + s.marginBottom}>\r\n            {label ? (\r\n                <div\r\n                    className={\r\n                        GlobalStyle.CustomFontRegular + \" \" + s.placeholder\r\n                    }\r\n                >\r\n                    {checkLanguageConst(label, translations)}\r\n                </div>\r\n            ) : null}\r\n            <div className={s.root_file + \" \" + s.drop}>\r\n                {loader ? (\r\n                    <div className={s.popup_button_ok_loader}>\r\n                        <ClipLoader\r\n                            color={ColorsStyles.colorTextError}\r\n                            loading={true}\r\n                            css={s.loader}\r\n                            size={32}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <input\r\n                        value={\r\n                            selected\r\n                                ? checkLanguage(selected, leng)\r\n                                : checkLanguageConst(\"Select\", translations)\r\n                        }\r\n                        type=\"text\"\r\n                        className={s.input_file}\r\n                    />\r\n                )}\r\n                <div\r\n                    className={s.button_file}\r\n                    onClick={() => updateStatusList()}\r\n                >\r\n                    <GlobalSvgSelector id={\"arrow_button\"} />\r\n                </div>\r\n            </div>\r\n            {status && (\r\n                <div className={s.dropList}>\r\n                    {loaderList ? (\r\n                        <div className={s.popup_button_ok_loader}>\r\n                            <ClipLoader\r\n                                color={ColorsStyles.colorTextError}\r\n                                loading={true}\r\n                                css={s.loader}\r\n                                size={32}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\r\n                            {list?.map((item) => (\r\n                                <div\r\n                                    key={item[valueIn]}\r\n                                    className={\r\n                                        GlobalStyle.CustomFontRegular +\r\n                                        \" \" +\r\n                                        s.dropListItem\r\n                                    }\r\n                                    onClick={() => changeHandler(item)}\r\n                                >\r\n                                    {checkLanguage(item[labelIn], leng)}\r\n                                </div>\r\n                            ))}\r\n                        </Scrollbars>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","import GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport s from \"../tableCard/Form.module.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\nimport { FieldInput } from \"./FielsInput\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\nimport { Lengs } from \"./Lengs\";\r\nimport { FieldSelectList } from \"./FieldSelectList\";\r\n\r\nexport const FieldListCustomLength = ({\r\n    label,\r\n    name,\r\n    change,\r\n    value,\r\n    languages,\r\n    add_data,\r\n    title_add,\r\n    translations,\r\n    lang,\r\n    fields,\r\n}) => {\r\n    const [field, setField] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (value && value.length > 0) {\r\n            setField(value);\r\n        } else {\r\n            setField([]);\r\n        }\r\n    }, [value]);\r\n\r\n    const changeRoot = (value) => {\r\n        change({ name, value });\r\n    };\r\n\r\n    const editValue = (value, index) => {\r\n        let new_data = [...field];\r\n        new_data[index] = value;\r\n        changeRoot(new_data);\r\n    };\r\n\r\n    const addData = () => {\r\n        let new_data = [...field];\r\n        new_data.push(cloneDeep(add_data));\r\n        changeRoot(new_data);\r\n    };\r\n\r\n    const deleteHandler = (index) => {\r\n        let new_data = [...field];\r\n        new_data.splice(index, 1);\r\n        change({ name, value: new_data });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {field?.map((item, index) => (\r\n                <>\r\n                    <div className={s.wrapper_st_s}>\r\n                        <FieldSelectList\r\n                            label={label}\r\n                            name=\"name\"\r\n                            change={(value) => editValue(value, index)}\r\n                            value={item}\r\n                            url_get_data={fields[0].url_get_data}\r\n                            url_get_selected={fields[0].url_get_selected}\r\n                            translations={translations}\r\n                            valueIn={fields[0].valueIn}\r\n                            labelIn={fields[0].labelIn}\r\n                            leng={lang}\r\n                        />\r\n                        <div\r\n                            className={s.button_delet_}\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                deleteHandler(index);\r\n                            }}\r\n                        >\r\n                            <GlobalSvgSelector id=\"clear\" />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            ))}\r\n            <div\r\n                onClick={() => addData()}\r\n                className={\r\n                    GlobalStyle.CustomFontRegular + \" \" + s.button_add_function\r\n                }\r\n            >\r\n                {checkLanguageConst(title_add, translations)}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { FieldInput } from \"../components/form/FielsInput\";\r\nimport { FieldBool } from \"../components/form/FielsBool\";\r\nimport { FieldBox } from \"../components/form/FielsBox\";\r\nimport { FieldDate } from \"../components/form/FielsDate\";\r\nimport { FieldDateFull } from \"../components/form/FielsDateFull\";\r\nimport { FieldFile } from \"../components/form/FielsFile\";\r\nimport { FieldVideo } from \"../components/form/FielsVideo\";\r\nimport { FieldText } from \"../components/form/FielsText\";\r\nimport { FieldTextTranslation } from \"../components/form/FielsTextTranslation\";\r\nimport { FieldFileTranslation } from \"../components/form/FielsFileTranslation\";\r\nimport { FieldInputTranslation } from \"../components/form/FielsInputTranslation\";\r\nimport { FieldDoubleFields } from \"../components/form/FielsDoubleFields\";\r\nimport { FieldTemporaryAccessData } from \"../components/form/FieldTemporaryAccessData\";\r\nimport { FieldListMenu } from \"../components/form/FieldListMenu\";\r\nimport { FieldListAdditionalFunctionality } from \"../components/form/FieldListAdditionalFunctionality\";\r\nimport { FieldInputEditTranslation } from \"../components/form/FieldInputEditTranslation\";\r\nimport { FieldIntervalBallTextTranslation } from \"../components/form/FieldIntervalBallTextTranslation\";\r\nimport { FieldListAnswerBall } from \"../components/form/FieldListAnswerBall\";\r\nimport { Tools } from \"../tools\";\r\nimport { FieldFileOpen } from \"../components/form/FieldFileOpen\";\r\nimport { FieldDropDownList } from \"../components/form/FielsDropDownList\";\r\nimport { FieldStatistics } from \"../components/form/FieldStatistics\";\r\nimport { EmptyProps } from \"../components/form/EmptyProps\";\r\nimport { FieldInputSecret } from \"../components/form/FieldInputSecret\";\r\nimport { FieldListCustomLength } from \"../components/form/FieldListCustomLength\";\r\nimport { FieldSelectList } from \"../components/form/FieldSelectList\";\r\n\r\nexport const listField = ({\r\n  item,\r\n  change,\r\n  value,\r\n  optionLanguages,\r\n  st,\r\n  id_data,\r\n  translations,\r\n  lang,\r\n}) => {\r\n  if (item.type === \"input_secret\")\r\n    return (\r\n      <FieldInputSecret\r\n        lang={lang}\r\n        translations={translations}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"input\")\r\n    return (\r\n      <FieldInput\r\n        lang={lang}\r\n        translations={translations}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"bool\")\r\n    return (\r\n      <FieldBool\r\n        lang={lang}\r\n        translations={translations}\r\n        st={st}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        list_value={item.list_value}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"box\")\r\n    return (\r\n      <FieldBox\r\n        lang={lang}\r\n        translations={translations}\r\n        st={st}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        list_value={item.list_value}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"date\")\r\n    return (\r\n      <FieldDate\r\n        lang={lang}\r\n        translations={translations}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"date_full\")\r\n    return (\r\n      <FieldDateFull\r\n        lang={lang}\r\n        translations={translations}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        isNowDate={item.isNowDate}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"img\")\r\n    return (\r\n      <FieldFile\r\n        lang={lang}\r\n        translations={translations}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"video\")\r\n    return (\r\n      <FieldVideo\r\n        lang={lang}\r\n        translations={translations}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"inputarrea\")\r\n    return (\r\n      <FieldText\r\n        lang={lang}\r\n        translations={translations}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"inputarrea_translation\")\r\n    return (\r\n      <FieldTextTranslation\r\n        lang={lang}\r\n        translations={translations}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"img_translation\")\r\n    return (\r\n      <FieldFileTranslation\r\n        lang={lang}\r\n        translations={translations}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"input_translation\")\r\n    return (\r\n      <FieldInputTranslation\r\n        lang={lang}\r\n        translations={translations}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"double_fields\")\r\n    return (\r\n      <FieldDoubleFields\r\n        lang={lang}\r\n        translations={translations}\r\n        fields={item.fields}\r\n        change={change}\r\n        value={value}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"temporary_access_data\")\r\n    return (\r\n      <FieldTemporaryAccessData\r\n        lang={lang}\r\n        translations={translations}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        url_get_data={item.url_get_data}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"list_menu\")\r\n    return (\r\n      <FieldListMenu\r\n        lang={lang}\r\n        translations={translations}\r\n        id_data={id_data}\r\n        labels={item.labels}\r\n        list_menu_fields={item.list_menu_fields}\r\n        change={change}\r\n        value={value}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"list_additional_functionality\")\r\n    return (\r\n      <FieldListAdditionalFunctionality\r\n        lang={lang}\r\n        wigth_panel={item.wigth_panel}\r\n        translations={translations}\r\n        labelFunc={item.labelFunc}\r\n        placeholder={item.placeholder}\r\n        add_data={item.add_data}\r\n        id_data={id_data}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        url_get_data={item.url_get_data}\r\n        additional_functionality={item.additional_functionality}\r\n        title_add={item.title_add}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"input_edit_translation\")\r\n    return (\r\n      <FieldInputEditTranslation\r\n        lang={lang}\r\n        translations={translations}\r\n        translation={item.translation}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"list_interval_ball_text_translation\")\r\n    return (\r\n      <FieldIntervalBallTextTranslation\r\n        lang={lang}\r\n        translations={translations}\r\n        labels={item.labels}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        languages={optionLanguages}\r\n        add_data={item.add_data}\r\n        title_add={item.title_add}\r\n      />\r\n    );\r\n  if (item.type === \"select_list\")\r\n    return (\r\n      <FieldSelectList\r\n        lang={lang}\r\n        translations={translations}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        url_get_data={item.url_get_data}\r\n        url_get_selected={item.url_get_selected}\r\n        valueIn={item.valueIn}\r\n        labelIn={item.labelIn}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"list_custom_length\")\r\n    // Alex\r\n    return (\r\n      <FieldListCustomLength\r\n        lang={lang}\r\n        translations={translations}\r\n        labels={item.labels}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        languages={optionLanguages}\r\n        add_data={item.add_data}\r\n        title_add={item.title_add}\r\n        fields={item.fields}\r\n      />\r\n    );\r\n  if (item.type === \"list_answer_ball\")\r\n    return (\r\n      <FieldListAnswerBall\r\n        lang={lang}\r\n        translations={translations}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        languages={optionLanguages}\r\n        add_data={item.add_data}\r\n        title_add={item.title_add}\r\n      />\r\n    );\r\n  if (item.type === \"file_open\")\r\n    return (\r\n      <FieldFileOpen\r\n        lang={lang}\r\n        translations={translations}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"drop_down_list\")\r\n    return (\r\n      <FieldDropDownList\r\n        lang={lang}\r\n        translations={translations}\r\n        label={item.label}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        url_get_data={item.url_get_data}\r\n        valueIn={item.valueIn}\r\n        labelIn={item.labelIn}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"statistics\")\r\n    return (\r\n      <FieldStatistics\r\n        lang={lang}\r\n        translations={translations}\r\n        id_data={id_data}\r\n        label={item.label}\r\n        url_get_data={item.url_get_data}\r\n        languages={optionLanguages}\r\n      />\r\n    );\r\n  if (item.type === \"empty_props\")\r\n    return (\r\n      <EmptyProps\r\n        lang={lang}\r\n        translations={translations}\r\n        name={item.value}\r\n        change={change}\r\n        value={value[item.value]}\r\n        additional_functionality={item.additional_functionality}\r\n        id_data={id_data}\r\n        st={st}\r\n        optionLanguages={optionLanguages}\r\n      />\r\n    );\r\n  return null;\r\n};\r\n\r\nconst dateToString = (date) => {\r\n  date = new Date(date);\r\n\r\n  let day = date.getDate() > 9 ? date.getDate() : `0${date.getDate()}`;\r\n  let month =\r\n    date.getMonth() > 8 ? date.getMonth() + 1 : `0${date.getMonth() + 1}`;\r\n  let year = date.getFullYear();\r\n\r\n  return `${day}.${month}.${year}`;\r\n};\r\n\r\nexport const sortNumberFunction = (data) => {\r\n  let new_data = [...data];\r\n  new_data.sort(function (a, b) {\r\n    return a.number - b.number;\r\n  });\r\n  return new_data;\r\n};\r\n\r\nexport const optionUserView = {\r\n  delete_url: \"/delete_user\",\r\n  url: \"/re_user\",\r\n  fields: [\r\n    {\r\n      label: \"Surname\",\r\n      value: \"fullName\",\r\n      type: \"input\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"Name\",\r\n      value: \"name\",\r\n      type: \"input\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"Phone\",\r\n      value: \"telephone\",\r\n      type: \"input\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"E-mail\",\r\n      value: \"email\",\r\n      type: \"input\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"Role\",\r\n      value: \"type_admin\",\r\n      type: \"bool\",\r\n      default: \"\",\r\n      list_value: [\r\n        { label: \"RoleUserValue1\", value: \"Администратор\" },\r\n        { label: \"RoleUserValue2\", value: \"Клиент\" },\r\n        { label: \"RoleUserValue3\", value: \"Музыкотерапевт\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"LevelUser\",\r\n      value: \"access\",\r\n      type: \"bool\",\r\n      default: \"\",\r\n      list_value: [\r\n        { label: \"AccessValue2\", value: \"Гость\" },\r\n        { label: \"AccessValue3\", value: \"Премиум\" },\r\n        { label: \"AccessValue4\", value: \"VIP\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"DateRegistration\",\r\n      value: \"registration_date\",\r\n      type: \"date\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"LoginDate\",\r\n      value: \"date_last_activity\",\r\n      type: \"date\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"NumberDaysActivity\",\r\n      value: \"amount_activity\",\r\n      type: \"input\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"NumberVideosWatched\",\r\n      value: \"counter_video\",\r\n      type: \"input\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"NumberAudioListened\",\r\n      value: \"counter_audio\",\r\n      type: \"input\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"Status\",\r\n      value: \"status\",\r\n      type: \"status\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionUserFin = {\r\n  delete_url: \"/delete_user\",\r\n  url: \"/re_user\",\r\n\r\n  fields: [\r\n    {\r\n      type: \"list_menu\",\r\n      labels: [\"UserTab1\", \"UserTab2\", \"UserTab3\", \"UserTab6\"],\r\n      list_menu_fields: [\r\n        // Информация\r\n        [\r\n          {\r\n            label: \"Surname\",\r\n            value: \"fullName\",\r\n            type: \"input\",\r\n            filter: true,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"Name\",\r\n            value: \"name\",\r\n            type: \"input\",\r\n            filter: true,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"Phone\",\r\n            value: \"telephone\",\r\n            type: \"input\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"E-mail\",\r\n            value: \"email\",\r\n            type: \"input\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"DateRegistration\",\r\n            value: \"registration_date\",\r\n            type: \"date\",\r\n            filter: true,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"LoginDate\",\r\n            value: \"date_last_activity\",\r\n            type: \"date\",\r\n            filter: true,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"Status\",\r\n            value: \"status\",\r\n            type: \"status\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n        ],\r\n        // Анкета\r\n        [\r\n          {\r\n            value: \"questionnaire\",\r\n            type: \"empty_props\",\r\n            default: {},\r\n            additional_functionality: [\r\n              {\r\n                label: \"DateOfBirth\",\r\n                value: \"date_birth\",\r\n                type: \"date_full\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"Gender\",\r\n                value: \"gender\",\r\n                type: \"bool\",\r\n                default: \"\",\r\n                list_value: [\r\n                  { label: \"Male\", value: \"Мужской\" },\r\n                  {\r\n                    label: \"Female\",\r\n                    value: \"Женский\",\r\n                  },\r\n                  {\r\n                    label: \"Null\",\r\n                    value: \"Не указано\",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                label: \"CountryOfBirth\",\r\n                value: \"country_birth\",\r\n                type: \"input\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"CountryOfResidence\",\r\n                value: \"country_residence\",\r\n                type: \"input\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"CurrentCity\",\r\n                value: \"city_residence\",\r\n                type: \"input\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"FavoriteMusic?\",\r\n                value: \"music\",\r\n                type: \"box\",\r\n                default: \"\",\r\n                list_value: [\r\n                  {\r\n                    label: \"FavoriteMusicCategory1\",\r\n                    value: \"Классика\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory2\",\r\n                    value: \"Рок\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory3\",\r\n                    value: \"Поп\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory4\",\r\n                    value: \"Джаз\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory5\",\r\n                    value: \"Рэп\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory6\",\r\n                    value: \"Фольк\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory7\",\r\n                    value: \"Иное\",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                label: \"Nature?\",\r\n                value: \"nature\",\r\n                type: \"bool\",\r\n                default: \"\",\r\n                list_value: [\r\n                  {\r\n                    label: \"NatureCategory1\",\r\n                    value: \"Интраверт\",\r\n                  },\r\n                  {\r\n                    label: \"NatureCategory2\",\r\n                    value: \"Экстраверт\",\r\n                  },\r\n                  {\r\n                    label: \"NatureCategory3\",\r\n                    value: \"Не знаю\",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                label: \"ClassicLevel\",\r\n                value: \"level\",\r\n                type: \"bool\",\r\n                default: \"\",\r\n                list_value: [\r\n                  {\r\n                    label: \"ClassicLevelCategory1\",\r\n                    value: \"0\",\r\n                  },\r\n                  {\r\n                    label: \"ClassicLevelCategory2\",\r\n                    value: \"1\",\r\n                  },\r\n                  {\r\n                    label: \"ClassicLevelCategory3\",\r\n                    value: \"2\",\r\n                  },\r\n                  {\r\n                    label: \"ClassicLevelCategory4\",\r\n                    value: \"3\",\r\n                  },\r\n                  {\r\n                    label: \"ClassicLevelCategory5\",\r\n                    value: \"4\",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                label: \"ActiveLife?\",\r\n                value: \"active_life\",\r\n                type: \"bool\",\r\n                default: \"\",\r\n                list_value: [\r\n                  {\r\n                    label: \"ActiveLifeCategory1\",\r\n                    value: \"Очень активная\",\r\n                  },\r\n                  {\r\n                    label: \"ActiveLifeCategory2\",\r\n                    value: \"Активная\",\r\n                  },\r\n                  {\r\n                    label: \"ActiveLifeCategory3\",\r\n                    value: \"Средняя\",\r\n                  },\r\n                  {\r\n                    label: \"ActiveLifeCategory4\",\r\n                    value: \"Пассивная\",\r\n                  },\r\n                  {\r\n                    label: \"ActiveLifeCategory5\",\r\n                    value: \"Очень пассивная\",\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n        // Статистика\r\n        [\r\n          {\r\n            label: \"\",\r\n            type: \"statistics\",\r\n            url_get_data: \"/get_statistics_test/\",\r\n          },\r\n        ],\r\n        // Заметки\r\n        [\r\n          {\r\n            label: undefined,\r\n            labelFunc: (data) => `${dateToString(data.date)} ${data.label}`,\r\n            placeholder: \"note_writer_name\",\r\n            value: \"notes\",\r\n            type: \"list_additional_functionality\",\r\n            wigth_panel: 850,\r\n            filter: false,\r\n            default: [],\r\n            title_add: \"AddNotes\",\r\n            url_get_data: \"/get_notes/\",\r\n            add_data: {\r\n              date: \"\",\r\n              label: \"\",\r\n              text: \"\",\r\n            },\r\n            additional_functionality: [\r\n              {\r\n                label: \"Date\",\r\n                value: \"date\",\r\n                type: \"date_full\",\r\n                default: \"\",\r\n                isNowDate: true,\r\n              },\r\n              {\r\n                label: \"Theme\",\r\n                value: \"label\",\r\n                type: \"input\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                translation: false,\r\n                label: \"Details\",\r\n                value: \"text\",\r\n                type: \"input_edit_translation\",\r\n                filter: true,\r\n                default: \"\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionCreateUserFin = {\r\n  delete_url: \"/delete_user\",\r\n  url: \"/create_user\",\r\n\r\n  fields: [\r\n    {\r\n      type: \"list_menu\",\r\n      labels: [\"UserTab1\", \"UserTab2\", \"UserTab3\", \"UserTab6\"],\r\n      list_menu_fields: [\r\n        // Информация\r\n        [\r\n          {\r\n            label: \"Surname\",\r\n            value: \"fullName\",\r\n            type: \"input\",\r\n            filter: true,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"Name\",\r\n            value: \"name\",\r\n            type: \"input\",\r\n            filter: true,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"Phone\",\r\n            value: \"telephone\",\r\n            type: \"input\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"E-mail\",\r\n            value: \"email\",\r\n            type: \"input\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"DateRegistration\",\r\n            value: \"registration_date\",\r\n            type: \"date\",\r\n            filter: true,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"LoginDate\",\r\n            value: \"date_last_activity\",\r\n            type: \"date\",\r\n            filter: true,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"Status\",\r\n            value: \"status\",\r\n            type: \"status\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n        ],\r\n        // Анкета\r\n        [\r\n          {\r\n            value: \"questionnaire\",\r\n            type: \"empty_props\",\r\n            default: {},\r\n            additional_functionality: [\r\n              {\r\n                label: \"DateOfBirth\",\r\n                value: \"date_birth\",\r\n                type: \"date_full\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"Gender\",\r\n                value: \"gender\",\r\n                type: \"bool\",\r\n                default: \"\",\r\n                list_value: [\r\n                  { label: \"Male\", value: \"Мужской\" },\r\n                  {\r\n                    label: \"Female\",\r\n                    value: \"Женский\",\r\n                  },\r\n                  {\r\n                    label: \"Null\",\r\n                    value: \"Не указано\",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                label: \"CountryOfBirth\",\r\n                value: \"country_birth\",\r\n                type: \"input\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"CountryOfResidence\",\r\n                value: \"country_residence\",\r\n                type: \"input\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"CurrentCity\",\r\n                value: \"city_residence\",\r\n                type: \"input\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"FavoriteMusic?\",\r\n                value: \"music\",\r\n                type: \"box\",\r\n                default: \"\",\r\n                list_value: [\r\n                  {\r\n                    label: \"FavoriteMusicCategory1\",\r\n                    value: \"Классика\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory2\",\r\n                    value: \"Рок\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory3\",\r\n                    value: \"Поп\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory4\",\r\n                    value: \"Джаз\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory5\",\r\n                    value: \"Рэп\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory6\",\r\n                    value: \"Фольк\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory7\",\r\n                    value: \"Иное\",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                label: \"Nature?\",\r\n                value: \"nature\",\r\n                type: \"bool\",\r\n                default: \"\",\r\n                list_value: [\r\n                  {\r\n                    label: \"NatureCategory1\",\r\n                    value: \"Интраверт\",\r\n                  },\r\n                  {\r\n                    label: \"NatureCategory2\",\r\n                    value: \"Экстраверт\",\r\n                  },\r\n                  {\r\n                    label: \"NatureCategory3\",\r\n                    value: \"Не знаю\",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                label: \"ClassicLevel\",\r\n                value: \"level\",\r\n                type: \"bool\",\r\n                default: \"\",\r\n                list_value: [\r\n                  {\r\n                    label: \"ClassicLevelCategory1\",\r\n                    value: \"0\",\r\n                  },\r\n                  {\r\n                    label: \"ClassicLevelCategory2\",\r\n                    value: \"1\",\r\n                  },\r\n                  {\r\n                    label: \"ClassicLevelCategory3\",\r\n                    value: \"2\",\r\n                  },\r\n                  {\r\n                    label: \"ClassicLevelCategory4\",\r\n                    value: \"3\",\r\n                  },\r\n                  {\r\n                    label: \"ClassicLevelCategory5\",\r\n                    value: \"4\",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                label: \"ActiveLife?\",\r\n                value: \"active_life\",\r\n                type: \"bool\",\r\n                default: \"\",\r\n                list_value: [\r\n                  {\r\n                    label: \"ActiveLifeCategory1\",\r\n                    value: \"Очень активная\",\r\n                  },\r\n                  {\r\n                    label: \"ActiveLifeCategory2\",\r\n                    value: \"Активная\",\r\n                  },\r\n                  {\r\n                    label: \"ActiveLifeCategory3\",\r\n                    value: \"Средняя\",\r\n                  },\r\n                  {\r\n                    label: \"ActiveLifeCategory4\",\r\n                    value: \"Пассивная\",\r\n                  },\r\n                  {\r\n                    label: \"ActiveLifeCategory5\",\r\n                    value: \"Очень пассивная\",\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n        // Пароль\r\n        [\r\n          {\r\n            label: \"Password\",\r\n            value: \"password\",\r\n            type: \"input\",\r\n            default: \"\",\r\n          },\r\n        ],\r\n        // Заметки\r\n        [\r\n          {\r\n            label: undefined,\r\n            labelFunc: (data) => `${dateToString(data.date)} ${data.label}`,\r\n            placeholder: \"note_writer_name\",\r\n            value: \"notes\",\r\n            type: \"list_additional_functionality\",\r\n            wigth_panel: 850,\r\n            filter: false,\r\n            default: [],\r\n            title_add: \"AddNotes\",\r\n            url_get_data: \"/get_notes/\",\r\n            add_data: {\r\n              date: \"\",\r\n              label: \"\",\r\n              text: \"\",\r\n            },\r\n            additional_functionality: [\r\n              {\r\n                label: \"Date\",\r\n                value: \"date\",\r\n                type: \"date_full\",\r\n                default: \"\",\r\n                isNowDate: true,\r\n              },\r\n              {\r\n                label: \"Theme\",\r\n                value: \"label\",\r\n                type: \"input\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                translation: false,\r\n                label: \"Details\",\r\n                value: \"text\",\r\n                type: \"input_edit_translation\",\r\n                filter: true,\r\n                default: \"\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionUser = {\r\n  delete_url: \"/delete_user\",\r\n  url: \"/re_user\",\r\n\r\n  fields: [\r\n    {\r\n      type: \"list_menu\",\r\n      labels: [\r\n        \"UserTab1\",\r\n        \"UserTab2\",\r\n        \"UserTab3\",\r\n        \"UserTab4\",\r\n        \"UserTab5\",\r\n        \"UserTab6\",\r\n      ],\r\n      list_menu_fields: [\r\n        // Информация\r\n        [\r\n          {\r\n            label: \"Surname\",\r\n            value: \"fullName\",\r\n            type: \"input\",\r\n            filter: true,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"Name\",\r\n            value: \"name\",\r\n            type: \"input\",\r\n            filter: true,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"Phone\",\r\n            value: \"telephone\",\r\n            type: \"input\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"E-mail\",\r\n            value: \"email\",\r\n            type: \"input\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"DateRegistration\",\r\n            value: \"registration_date\",\r\n            type: \"date\",\r\n            filter: true,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"LoginDate\",\r\n            value: \"date_last_activity\",\r\n            type: \"date\",\r\n            filter: true,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"Status\",\r\n            value: \"status\",\r\n            type: \"status\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n        ],\r\n        // Анкета\r\n        [\r\n          {\r\n            value: \"questionnaire\",\r\n            type: \"empty_props\",\r\n            default: {},\r\n            additional_functionality: [\r\n              {\r\n                label: \"DateOfBirth\",\r\n                value: \"date_birth\",\r\n                type: \"date_full\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"Gender\",\r\n                value: \"gender\",\r\n                type: \"bool\",\r\n                default: \"\",\r\n                list_value: [\r\n                  { label: \"Male\", value: \"Мужской\" },\r\n                  {\r\n                    label: \"Female\",\r\n                    value: \"Женский\",\r\n                  },\r\n                  {\r\n                    label: \"Null\",\r\n                    value: \"Не указано\",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                label: \"CountryOfBirth\",\r\n                value: \"country_birth\",\r\n                type: \"input\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"CountryOfResidence\",\r\n                value: \"country_residence\",\r\n                type: \"input\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"CurrentCity\",\r\n                value: \"city_residence\",\r\n                type: \"input\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"FavoriteMusic?\",\r\n                value: \"music\",\r\n                type: \"box\",\r\n                default: \"\",\r\n                list_value: [\r\n                  {\r\n                    label: \"FavoriteMusicCategory1\",\r\n                    value: \"Классика\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory2\",\r\n                    value: \"Рок\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory3\",\r\n                    value: \"Поп\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory4\",\r\n                    value: \"Джаз\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory5\",\r\n                    value: \"Рэп\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory6\",\r\n                    value: \"Фольк\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory7\",\r\n                    value: \"Иное\",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                label: \"Nature?\",\r\n                value: \"nature\",\r\n                type: \"bool\",\r\n                default: \"\",\r\n                list_value: [\r\n                  {\r\n                    label: \"NatureCategory1\",\r\n                    value: \"Интраверт\",\r\n                  },\r\n                  {\r\n                    label: \"NatureCategory2\",\r\n                    value: \"Экстраверт\",\r\n                  },\r\n                  {\r\n                    label: \"NatureCategory3\",\r\n                    value: \"Не знаю\",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                label: \"ClassicLevel\",\r\n                value: \"level\",\r\n                type: \"bool\",\r\n                default: \"\",\r\n                list_value: [\r\n                  {\r\n                    label: \"ClassicLevelCategory1\",\r\n                    value: \"0\",\r\n                  },\r\n                  {\r\n                    label: \"ClassicLevelCategory2\",\r\n                    value: \"1\",\r\n                  },\r\n                  {\r\n                    label: \"ClassicLevelCategory3\",\r\n                    value: \"2\",\r\n                  },\r\n                  {\r\n                    label: \"ClassicLevelCategory4\",\r\n                    value: \"3\",\r\n                  },\r\n                  {\r\n                    label: \"ClassicLevelCategory5\",\r\n                    value: \"4\",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                label: \"ActiveLife?\",\r\n                value: \"active_life\",\r\n                type: \"bool\",\r\n                default: \"\",\r\n                list_value: [\r\n                  {\r\n                    label: \"ActiveLifeCategory1\",\r\n                    value: \"Очень активная\",\r\n                  },\r\n                  {\r\n                    label: \"ActiveLifeCategory2\",\r\n                    value: \"Активная\",\r\n                  },\r\n                  {\r\n                    label: \"ActiveLifeCategory3\",\r\n                    value: \"Средняя\",\r\n                  },\r\n                  {\r\n                    label: \"ActiveLifeCategory4\",\r\n                    value: \"Пассивная\",\r\n                  },\r\n                  {\r\n                    label: \"ActiveLifeCategory5\",\r\n                    value: \"Очень пассивная\",\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n        // Пароль\r\n        [\r\n          {\r\n            label: \"Password\",\r\n            value: \"password\",\r\n            type: \"input_secret\",\r\n            default: \"\",\r\n          },\r\n        ],\r\n        // Настройки\r\n        [\r\n          {\r\n            label: \"Languages\",\r\n            value: \"language\",\r\n            type: \"bool\",\r\n            default: \"\",\r\n            list_value: [\r\n              { label: \"Russian\", value: \"ru\" },\r\n              { label: \"English\", value: \"com\" },\r\n            ],\r\n          },\r\n          {\r\n            label: \"RoleUser\",\r\n            value: \"type_admin\",\r\n            type: \"bool\",\r\n            default: \"\",\r\n            list_value: [\r\n              { label: \"RoleUserValue1\", value: \"Администратор\" },\r\n              { label: \"RoleUserValue2\", value: \"Клиент\" },\r\n              {\r\n                label: \"RoleUserValue3\",\r\n                value: \"Музыкотерапевт\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: \"LevelAccess\",\r\n            value: \"access\",\r\n            type: \"bool\",\r\n            default: \"\",\r\n            list_value: [\r\n              { label: \"AccessValue2\", value: \"Гость\" },\r\n              { label: \"AccessValue3\", value: \"Премиум\" },\r\n              { label: \"AccessValue4\", value: \"VIP\" },\r\n            ],\r\n          },\r\n          {\r\n            label: \"CoursesAvailable\",\r\n            value: \"available_courses\",\r\n            type: \"temporary_access_data\",\r\n            url_get_data: \"/courses_mini_list\",\r\n            default: [],\r\n          },\r\n          // {\r\n          //     label: \"AppointedMusicTherapist\",\r\n          //     value: \"musicTherapy\",\r\n          //     valueIn: \"id\",\r\n          //     labelIn: \"name\",\r\n          //     type: \"drop_down_list\",\r\n          //     url_get_data: \"/get_musictherapys\",\r\n          //     default: null,\r\n          // },\r\n          //     ],\r\n          // }\r\n        ],\r\n        // Статистика\r\n        [\r\n          {\r\n            label: \"\",\r\n            type: \"statistics\",\r\n            url_get_data: \"/get_statistics_test/\",\r\n          },\r\n        ],\r\n        // Заметки\r\n        [\r\n          {\r\n            label: undefined,\r\n            labelFunc: (data) => `${dateToString(data.date)} ${data.label}`,\r\n            placeholder: \"note_writer_name\",\r\n            value: \"notes\",\r\n            type: \"list_additional_functionality\",\r\n            wigth_panel: 850,\r\n            filter: false,\r\n            default: [],\r\n            title_add: \"AddNotes\",\r\n            url_get_data: \"/get_notes/\",\r\n            add_data: {\r\n              date: \"\",\r\n              label: \"\",\r\n              text: \"\",\r\n            },\r\n            additional_functionality: [\r\n              {\r\n                label: \"Date\",\r\n                value: \"date\",\r\n                type: \"date_full\",\r\n                default: \"\",\r\n                isNowDate: true,\r\n              },\r\n              {\r\n                label: \"Theme\",\r\n                value: \"label\",\r\n                type: \"input\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                translation: false,\r\n                label: \"Details\",\r\n                value: \"text\",\r\n                type: \"input_edit_translation\",\r\n                filter: true,\r\n                default: \"\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionCreateUser = {\r\n  delete_url: \"/delete_user\",\r\n  url: \"/create_user\",\r\n\r\n  fields: [\r\n    {\r\n      type: \"list_menu\",\r\n      labels: [\r\n        \"UserTab1\",\r\n        \"UserTab2\",\r\n        \"UserTab3\",\r\n        \"UserTab4\",\r\n        \"UserTab5\",\r\n        \"UserTab6\",\r\n      ],\r\n      list_menu_fields: [\r\n        // Информация\r\n        [\r\n          {\r\n            label: \"Surname\",\r\n            value: \"fullName\",\r\n            type: \"input\",\r\n            filter: true,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"Name\",\r\n            value: \"name\",\r\n            type: \"input\",\r\n            filter: true,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"Phone\",\r\n            value: \"telephone\",\r\n            type: \"input\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"E-mail\",\r\n            value: \"email\",\r\n            type: \"input\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"DateRegistration\",\r\n            value: \"registration_date\",\r\n            type: \"date\",\r\n            filter: true,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"LoginDate\",\r\n            value: \"date_last_activity\",\r\n            type: \"date\",\r\n            filter: true,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"Status\",\r\n            value: \"status\",\r\n            type: \"status\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n        ],\r\n        // Анкета\r\n        [\r\n          {\r\n            value: \"questionnaire\",\r\n            type: \"empty_props\",\r\n            default: {},\r\n            additional_functionality: [\r\n              {\r\n                label: \"DateOfBirth\",\r\n                value: \"date_birth\",\r\n                type: \"date_full\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"Gender\",\r\n                value: \"gender\",\r\n                type: \"bool\",\r\n                default: \"\",\r\n                list_value: [\r\n                  { label: \"Male\", value: \"Мужской\" },\r\n                  {\r\n                    label: \"Female\",\r\n                    value: \"Женский\",\r\n                  },\r\n                  {\r\n                    label: \"Null\",\r\n                    value: \"Не указано\",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                label: \"CountryOfBirth\",\r\n                value: \"country_birth\",\r\n                type: \"input\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"CountryOfResidence\",\r\n                value: \"country_residence\",\r\n                type: \"input\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"CurrentCity\",\r\n                value: \"city_residence\",\r\n                type: \"input\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"FavoriteMusic?\",\r\n                value: \"music\",\r\n                type: \"box\",\r\n                default: \"\",\r\n                list_value: [\r\n                  {\r\n                    label: \"FavoriteMusicCategory1\",\r\n                    value: \"Классика\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory2\",\r\n                    value: \"Рок\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory3\",\r\n                    value: \"Поп\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory4\",\r\n                    value: \"Джаз\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory5\",\r\n                    value: \"Рэп\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory6\",\r\n                    value: \"Фольк\",\r\n                  },\r\n                  {\r\n                    label: \"FavoriteMusicCategory7\",\r\n                    value: \"Иное\",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                label: \"Nature?\",\r\n                value: \"nature\",\r\n                type: \"bool\",\r\n                default: \"\",\r\n                list_value: [\r\n                  {\r\n                    label: \"NatureCategory1\",\r\n                    value: \"Интраверт\",\r\n                  },\r\n                  {\r\n                    label: \"NatureCategory2\",\r\n                    value: \"Экстраверт\",\r\n                  },\r\n                  {\r\n                    label: \"NatureCategory3\",\r\n                    value: \"Не знаю\",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                label: \"ClassicLevel\",\r\n                value: \"level\",\r\n                type: \"bool\",\r\n                default: \"\",\r\n                list_value: [\r\n                  {\r\n                    label: \"ClassicLevelCategory1\",\r\n                    value: \"0\",\r\n                  },\r\n                  {\r\n                    label: \"ClassicLevelCategory2\",\r\n                    value: \"1\",\r\n                  },\r\n                  {\r\n                    label: \"ClassicLevelCategory3\",\r\n                    value: \"2\",\r\n                  },\r\n                  {\r\n                    label: \"ClassicLevelCategory4\",\r\n                    value: \"3\",\r\n                  },\r\n                  {\r\n                    label: \"ClassicLevelCategory5\",\r\n                    value: \"4\",\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                label: \"ActiveLife??\",\r\n                value: \"active_life\",\r\n                type: \"bool\",\r\n                default: \"\",\r\n                list_value: [\r\n                  {\r\n                    label: \"ActiveLifeCategory1\",\r\n                    value: \"Очень активная\",\r\n                  },\r\n                  {\r\n                    label: \"ActiveLifeCategory2\",\r\n                    value: \"Активная\",\r\n                  },\r\n                  {\r\n                    label: \"ActiveLifeCategory3\",\r\n                    value: \"Средняя\",\r\n                  },\r\n                  {\r\n                    label: \"ActiveLifeCategory4\",\r\n                    value: \"Пассивная\",\r\n                  },\r\n                  {\r\n                    label: \"ActiveLifeCategory5\",\r\n                    value: \"Очень пассивная\",\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n        // Пароль\r\n        [\r\n          {\r\n            label: \"Password\",\r\n            value: \"password\",\r\n            type: \"input\",\r\n            default: \"\",\r\n          },\r\n        ],\r\n        // Настройки\r\n        [\r\n          {\r\n            label: \"Languages\",\r\n            value: \"language\",\r\n            type: \"bool\",\r\n            default: \"\",\r\n            list_value: [\r\n              { label: \"Russian\", value: \"ru\" },\r\n              { label: \"English\", value: \"com\" },\r\n            ],\r\n          },\r\n          {\r\n            label: \"RoleUser\",\r\n            value: \"type_admin\",\r\n            type: \"bool\",\r\n            default: \"\",\r\n            list_value: [\r\n              { label: \"RoleUserValue1\", value: \"Администратор\" },\r\n              { label: \"RoleUserValue2\", value: \"Клиент\" },\r\n              {\r\n                label: \"RoleUserValue3\",\r\n                value: \"Музыкотерапевт\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            label: \"LevelAccess\",\r\n            value: \"access\",\r\n            type: \"bool\",\r\n            default: \"\",\r\n            list_value: [\r\n              { label: \"AccessValue2\", value: \"Гость\" },\r\n              { label: \"AccessValue3\", value: \"Премиум\" },\r\n              { label: \"AccessValue4\", value: \"VIP\" },\r\n            ],\r\n          },\r\n          {\r\n            label: \"CoursesAvailable\",\r\n            value: \"available_courses\",\r\n            type: \"temporary_access_data\",\r\n            url_get_data: \"/courses_mini_list\",\r\n            default: [],\r\n          },\r\n          //   {\r\n          //     label: \"AppointedMusicTherapist\",\r\n          //     value: \"musicTherapy\",\r\n          //     valueIn: \"id\",\r\n          //     labelIn: \"name\",\r\n          //     type: \"drop_down_list\",\r\n          //     url_get_data: \"/get_musictherapys\",\r\n          //     default: null,\r\n          //   },\r\n          //     ],\r\n          // }\r\n        ],\r\n        // Статистика\r\n        [\r\n          {\r\n            label: \"\",\r\n            type: \"statistics\",\r\n            url_get_data: \"/get_statistics_test/\",\r\n          },\r\n        ],\r\n        // Заметки\r\n        [\r\n          {\r\n            label: undefined,\r\n            labelFunc: (data) => `${dateToString(data.date)} ${data.label}`,\r\n            placeholder: \"note_writer_name\",\r\n            value: \"notes\",\r\n            type: \"list_additional_functionality\",\r\n            wigth_panel: 850,\r\n            filter: false,\r\n            default: [],\r\n            title_add: \"AddNotes\",\r\n            url_get_data: \"/get_notes/\",\r\n            add_data: {\r\n              date: \"\",\r\n              label: \"\",\r\n              text: \"\",\r\n            },\r\n            additional_functionality: [\r\n              {\r\n                label: \"Date\",\r\n                value: \"date\",\r\n                type: \"date_full\",\r\n                default: \"\",\r\n                isNowDate: true,\r\n              },\r\n              {\r\n                label: \"Theme\",\r\n                value: \"label\",\r\n                type: \"input\",\r\n                default: \"\",\r\n              },\r\n              {\r\n                translation: false,\r\n                label: \"Details\",\r\n                value: \"text\",\r\n                type: \"input_edit_translation\",\r\n                filter: true,\r\n                default: \"\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionUserCreate = {\r\n  delete_url: \"/delete_user\",\r\n  url: \"/create_user\",\r\n  fields: [\r\n    {\r\n      label: \"Surname\",\r\n      value: \"fullName\",\r\n      type: \"input\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"Name\",\r\n      value: \"name\",\r\n      type: \"input\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"Phone\",\r\n      value: \"telephone\",\r\n      type: \"input\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"E-mail\",\r\n      value: \"email\",\r\n      type: \"input\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"DateRegistration\",\r\n      value: \"registration_date\",\r\n      type: \"date\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"LoginDate\",\r\n      value: \"date_last_activity\",\r\n      type: \"date\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"Status\",\r\n      value: \"status\",\r\n      type: \"status\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionLanguages = [\r\n  {\r\n    label: \"rus\",\r\n    value: \"ru\",\r\n  },\r\n  {\r\n    label: \"eng\",\r\n    value: \"com\",\r\n  },\r\n];\r\n\r\nexport const optionVersion = {\r\n  url: \"/re_version\",\r\n  fields: [\r\n    {\r\n      label: \"CurrentVersion\",\r\n      value: \"version\",\r\n      type: \"input\",\r\n      default: \"\",\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"TextUpdate\",\r\n      value: \"label\",\r\n      type: \"input_translation\",\r\n      filter: true,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionTranslation = {\r\n  url: \"/translation_list_edit\",\r\n  fields: [\r\n    {\r\n      label: \"JsonFile\",\r\n      value: \"translations_app\",\r\n      type: \"file_open\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionTranslationAdmin = {\r\n  url: \"/translation_list_edit\",\r\n  fields: [\r\n    {\r\n      label: \"JsonFile\",\r\n      value: \"translations_admin\",\r\n      type: \"file_open\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionPlaylist = {\r\n  delete_url: \"/delete_playlist\",\r\n  url: \"/playlist_re\",\r\n  fields: [\r\n    {\r\n      label: \"Languages\",\r\n      value: \"language\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: [\r\n        { label: \"Russian\", value: \"ru\" },\r\n        { label: \"English\", value: \"com\" },\r\n      ],\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"Label\",\r\n      value: \"label\",\r\n      type: \"input_translation\",\r\n      filter: true,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"NumberAudio\",\r\n      value: \"audio_l\",\r\n      type: \"input\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"NumberVideo\",\r\n      value: \"video_l\",\r\n      type: \"input\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"NumberLaunches\",\r\n      value: \"counter_start\",\r\n      type: \"input\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionCreatePlaylist = {\r\n  delete_url: \"/delete_playlist\",\r\n  url: \"/playlist_re\",\r\n  fields: [\r\n    {\r\n      type: \"list_menu\",\r\n      settings: {\r\n        access: {\r\n          status: true,\r\n          root: \"\",\r\n        },\r\n      },\r\n      labels: [\"PlaylistTab1\", \"PlaylistTab2\", \"PlaylistTab3\"],\r\n      list_menu_fields: [\r\n        // Общие настройки\r\n        [\r\n          {\r\n            type: \"double_fields\",\r\n            fields: [\r\n              {\r\n                label: \"Languages\",\r\n                value: \"language\",\r\n                type: \"box\",\r\n                filter: true,\r\n                default: [],\r\n                list_value: [\r\n                  { label: \"Russian\", value: \"ru\" },\r\n                  { label: \"English\", value: \"com\" },\r\n                ],\r\n              },\r\n              {\r\n                label: \"Access\",\r\n                value: \"access\",\r\n                type: \"box\",\r\n                filter: true,\r\n                default: [],\r\n                list_value: [\r\n                  { label: \"AccessValue2\", value: \"Гость\" },\r\n                  { label: \"AccessValue3\", value: \"Премиум\" },\r\n                  { label: \"AccessValue4\", value: \"VIP\" },\r\n                  {\r\n                    label: \"AccessValue5\",\r\n                    value: \"custom\",\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            translation: true,\r\n            label: \"Label\",\r\n            value: \"label\",\r\n            type: \"input_translation\",\r\n            filter: true,\r\n            default: [\r\n              { language: \"ru\", value: \"\" },\r\n              { language: \"com\", value: \"\" },\r\n            ],\r\n          },\r\n          {\r\n            translation: true,\r\n            label: \"Description\",\r\n            value: \"text\",\r\n            type: \"input_translation\",\r\n            filter: true,\r\n            default: [\r\n              { language: \"ru\", value: \"\" },\r\n              { language: \"com\", value: \"\" },\r\n            ],\r\n          },\r\n          {\r\n            label: \"PicturePreview\",\r\n            value: \"poster\",\r\n            type: \"img\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n          {\r\n            label: \"RunningAudio\",\r\n            value: \"type_start\",\r\n            type: \"bool\",\r\n            filter: false,\r\n            default: \"consistently\",\r\n            list_value: [\r\n              {\r\n                label: \"RunningAudioValue1\",\r\n                value: \"consistently\",\r\n              },\r\n              {\r\n                label: \"RunningAudioValue2\",\r\n                value: \"arbitrarily\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n        // Аудио\r\n        [\r\n          {\r\n            translation: true,\r\n            label: \"№\",\r\n            fields: [\r\n              {\r\n                valueIn: \"_id\",\r\n                labelIn: \"label\",\r\n                url_get_data: \"/get_audio_to_playlist\",\r\n                type: \"select_list\",\r\n                url_get_selected: \"/get_audio_label_to_id\",\r\n                default: null,\r\n              },\r\n            ],\r\n            value: \"ids_audio\",\r\n            title_add: \"AddAudio\",\r\n            type: \"list_custom_length\",\r\n            filter: false,\r\n            add_data: \"\",\r\n            default: [],\r\n          },\r\n        ],\r\n        // Видео\r\n        [\r\n          {\r\n            translation: true,\r\n            label: \"№\",\r\n            fields: [\r\n              {\r\n                valueIn: \"_id\",\r\n                labelIn: \"label_\",\r\n                url_get_data: \"/get_video_to_playlist\",\r\n                type: \"select_list\",\r\n                url_get_selected: \"/get_video_label_to_id\",\r\n                default: null,\r\n              },\r\n            ],\r\n            value: \"ids_video\",\r\n            title_add: \"AddVideo\",\r\n            type: \"list_custom_length\",\r\n            filter: false,\r\n            add_data: \"\",\r\n            default: [],\r\n          },\r\n        ],\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionCustomAccess = [\r\n  {\r\n    translation: false,\r\n    label: \"CustomAccess\",\r\n    fields: [\r\n      {\r\n        valueIn: \"id\",\r\n        labelIn: \"name\",\r\n        type: \"select_list\",\r\n        url_get_data: \"/get_users_to_access\",\r\n        url_get_selected: \"/get_users_name_to_id\",\r\n        default: null,\r\n      },\r\n    ],\r\n    value: \"custom_access\",\r\n    title_add: \"AddUser\",\r\n    type: \"list_custom_length\",\r\n    filter: false,\r\n    add_data: \"\",\r\n    default: [],\r\n  },\r\n];\r\n\r\nexport const optionCreateCourses = {\r\n  delete_url: \"/delete_course\",\r\n  url: \"/create_course\",\r\n\r\n  fields: [\r\n    {\r\n      type: \"list_menu\",\r\n      labels: [\"CourseTab1\", \"CourseTab2\", \"CourseTab3\"],\r\n      list_menu_fields: [\r\n        // Общие настройки\r\n        [\r\n          {\r\n            type: \"double_fields\",\r\n            fields: [\r\n              {\r\n                label: \"Languages\",\r\n                value: \"language\",\r\n                type: \"box\",\r\n                filter: true,\r\n                default: [],\r\n                list_value: [\r\n                  { label: \"Russian\", value: \"ru\" },\r\n                  { label: \"English\", value: \"com\" },\r\n                ],\r\n              },\r\n              {\r\n                label: \"Access\",\r\n                value: \"access\",\r\n                type: \"box\",\r\n                filter: true,\r\n                default: [],\r\n                list_value: [\r\n                  { label: \"AccessValue2\", value: \"Гость\" },\r\n                  { label: \"AccessValue3\", value: \"Премиум\" },\r\n                  { label: \"AccessValue4\", value: \"VIP\" },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            translation: true,\r\n            label: \"Label\",\r\n            value: \"label\",\r\n            type: \"input_translation\",\r\n            filter: true,\r\n            default: [\r\n              { language: \"ru\", value: \"\" },\r\n              { language: \"com\", value: \"\" },\r\n            ],\r\n          },\r\n          {\r\n            label: \"PicturePreview\",\r\n            value: \"poster\",\r\n            type: \"img\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n          {\r\n            translation: true,\r\n            label: \"Description\",\r\n            value: \"description\",\r\n            type: \"inputarrea_translation\",\r\n            filter: false,\r\n            default: [\r\n              { language: \"ru\", value: \"\" },\r\n              { language: \"com\", value: \"\" },\r\n            ],\r\n          },\r\n          {\r\n            translation: true,\r\n            label: \"Instructions\",\r\n            value: \"instruction\",\r\n            type: \"inputarrea_translation\",\r\n            filter: false,\r\n            default: [\r\n              { language: \"ru\", value: \"\" },\r\n              { language: \"com\", value: \"\" },\r\n            ],\r\n          },\r\n        ],\r\n        // Уроки\r\n        [\r\n          {\r\n            label: \"№\",\r\n            value: \"lessons\",\r\n            type: \"list_additional_functionality\",\r\n            wigth_panel: 850,\r\n            filter: false,\r\n            default: [],\r\n            title_add: \"AddLesson\",\r\n            url_get_data: \"/lessons_course/\",\r\n            add_data: {\r\n              label: [\r\n                { language: \"ru\", value: \"\" },\r\n                { language: \"com\", value: \"\" },\r\n              ],\r\n              video: \"\",\r\n              text: [\r\n                { language: \"ru\", value: \"\" },\r\n                { language: \"com\", value: \"\" },\r\n              ],\r\n            },\r\n            additional_functionality: [\r\n              {\r\n                translation: true,\r\n                label: \"LessonTopic\",\r\n                value: \"label\",\r\n                type: \"input_translation\",\r\n                filter: true,\r\n                default: [\r\n                  { language: \"ru\", value: \"\" },\r\n                  { language: \"com\", value: \"\" },\r\n                ],\r\n              },\r\n              {\r\n                label: \"PicturePreview\",\r\n                value: \"poster\",\r\n                type: \"img\",\r\n                filter: false,\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"VideoLesson\",\r\n                value: \"video\",\r\n                type: \"video\",\r\n                filter: false,\r\n                default: \"\",\r\n              },\r\n              {\r\n                translation: true,\r\n                label: \"TextLesson\",\r\n                value: \"text\",\r\n                type: \"input_edit_translation\",\r\n                filter: true,\r\n                default: [\r\n                  { language: \"ru\", value: \"\" },\r\n                  { language: \"com\", value: \"\" },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n        // Результат\r\n        [\r\n          {\r\n            translation: true,\r\n            label: \"TextResultCourse\",\r\n            value: \"result_text\",\r\n            type: \"inputarrea_translation\",\r\n            filter: false,\r\n            default: [\r\n              { language: \"ru\", value: \"\" },\r\n              { language: \"com\", value: \"\" },\r\n            ],\r\n          },\r\n        ],\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionCreateTests = {\r\n  delete_url: \"/delete_test\",\r\n  url: \"/create_test\",\r\n  fields: [\r\n    {\r\n      type: \"list_menu\",\r\n      labels: [\"TestTab1\", \"TestTab2\", \"TestTab3\"],\r\n      list_menu_fields: [\r\n        // Общие настройки\r\n        [\r\n          {\r\n            type: \"double_fields\",\r\n            fields: [\r\n              {\r\n                label: \"Languages\",\r\n                value: \"language\",\r\n                type: \"box\",\r\n                filter: true,\r\n                default: [],\r\n                list_value: [\r\n                  { label: \"Russian\", value: \"ru\" },\r\n                  { label: \"English\", value: \"com\" },\r\n                ],\r\n              },\r\n              {\r\n                label: \"Access\",\r\n                value: \"access\",\r\n                type: \"box\",\r\n                filter: true,\r\n                default: [],\r\n                list_value: [\r\n                  { label: \"AccessValue2\", value: \"Гость\" },\r\n                  { label: \"AccessValue3\", value: \"Премиум\" },\r\n                  { label: \"AccessValue4\", value: \"VIP\" },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            translation: true,\r\n            label: \"Label\",\r\n            value: \"label\",\r\n            type: \"input_translation\",\r\n            filter: true,\r\n            default: [\r\n              { language: \"ru\", value: \"\" },\r\n              { language: \"com\", value: \"\" },\r\n            ],\r\n          },\r\n          {\r\n            label: \"PicturePreview\",\r\n            value: \"poster\",\r\n            type: \"img\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n          {\r\n            translation: true,\r\n            label: \"Description\",\r\n            value: \"description\",\r\n            type: \"inputarrea_translation\",\r\n            filter: false,\r\n            default: [\r\n              { language: \"ru\", value: \"\" },\r\n              { language: \"com\", value: \"\" },\r\n            ],\r\n          },\r\n          {\r\n            translation: true,\r\n            label: \"Instructions\",\r\n            value: \"instruction\",\r\n            type: \"inputarrea_translation\",\r\n            filter: false,\r\n            default: [\r\n              { language: \"ru\", value: \"\" },\r\n              { language: \"com\", value: \"\" },\r\n            ],\r\n          },\r\n        ],\r\n        // Вопросы\r\n        [\r\n          {\r\n            label: \"№\",\r\n            value: \"questions\",\r\n            type: \"list_additional_functionality\",\r\n            wigth_panel: 850,\r\n            filter: false,\r\n            default: [],\r\n            title_add: \"AddQuestion\",\r\n            url_get_data: \"/questions_test/\",\r\n            add_data: {\r\n              label: [\r\n                { language: \"ru\", value: \"\" },\r\n                { language: \"com\", value: \"\" },\r\n              ],\r\n              img: \"\",\r\n              question: [\r\n                { language: \"ru\", value: \"\" },\r\n                { language: \"com\", value: \"\" },\r\n              ],\r\n              answers: [{ label: \"\", balls: \"\", is_status: false }],\r\n            },\r\n            additional_functionality: [\r\n              {\r\n                translation: true,\r\n                label: \"EssenceQuestion\",\r\n                value: \"label\",\r\n                type: \"input_translation\",\r\n                filter: true,\r\n                default: [\r\n                  { language: \"ru\", value: \"\" },\r\n                  { language: \"com\", value: \"\" },\r\n                ],\r\n              },\r\n              {\r\n                label: \"PictureQuestion\",\r\n                value: \"img\",\r\n                type: \"img\",\r\n                filter: false,\r\n                default: \"\",\r\n              },\r\n              {\r\n                translation: true,\r\n                label: \"QuestionWording\",\r\n                value: \"question\",\r\n                type: \"input_edit_translation\",\r\n                filter: true,\r\n                default: [\r\n                  { language: \"ru\", value: \"\" },\r\n                  { language: \"com\", value: \"\" },\r\n                ],\r\n              },\r\n              {\r\n                translation: true,\r\n                label: \"\",\r\n                value: \"answers\",\r\n                type: \"list_answer_ball\",\r\n                title_add: \"AddAnswerPption\",\r\n                filter: true,\r\n                add_data: {\r\n                  label: \"\",\r\n                  balls: \"\",\r\n                  is_status: false,\r\n                },\r\n                default: [{ label: \"\", balls: \"\", is_status: false }],\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n        // Результат\r\n        [\r\n          {\r\n            translation: true,\r\n            label: \"\",\r\n            labels: [\"PointsFromTo\", \"Explanation\", \"ColorCode\"],\r\n            value: \"result\",\r\n            title_add: \"AddResultOption\",\r\n            type: \"list_interval_ball_text_translation\",\r\n            filter: false,\r\n            add_data: {\r\n              start_balls: \"\",\r\n              end_balls: \"\",\r\n              description: [\r\n                { language: \"ru\", value: \"\" },\r\n                { language: \"com\", value: \"\" },\r\n              ],\r\n              color: \"\",\r\n            },\r\n            default: [],\r\n          },\r\n        ],\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionEditCourses = {\r\n  delete_url: \"/delete_course\",\r\n  url: \"/re_course\",\r\n  fields: [\r\n    {\r\n      type: \"list_menu\",\r\n      labels: [\"CourseTab1\", \"CourseTab2\", \"CourseTab3\"],\r\n      list_menu_fields: [\r\n        // Общие настройки\r\n        [\r\n          {\r\n            type: \"double_fields\",\r\n            fields: [\r\n              {\r\n                label: \"Languages\",\r\n                value: \"language\",\r\n                type: \"box\",\r\n                filter: true,\r\n                default: [],\r\n                list_value: [\r\n                  { label: \"Russian\", value: \"ru\" },\r\n                  { label: \"English\", value: \"com\" },\r\n                ],\r\n              },\r\n              {\r\n                label: \"Access\",\r\n                value: \"access\",\r\n                type: \"box\",\r\n                filter: true,\r\n                default: [],\r\n                list_value: [\r\n                  { label: \"AccessValue2\", value: \"Гость\" },\r\n                  { label: \"AccessValue3\", value: \"Премиум\" },\r\n                  { label: \"AccessValue4\", value: \"VIP\" },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            translation: true,\r\n            label: \"Label\",\r\n            value: \"label\",\r\n            type: \"input_translation\",\r\n            filter: true,\r\n            default: [\r\n              { language: \"ru\", value: \"\" },\r\n              { language: \"com\", value: \"\" },\r\n            ],\r\n          },\r\n          {\r\n            label: \"PicturePreview\",\r\n            value: \"poster\",\r\n            type: \"img\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n          {\r\n            translation: true,\r\n            label: \"Description\",\r\n            value: \"description\",\r\n            type: \"inputarrea_translation\",\r\n            filter: false,\r\n            default: [\r\n              { language: \"ru\", value: \"\" },\r\n              { language: \"com\", value: \"\" },\r\n            ],\r\n          },\r\n          {\r\n            translation: true,\r\n            label: \"Instructions\",\r\n            value: \"instruction\",\r\n            type: \"inputarrea_translation\",\r\n            filter: false,\r\n            default: [\r\n              { language: \"ru\", value: \"\" },\r\n              { language: \"com\", value: \"\" },\r\n            ],\r\n          },\r\n        ],\r\n        // Уроки\r\n        [\r\n          {\r\n            label: \"№\",\r\n            value: \"lessons\",\r\n            type: \"list_additional_functionality\",\r\n            wigth_panel: 850,\r\n            filter: false,\r\n            default: [],\r\n            title_add: \"AddLesson\",\r\n            url_get_data: \"/lessons_course/\",\r\n            add_data: {\r\n              label: [\r\n                { language: \"ru\", value: \"\" },\r\n                { language: \"com\", value: \"\" },\r\n              ],\r\n              video: \"\",\r\n              text: [\r\n                { language: \"ru\", value: \"\" },\r\n                { language: \"com\", value: \"\" },\r\n              ],\r\n            },\r\n            additional_functionality: [\r\n              {\r\n                translation: true,\r\n                label: \"LessonTopic\",\r\n                value: \"label\",\r\n                type: \"input_translation\",\r\n                filter: true,\r\n                default: [\r\n                  { language: \"ru\", value: \"\" },\r\n                  { language: \"com\", value: \"\" },\r\n                ],\r\n              },\r\n              {\r\n                label: \"PicturePreview\",\r\n                value: \"poster\",\r\n                type: \"img\",\r\n                filter: false,\r\n                default: \"\",\r\n              },\r\n              {\r\n                label: \"VideoLesson\",\r\n                value: \"video\",\r\n                type: \"video\",\r\n                filter: false,\r\n                default: \"\",\r\n              },\r\n              {\r\n                translation: true,\r\n                label: \"TextLesson\",\r\n                value: \"text\",\r\n                type: \"input_edit_translation\",\r\n                filter: true,\r\n                default: [\r\n                  { language: \"ru\", value: \"\" },\r\n                  { language: \"com\", value: \"\" },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n        // Результат\r\n        [\r\n          {\r\n            translation: true,\r\n            label: \"TextResultCourse\",\r\n            value: \"result_text\",\r\n            type: \"inputarrea_translation\",\r\n            filter: false,\r\n            default: [\r\n              { language: \"ru\", value: \"\" },\r\n              { language: \"com\", value: \"\" },\r\n            ],\r\n          },\r\n        ],\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionEditLangs = {\r\n  delete_url: \"/translation_del\",\r\n  url: \"/translation_create\",\r\n  fields: [\r\n    {\r\n      label: \"NameLanguage\",\r\n      value: \"name\",\r\n      type: \"input\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"CodeLanguage\",\r\n      value: \"code\",\r\n      type: \"input\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionEditTests = {\r\n  delete_url: \"/delete_test\",\r\n  url: \"/re_test\",\r\n  fields: [\r\n    {\r\n      type: \"list_menu\",\r\n      labels: [\"TestTab1\", \"TestTab2\", \"TestTab3\"],\r\n      list_menu_fields: [\r\n        // Общие настройки\r\n        [\r\n          {\r\n            type: \"double_fields\",\r\n            fields: [\r\n              {\r\n                label: \"Languages\",\r\n                value: \"language\",\r\n                type: \"box\",\r\n                filter: true,\r\n                default: [],\r\n                list_value: [\r\n                  { label: \"Russian\", value: \"ru\" },\r\n                  { label: \"English\", value: \"com\" },\r\n                ],\r\n              },\r\n              {\r\n                label: \"Access\",\r\n                value: \"access\",\r\n                type: \"box\",\r\n                filter: true,\r\n                default: [],\r\n                list_value: [\r\n                  { label: \"AccessValue2\", value: \"Гость\" },\r\n                  { label: \"AccessValue3\", value: \"Премиум\" },\r\n                  { label: \"AccessValue4\", value: \"VIP\" },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            translation: true,\r\n            label: \"Label\",\r\n            value: \"label\",\r\n            type: \"input_translation\",\r\n            filter: true,\r\n            default: [\r\n              { language: \"ru\", value: \"\" },\r\n              { language: \"com\", value: \"\" },\r\n            ],\r\n          },\r\n          {\r\n            label: \"PicturePreview\",\r\n            value: \"poster\",\r\n            type: \"img\",\r\n            filter: false,\r\n            default: \"\",\r\n          },\r\n          {\r\n            translation: true,\r\n            label: \"Description\",\r\n            value: \"description\",\r\n            type: \"inputarrea_translation\",\r\n            filter: false,\r\n            default: [\r\n              { language: \"ru\", value: \"\" },\r\n              { language: \"com\", value: \"\" },\r\n            ],\r\n          },\r\n          {\r\n            translation: true,\r\n            label: \"Instructions\",\r\n            value: \"instruction\",\r\n            type: \"inputarrea_translation\",\r\n            filter: false,\r\n            default: [\r\n              { language: \"ru\", value: \"\" },\r\n              { language: \"com\", value: \"\" },\r\n            ],\r\n          },\r\n        ],\r\n        // Вопросы\r\n        [\r\n          {\r\n            label: \"№\",\r\n            value: \"questions\",\r\n            type: \"list_additional_functionality\",\r\n            wigth_panel: 850,\r\n            filter: false,\r\n            default: [],\r\n            title_add: \"AddQuestion\",\r\n            url_get_data: \"/questions_test/\",\r\n            add_data: {\r\n              label: [\r\n                { language: \"ru\", value: \"\" },\r\n                { language: \"com\", value: \"\" },\r\n              ],\r\n              img: \"\",\r\n              question: [\r\n                { language: \"ru\", value: \"\" },\r\n                { language: \"com\", value: \"\" },\r\n              ],\r\n              answers: [{ label: \"\", balls: \"\", is_status: false }],\r\n            },\r\n            additional_functionality: [\r\n              {\r\n                translation: true,\r\n                label: \"EssenceQuestion\",\r\n                value: \"label\",\r\n                type: \"input_translation\",\r\n                filter: true,\r\n                default: [\r\n                  { language: \"ru\", value: \"\" },\r\n                  { language: \"com\", value: \"\" },\r\n                ],\r\n              },\r\n              {\r\n                label: \"PictureQuestion\",\r\n                value: \"img\",\r\n                type: \"img\",\r\n                filter: false,\r\n                default: \"\",\r\n              },\r\n              {\r\n                translation: true,\r\n                label: \"QuestionWording\",\r\n                value: \"question\",\r\n                type: \"input_edit_translation\",\r\n                filter: true,\r\n                default: [\r\n                  { language: \"ru\", value: \"\" },\r\n                  { language: \"com\", value: \"\" },\r\n                ],\r\n              },\r\n              {\r\n                translation: true,\r\n                label: \"\",\r\n                value: \"answers\",\r\n                type: \"list_answer_ball\",\r\n                title_add: \"AddAnswerPption\",\r\n                filter: true,\r\n                add_data: {\r\n                  label: \"\",\r\n                  balls: \"\",\r\n                  is_status: false,\r\n                },\r\n                default: [{ label: \"\", balls: \"\", is_status: false }],\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n        // Результат\r\n        [\r\n          {\r\n            translation: true,\r\n            label: \"\",\r\n            labels: [\"PointsFromTo\", \"Explanation\", \"ColorCode\"],\r\n            value: \"result\",\r\n            title_add: \"AddResultOption\",\r\n            type: \"list_interval_ball_text_translation\",\r\n            filter: false,\r\n            add_data: {\r\n              start_balls: \"\",\r\n              end_balls: \"\",\r\n              description: [\r\n                { language: \"ru\", value: \"\" },\r\n                { language: \"com\", value: \"\" },\r\n              ],\r\n              color: \"\",\r\n            },\r\n            default: [],\r\n          },\r\n        ],\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionTests = {\r\n  delete_url: \"/delete_test\",\r\n  url: \"/re_test\",\r\n  fields: [\r\n    {\r\n      label: \"Languages\",\r\n      value: \"language\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: [\r\n        { label: \"Russian\", value: \"ru\" },\r\n        { label: \"English\", value: \"com\" },\r\n      ],\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"Label\",\r\n      value: \"label\",\r\n      type: \"input_translation\",\r\n      filter: true,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"NumberPasses\",\r\n      value: \"info_tooltip\",\r\n      value_tooltip: \"number_passes_tooltip\",\r\n      type: \"input_tooltip_test\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"NumberQuestions\",\r\n      value: \"length_questions\",\r\n      type: \"input\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionCourses = {\r\n  delete_url: \"/delete_course\",\r\n  url: \"/re_course\",\r\n  fields: [\r\n    {\r\n      label: \"Languages\",\r\n      value: \"language\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: [\r\n        { label: \"Russian\", value: \"ru\" },\r\n        { label: \"English\", value: \"com\" },\r\n      ],\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"Label\",\r\n      value: \"label\",\r\n      type: \"input_translation\",\r\n      filter: true,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"NumberPasses\",\r\n      value: \"info_tooltip\",\r\n      value_tooltip: \"number_passes_tooltip\",\r\n      type: \"input_tooltip_course\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"NumberLessons\",\r\n      value: \"length_lessons\",\r\n      type: \"input\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionPoster = {\r\n  delete_url: \"/delete_live_sound\",\r\n  url: \"/re_live_sound\",\r\n  fields: [\r\n    {\r\n      label: \"Languages\",\r\n      value: \"language\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: [\r\n        { label: \"Russian\", value: \"ru\" },\r\n        { label: \"English\", value: \"com\" },\r\n      ],\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"Label\",\r\n      value: \"label_\",\r\n      type: \"input_translation\",\r\n      filter: true,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"EventDates\",\r\n      value: \"date_event\",\r\n      type: \"date\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"PosterPicture\",\r\n      value: \"img\",\r\n      type: \"img\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"LinkBuyTickets\",\r\n      value: \"url\",\r\n      type: \"input\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionEditVideo = {\r\n  delete_url: \"/delete_video\",\r\n  url: \"/re_video\",\r\n  fields: [\r\n    {\r\n      label: \"Languages\",\r\n      value: \"language\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: [\r\n        { label: \"Russian\", value: \"ru\" },\r\n        { label: \"English\", value: \"com\" },\r\n      ],\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"Label\",\r\n      value: \"label_\",\r\n      type: \"input_translation\",\r\n      filter: true,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n    {\r\n      type: \"double_fields\",\r\n      fields: [\r\n        {\r\n          label: \"Category\",\r\n          value: \"category\",\r\n          type: \"bool\",\r\n          filter: true,\r\n          default: \"classic\",\r\n          list_value: [\r\n            { label: \"VideoCategory1\", value: \"classic\" },\r\n            { label: \"VideoCategory2\", value: \"fusion\" },\r\n            { label: \"VideoCategory3\", value: \"meditation\" },\r\n            { label: \"VideoCategory4\", value: \"tool\" },\r\n            { label: \"VideoCategory5\", value: \"studies\" },\r\n          ],\r\n        },\r\n        {\r\n          label: \"Access\",\r\n          value: \"access\",\r\n          type: \"box\",\r\n          not_see: true,\r\n          filter: true,\r\n          default: [],\r\n          list_value: [\r\n            {\r\n              label: \"AccessValue1\",\r\n              value: \"Без регистрации\",\r\n            },\r\n            { label: \"AccessValue2\", value: \"Гость\" },\r\n            { label: \"AccessValue3\", value: \"Премиум\" },\r\n            { label: \"AccessValue4\", value: \"VIP\" },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"PosterVideo\",\r\n      value: \"poster_\",\r\n      type: \"img_translation\",\r\n      filter: false,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Video\",\r\n      value: \"video\",\r\n      type: \"video\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"Description\",\r\n      value: \"text_\",\r\n      type: \"inputarrea_translation\",\r\n      filter: false,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Level\",\r\n      value: \"level\",\r\n      type: \"bool\",\r\n      default: \"\",\r\n      list_value: [\r\n        { label: \"LevelValue1\", value: 1 },\r\n        { label: \"LevelValue2\", value: 2 },\r\n        { label: \"LevelValue3\", value: 3 },\r\n        { label: \"LevelValue4\", value: 4 },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Style\",\r\n      value: \"style\",\r\n      type: \"bool\",\r\n      default: \"\",\r\n      list_value: [\r\n        { label: \"StyleValue1\", value: \"Барокко\" },\r\n        { label: \"StyleValue2\", value: \"Классицизм\" },\r\n        { label: \"StyleValue3\", value: \"Романтизм\" },\r\n        { label: \"StyleValue4\", value: \"Импрессионизм\" },\r\n        { label: \"StyleValue5\", value: \"Авангард\" },\r\n        { label: \"StyleValue6\", value: \"Кроссовер\" },\r\n        { label: \"StyleValue7\", value: \"Современная\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Instruments\",\r\n      value: \"instruments\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: Tools,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionVideo = {\r\n  delete_url: \"/delete_video\",\r\n  url: \"/re_video\",\r\n  fields: [\r\n    {\r\n      label: \"Languages\",\r\n      value: \"language\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: [\r\n        { label: \"Russian\", value: \"ru\" },\r\n        { label: \"English\", value: \"com\" },\r\n      ],\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"Label\",\r\n      value: \"label_\",\r\n      type: \"input_translation\",\r\n      filter: true,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Category\",\r\n      value: \"category\",\r\n      type: \"bool\",\r\n      filter: true,\r\n      default: \"classic\",\r\n      list_value: [\r\n        { label: \"VideoCategory1\", value: \"classic\" },\r\n        { label: \"VideoCategory2\", value: \"fusion\" },\r\n        { label: \"VideoCategory3\", value: \"meditation\" },\r\n        { label: \"VideoCategory4\", value: \"tool\" },\r\n        { label: \"VideoCategory5\", value: \"studies\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Access\",\r\n      value: \"access\",\r\n      type: \"box\",\r\n      not_see: true,\r\n      filter: true,\r\n      default: [],\r\n      list_value: [\r\n        {\r\n          label: \"AccessValue1\",\r\n          value: \"Без регистрации\",\r\n        },\r\n        { label: \"AccessValue2\", value: \"Гость\" },\r\n        { label: \"AccessValue3\", value: \"Премиум\" },\r\n        { label: \"AccessValue4\", value: \"VIP\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"NumberLike\",\r\n      value: \"like_tooltip\",\r\n      value_tooltip: \"number_passes_tooltip\",\r\n      type: \"input_tooltip_like\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"NumberLaunches\",\r\n      value: \"counter_start\",\r\n      // value_tooltip: 'number_passes_tooltip',\r\n      // type: \"input_tooltip_like\",\r\n      type: \"input\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"PosterVideo\",\r\n      value: \"poster_\",\r\n      type: \"img_translation\",\r\n      filter: false,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Video\",\r\n      value: \"video\",\r\n      type: \"video\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"Description\",\r\n      value: \"text_\",\r\n      type: \"inputarrea_translation\",\r\n      filter: false,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Instruments\",\r\n      value: \"instruments\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: Tools,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionEditAudio = {\r\n  delete_url: \"/delete_audio\",\r\n  url: \"/re_audio\",\r\n  fields: [\r\n    {\r\n      label: \"Languages\",\r\n      value: \"language\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: [\r\n        { label: \"Russian\", value: \"ru\" },\r\n        { label: \"English\", value: \"com\" },\r\n      ],\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"Label\",\r\n      value: \"label\",\r\n      type: \"input_translation\",\r\n      filter: true,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n    {\r\n      type: \"double_fields\",\r\n      fields: [\r\n        {\r\n          label: \"Category\",\r\n          value: \"category\",\r\n          type: \"bool\",\r\n          filter: true,\r\n          default: \"Релакс\",\r\n          list_value: [\r\n            { label: \"AudioCategory1\", value: \"Релакс\" },\r\n            { label: \"AudioCategory2\", value: \"Активация\" },\r\n            { label: \"AudioCategory3\", value: \"Терапия\" },\r\n            { label: \"AudioCategory4\", value: \"studies\" },\r\n          ],\r\n        },\r\n        {\r\n          label: \"Access\",\r\n          value: \"access\",\r\n          type: \"box\",\r\n          not_see: true,\r\n          filter: true,\r\n          default: [],\r\n          list_value: [\r\n            {\r\n              label: \"AccessValue1\",\r\n              value: \"Без регистрации\",\r\n            },\r\n            { label: \"AccessValue2\", value: \"Гость\" },\r\n            { label: \"AccessValue3\", value: \"Премиум\" },\r\n            { label: \"AccessValue4\", value: \"VIP\" },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: \"NumberLike\",\r\n      value: \"like\",\r\n      type: \"input\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"Genre\",\r\n      value: \"genre\",\r\n      type: \"bool\",\r\n      filter: true,\r\n      default: \"Классика\",\r\n      list_value: [\r\n        { label: \"GenreValue1\", value: \"Классика\" },\r\n        { label: \"GenreValue2\", value: \"Эмбиент\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Level\",\r\n      value: \"level\",\r\n      type: \"bool\",\r\n      default: \"\",\r\n      list_value: [\r\n        { label: \"LevelValue1\", value: 1 },\r\n        { label: \"LevelValue2\", value: 2 },\r\n        { label: \"LevelValue3\", value: 3 },\r\n        { label: \"LevelValue4\", value: 4 },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Style\",\r\n      value: \"style\",\r\n      type: \"bool\",\r\n      default: \"\",\r\n      list_value: [\r\n        { label: \"StyleValue1\", value: \"Барокко\" },\r\n        { label: \"StyleValue2\", value: \"Классицизм\" },\r\n        { label: \"StyleValue3\", value: \"Романтизм\" },\r\n        { label: \"StyleValue4\", value: \"Импрессионизм\" },\r\n        { label: \"StyleValue5\", value: \"Авангард\" },\r\n        { label: \"StyleValue6\", value: \"Кроссовер\" },\r\n        { label: \"StyleValue7\", value: \"Современная\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Instruments\",\r\n      value: \"instruments\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: Tools,\r\n    },\r\n    {\r\n      label: \"Audio\",\r\n      value: \"audio\",\r\n      type: \"video\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionAudio = {\r\n  delete_url: \"/delete_audio\",\r\n  url: \"/re_audio\",\r\n  fields: [\r\n    {\r\n      label: \"Languages\",\r\n      value: \"language\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: [\r\n        { label: \"Russian\", value: \"ru\" },\r\n        { label: \"English\", value: \"com\" },\r\n      ],\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"Label\",\r\n      value: \"label\",\r\n      type: \"input_translation\",\r\n      filter: true,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Category\",\r\n      value: \"category\",\r\n      type: \"bool\",\r\n      filter: true,\r\n      default: \"Релакс\",\r\n      list_value: [\r\n        { label: \"AudioCategory1\", value: \"Релакс\" },\r\n        { label: \"AudioCategory2\", value: \"Активация\" },\r\n        { label: \"AudioCategory3\", value: \"Терапия\" },\r\n        { label: \"AudioCategory4\", value: \"studies\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"NumberLike\",\r\n      value: \"like_tooltip\",\r\n      value_tooltip: \"number_passes_tooltip\",\r\n      type: \"input_tooltip_like\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"NumberLaunches\",\r\n      value: \"counter_start\",\r\n      // value_tooltip: 'number_passes_tooltip',\r\n      // type: \"input_tooltip_like\",\r\n      type: \"input\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"Genre\",\r\n      value: \"genre\",\r\n      type: \"bool\",\r\n      filter: true,\r\n      default: \"Классика\",\r\n      list_value: [\r\n        { label: \"GenreValue1\", value: \"Классика\" },\r\n        { label: \"GenreValue2\", value: \"Эмбиент\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Instruments\",\r\n      value: \"instruments\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: Tools,\r\n    },\r\n    {\r\n      label: \"Audio\",\r\n      value: \"audio\",\r\n      type: \"video\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionCreateVideo = {\r\n  url: \"/create_video\",\r\n  fields: [\r\n    {\r\n      label: \"Languages\",\r\n      value: \"language\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: [\r\n        { label: \"Russian\", value: \"ru\" },\r\n        { label: \"English\", value: \"com\" },\r\n      ],\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"Label\",\r\n      value: \"label_\",\r\n      type: \"input_translation\",\r\n      filter: true,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n    {\r\n      type: \"double_fields\",\r\n      fields: [\r\n        {\r\n          label: \"Category\",\r\n          value: \"category\",\r\n          type: \"bool\",\r\n          filter: true,\r\n          default: \"classic\",\r\n          list_value: [\r\n            { label: \"VideoCategory1\", value: \"classic\" },\r\n            { label: \"VideoCategory2\", value: \"fusion\" },\r\n            { label: \"VideoCategory3\", value: \"meditation\" },\r\n            { label: \"VideoCategory4\", value: \"tool\" },\r\n            { label: \"VideoCategory5\", value: \"studies\" },\r\n          ],\r\n        },\r\n        {\r\n          label: \"Access\",\r\n          value: \"access\",\r\n          type: \"box\",\r\n          not_see: true,\r\n          filter: true,\r\n          default: [],\r\n          list_value: [\r\n            {\r\n              label: \"AccessValue1\",\r\n              value: \"Без регистрации\",\r\n            },\r\n            { label: \"AccessValue2\", value: \"Гость\" },\r\n            { label: \"AccessValue3\", value: \"Премиум\" },\r\n            { label: \"AccessValue4\", value: \"VIP\" },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"PosterVideo\",\r\n      value: \"poster_\",\r\n      type: \"img_translation\",\r\n      filter: false,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Video\",\r\n      value: \"video\",\r\n      type: \"video\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"Description\",\r\n      value: \"text_\",\r\n      type: \"inputarrea_translation\",\r\n      filter: false,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Level\",\r\n      value: \"level\",\r\n      type: \"bool\",\r\n      default: \"\",\r\n      list_value: [\r\n        { label: \"LevelValue1\", value: 1 },\r\n        { label: \"LevelValue2\", value: 2 },\r\n        { label: \"LevelValue3\", value: 3 },\r\n        { label: \"LevelValue4\", value: 4 },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Style\",\r\n      value: \"style\",\r\n      type: \"bool\",\r\n      default: \"\",\r\n      list_value: [\r\n        { label: \"StyleValue1\", value: \"Барокко\" },\r\n        { label: \"StyleValue2\", value: \"Классицизм\" },\r\n        { label: \"StyleValue3\", value: \"Романтизм\" },\r\n        { label: \"StyleValue4\", value: \"Импрессионизм\" },\r\n        { label: \"StyleValue5\", value: \"Авангард\" },\r\n        { label: \"StyleValue6\", value: \"Кроссовер\" },\r\n        { label: \"StyleValue7\", value: \"Современная\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Instruments\",\r\n      value: \"instruments\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: Tools,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionCreateAudio = {\r\n  url: \"/create_audio\",\r\n  fields: [\r\n    {\r\n      label: \"Languages\",\r\n      value: \"language\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: [\r\n        { label: \"Russian\", value: \"ru\" },\r\n        { label: \"English\", value: \"com\" },\r\n      ],\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"Label\",\r\n      value: \"label\",\r\n      type: \"input_translation\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      type: \"double_fields\",\r\n      fields: [\r\n        {\r\n          label: \"Category\",\r\n          value: \"category\",\r\n          type: \"bool\",\r\n          filter: true,\r\n          default: \"Релакс\",\r\n          list_value: [\r\n            { label: \"AudioCategory1\", value: \"Релакс\" },\r\n            { label: \"AudioCategory2\", value: \"Активация\" },\r\n            { label: \"AudioCategory3\", value: \"Терапия\" },\r\n            { label: \"AudioCategory4\", value: \"studies\" },\r\n          ],\r\n        },\r\n        {\r\n          label: \"Access\",\r\n          value: \"access\",\r\n          type: \"box\",\r\n          not_see: true,\r\n          filter: true,\r\n          default: [],\r\n          list_value: [\r\n            {\r\n              label: \"AccessValue1\",\r\n              value: \"Без регистрации\",\r\n            },\r\n            { label: \"AccessValue2\", value: \"Гость\" },\r\n            { label: \"AccessValue3\", value: \"Премиум\" },\r\n            { label: \"AccessValue4\", value: \"VIP\" },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Genre\",\r\n      value: \"genre\",\r\n      type: \"bool\",\r\n      filter: true,\r\n      default: \"Классика\",\r\n      list_value: [\r\n        { label: \"GenreValue1\", value: \"Классика\" },\r\n        { label: \"GenreValue2\", value: \"Эмбиент\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Level\",\r\n      value: \"level\",\r\n      type: \"bool\",\r\n      default: \"\",\r\n      list_value: [\r\n        { label: \"LevelValue1\", value: 1 },\r\n        { label: \"LevelValue2\", value: 2 },\r\n        { label: \"LevelValue3\", value: 3 },\r\n        { label: \"LevelValue4\", value: 4 },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Style\",\r\n      value: \"style\",\r\n      type: \"bool\",\r\n      default: \"\",\r\n      list_value: [\r\n        { label: \"StyleValue1\", value: \"Барокко\" },\r\n        { label: \"StyleValue2\", value: \"Классицизм\" },\r\n        { label: \"StyleValue3\", value: \"Романтизм\" },\r\n        { label: \"StyleValue4\", value: \"Импрессионизм\" },\r\n        { label: \"StyleValue5\", value: \"Авангард\" },\r\n        { label: \"StyleValue6\", value: \"Кроссовер\" },\r\n        { label: \"StyleValue7\", value: \"Современная\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Instruments\",\r\n      value: \"instruments\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: Tools,\r\n    },\r\n    {\r\n      label: \"Audio\",\r\n      value: \"audio\",\r\n      type: \"video\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionCreateLangs = {\r\n  url: \"/translation_create\",\r\n  fields: [\r\n    {\r\n      label: \"Label\",\r\n      value: \"name\",\r\n      type: \"input\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"CodeLanguage\",\r\n      value: \"code\",\r\n      type: \"input\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport const optionCreatePoster = {\r\n  url: \"/create_live_sound\",\r\n  fields: [\r\n    {\r\n      label: \"Languages\",\r\n      value: \"language\",\r\n      type: \"box\",\r\n      filter: true,\r\n      default: [],\r\n      list_value: [\r\n        { label: \"Russian\", value: \"ru\" },\r\n        { label: \"English\", value: \"com\" },\r\n      ],\r\n    },\r\n    {\r\n      translation: true,\r\n      label: \"Label\",\r\n      value: \"label_\",\r\n      type: \"input_translation\",\r\n      filter: true,\r\n      default: [\r\n        { language: \"ru\", value: \"\" },\r\n        { language: \"com\", value: \"\" },\r\n      ],\r\n    },\r\n    {\r\n      label: \"EventDates\",\r\n      value: \"date_event\",\r\n      type: \"date\",\r\n      filter: true,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"PosterPicture\",\r\n      value: \"img\",\r\n      type: \"img\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n    {\r\n      label: \"LinkBuyTickets\",\r\n      value: \"url\",\r\n      type: \"input\",\r\n      filter: false,\r\n      default: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\n// export const optionEditMaps = {\r\n//     delete_url: \"/delete_map\",\r\n//     url: \"/re_map\",\r\n//     fields: [\r\n//         {\r\n//             label: \"Languages\",\r\n//             value: \"language\",\r\n//             type: \"box\",\r\n//             filter: true,\r\n//             default: [],\r\n//             list_value: [\r\n//                 { label: \"Russian\", value: \"ru\" },\r\n//                 { label: \"English\", value: \"com\" },\r\n//             ],\r\n//         },\r\n//         {\r\n//             translation: true,\r\n//             label: \"Label\",\r\n//             value: \"label_\",\r\n//             type: \"input_translation\",\r\n//             filter: true,\r\n//             default: [\r\n//                 { language: \"ru\", value: \"\" },\r\n//                 { language: \"com\", value: \"\" },\r\n//             ],\r\n//         },\r\n//         {\r\n//             translation: true,\r\n//             label: \"Картинка карты\",\r\n//             value: \"img\",\r\n//             type: \"img\",\r\n//             filter: false,\r\n//             default: \"\",\r\n//         },\r\n//         {\r\n//             label: \"LinkBuyTickets\",\r\n//             value: \"url\",\r\n//             type: \"input\",\r\n//             filter: false,\r\n//             default: \"\",\r\n//         },\r\n//     ],\r\n// };\r\n\r\n// export const optionMaps = {\r\n//     delete_url: \"/delete_map\",\r\n//     url: \"/re_map\",\r\n//     fields: [\r\n//         {\r\n//             label: \"Languages\",\r\n//             value: \"language\",\r\n//             type: \"box\",\r\n//             filter: true,\r\n//             default: [],\r\n//             list_value: [\r\n//                 { label: \"Russian\", value: \"ru\" },\r\n//                 { label: \"English\", value: \"com\" },\r\n//             ],\r\n//         },\r\n//         {\r\n//             translation: true,\r\n//             label: \"Label\",\r\n//             value: \"label_\",\r\n//             type: \"input_translation\",\r\n//             filter: true,\r\n//             default: [\r\n//                 { language: \"ru\", value: \"\" },\r\n//                 { language: \"com\", value: \"\" },\r\n//             ],\r\n//         },\r\n//         {\r\n//             translation: true,\r\n//             label: \"Картинка карты\",\r\n//             value: \"img\",\r\n//             type: \"img\",\r\n//             filter: false,\r\n//             default: \"\",\r\n//         },\r\n//         {\r\n//             label: \"LinkBuyTickets\",\r\n//             value: \"url\",\r\n//             type: \"input\",\r\n//             filter: false,\r\n//             default: \"\",\r\n//         },\r\n//     ],\r\n// };\r\n\r\n// export const optionCreateMaps = {\r\n//     url: \"/create_map\",\r\n//     fields: [\r\n//         {\r\n//             label: \"Languages\",\r\n//             value: \"language\",\r\n//             type: \"box\",\r\n//             filter: true,\r\n//             default: [],\r\n//             list_value: [\r\n//                 { label: \"Russian\", value: \"ru\" },\r\n//                 { label: \"English\", value: \"com\" },\r\n//             ],\r\n//         },\r\n//         {\r\n//             translation: true,\r\n//             label: \"Label\",\r\n//             value: \"label_\",\r\n//             type: \"input_translation\",\r\n//             filter: true,\r\n//             default: [\r\n//                 { language: \"ru\", value: \"\" },\r\n//                 { language: \"com\", value: \"\" },\r\n//             ],\r\n//         },\r\n//         {\r\n//             translation: true,\r\n//             label: \"Картинка карты\",\r\n//             value: \"img\",\r\n//             type: \"img\",\r\n//             filter: false,\r\n//             default: \"\",\r\n//         },\r\n//         {\r\n//             label: \"LinkBuyTickets\",\r\n//             value: \"url\",\r\n//             type: \"input\",\r\n//             filter: false,\r\n//             default: \"\",\r\n//         },\r\n//     ],\r\n// };\r\n","import React from \"react\";\r\nimport s from \"./PushInfo.module.scss\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const PushInfo = ({ value, translations }) => {\r\n    const popupForm = usePopupForm();\r\n\r\n    return (\r\n        <div className={s.root_popup}>\r\n            <div className={s.popup_header}>\r\n                <div\r\n                    className={\r\n                        GlobalStyle.BellotaFontRegular + \" \" + s.popup_label\r\n                    }\r\n                >\r\n                    {checkLanguageConst(\"Information\", translations)}\r\n                </div>\r\n                <div\r\n                    className={s.button_close}\r\n                    onClick={() => popupForm.exitHandler()}\r\n                >\r\n                    <GlobalSvgSelector id=\"close\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div\r\n                className={GlobalStyle.CustomFontRegular + \" \" + s.popup_value}\r\n            >\r\n                {checkLanguageConst(value, translations)}\r\n            </div>\r\n\r\n            <div className={s.blcok_buttons}>\r\n                <div\r\n                    className={s.popup_button_ok}\r\n                    onClick={() => popupForm.exitHandler()}\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular +\r\n                            \" \" +\r\n                            s.popup_button_ok_text\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\"Ok\", translations)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport s from \"./Form.module.scss\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { PushInfo } from \"../pushInfo/PushInfo\";\r\nimport Scrollbars from \"react-custom-scrollbars-2\";\r\nimport { httpServer } from \"../../const\";\r\nimport { listField, optionLanguages } from \"../../constants/OptionsTable\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const FormReTranslation = ({ option, status, fileName }) => {\r\n    const popupForm = usePopupForm();\r\n    const auth = useContext(AuthContext);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [popupError, setPopupError] = useState(\"\");\r\n    const [popupOk, setPopupOk] = useState(\"\");\r\n    const [value, setValue] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // let field = {};\r\n        // option?.fields?.forEach(item => {\r\n        //     field[item.value] = data ? data[item.value] : item.default;\r\n        // });\r\n        setValue(auth.languages_list);\r\n    }, [auth.languages_list]);\r\n\r\n    useEffect(() => {\r\n        auth.get_list_lengs();\r\n    }, []);\r\n\r\n    const changeRoot = (_id, data) => {\r\n        let new_data = [...value];\r\n        let index = new_data.findIndex((item) => item._id === _id);\r\n        new_data[index][data.name] = data.value;\r\n        setValue(new_data);\r\n    };\r\n\r\n    const clearErrorPopup = () => {\r\n        setPopupError(\"\");\r\n        setPopupOk(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        clearErrorPopup();\r\n    }, [popupForm.isOpen]);\r\n\r\n    const saveHandler = async () => {\r\n        clearErrorPopup();\r\n        try {\r\n            await request(\r\n                `/api/admin_panel${option?.url}`,\r\n                \"POST\",\r\n                { data: value },\r\n                {\r\n                    Authorization: `${auth.token}`,\r\n                }\r\n            );\r\n            setPopupOk(\"ChangesSaved\");\r\n        } catch (e) {\r\n            setPopupError(\"Error\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.root_popup}>\r\n            <div className={s.popup_header}>\r\n                <div\r\n                    className={\r\n                        GlobalStyle.BellotaFontRegular + \" \" + s.popup_label\r\n                    }\r\n                >\r\n                    {checkLanguageConst(\"Editing\", auth.translations)}\r\n                </div>\r\n                <div\r\n                    className={s.button_close}\r\n                    onClick={() => popupForm.exitHandler()}\r\n                >\r\n                    <GlobalSvgSelector id=\"close\" />\r\n                </div>\r\n            </div>\r\n            <Scrollbars\r\n                style={{ width: \"100%\", height: \"60vh\", marginTop: 18 }}\r\n            >\r\n                <div className={s.items}>\r\n                    {status ? (\r\n                        <a\r\n                            className={s.button_upload}\r\n                            href={\r\n                                httpServer +\r\n                                \"/translations/\" + fileName\r\n                            }\r\n                            target=\"_blank\"\r\n                        >\r\n                            <div\r\n                                className={\r\n                                    GlobalStyle.CustomFontRegular +\r\n                                    s.button_upload_text\r\n                                }\r\n                            >\r\n                                {checkLanguageConst(\r\n                                    \"JsonTemplate\",\r\n                                    auth.translations\r\n                                )}\r\n                            </div>\r\n                        </a>\r\n                    ) : null}\r\n                    {value?.map((item_data, index) => (\r\n                        <div\r\n                            key={index}\r\n                            style={{\r\n                                width: \"100%\",\r\n                                marginTop: 16,\r\n                            }}\r\n                        >\r\n                            <div\r\n                                className={\r\n                                    GlobalStyle.CustomFontRegular +\r\n                                    \" \" +\r\n                                    s.item_header_label\r\n                                }\r\n                            >\r\n                                {item_data.name}\r\n                            </div>\r\n                            {option?.fields?.map((item) => {\r\n                                return listField({\r\n                                    lang: auth.language,\r\n                                    translations: auth.translations,\r\n                                    item: item,\r\n                                    change: (data) =>\r\n                                        changeRoot(item_data._id, data),\r\n                                    value: value[index],\r\n                                    optionLanguages: auth.languages_list,\r\n                                });\r\n                            })}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </Scrollbars>\r\n            <div\r\n                className={\r\n                    GlobalStyle.CustomFontRegular +\r\n                    \" \" +\r\n                    (popupOk.length !== 0 ? s.popup_ok : s.popup_error)\r\n                }\r\n            >\r\n                {checkLanguageConst(popupOk || popupError, auth.translations)}\r\n            </div>\r\n            <div className={s.popup_liner_button}>\r\n                <div\r\n                    className={s.popup_button_ok}\r\n                    onClick={() => saveHandler()}\r\n                >\r\n                    {loading ? (\r\n                        <div className={s.popup_button_ok_loader}>\r\n                            <ClipLoader\r\n                                color={ColorsStyles.colorTextError}\r\n                                loading={true}\r\n                                css={s.loader}\r\n                                size={32}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <div\r\n                            className={\r\n                                GlobalStyle.CustomFontRegular +\r\n                                \" \" +\r\n                                s.popup_button_ok_text\r\n                            }\r\n                        >\r\n                            {checkLanguageConst(\"Save\", auth.translations)}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div\r\n                    className={s.popup_button_exit}\r\n                    onClick={() => popupForm.exitHandler()}\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular +\r\n                            \" \" +\r\n                            s.popup_button_exit_text\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\"Cancel\", auth.translations)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport s from \"./Form.module.scss\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { PushInfo } from \"../pushInfo/PushInfo\";\r\nimport Scrollbars from \"react-custom-scrollbars-2\";\r\nimport { httpServer } from \"../../const\";\r\nimport { listField, optionLanguages } from \"../../constants/OptionsTable\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const FormVersion = ({ data, option, reload, status }) => {\r\n    const popupForm = usePopupForm();\r\n    const auth = useContext(AuthContext);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [popupError, setPopupError] = useState(\"\");\r\n    const [popupOk, setPopupOk] = useState(\"\");\r\n    const [value, setValue] = useState({});\r\n\r\n    useEffect(() => {\r\n        let field = {};\r\n        option?.fields?.forEach((item) => {\r\n            field[item.value] = data ? data[item.value] : item.default;\r\n        });\r\n        setValue(field);\r\n    }, [option]);\r\n\r\n    const changeRoot = (data) => {\r\n        let new_data = { ...value };\r\n        new_data[data.name] = data.value;\r\n        setValue(new_data);\r\n    };\r\n\r\n    const clearErrorPopup = () => {\r\n        setPopupError(\"\");\r\n        setPopupOk(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        clearErrorPopup();\r\n    }, [popupForm.isOpen]);\r\n\r\n    const saveHandler = async () => {\r\n        clearErrorPopup();\r\n        try {\r\n            await request(\r\n                `/api/admin_panel${option?.url}`,\r\n                \"POST\",\r\n                { data: value, _id: data?._id },\r\n                {\r\n                    Authorization: `${auth.token}`,\r\n                }\r\n            );\r\n            setPopupOk(data ? \"ChangesSaved\" : \"Added\");\r\n            reload();\r\n        } catch (e) {\r\n            setPopupError(data ? \"Error\" : \"ErrorFields\");\r\n        }\r\n    };\r\n\r\n    const deleteHandler = async () => {\r\n        clearErrorPopup();\r\n        try {\r\n            await request(\r\n                `/api/admin_panel${option?.delete_url}`,\r\n                \"POST\",\r\n                { _id: data?._id },\r\n                {\r\n                    Authorization: `${auth.token}`,\r\n                }\r\n            );\r\n            popupForm.exitHandler();\r\n            popupForm.openHandler(\r\n                <PushInfo\r\n                    translations={auth.translations}\r\n                    value={\"EntryDeleted\"}\r\n                />\r\n            );\r\n            reload(0, \"null\");\r\n        } catch (e) {\r\n            setPopupError(data ? \"Error\" : \"Error\");\r\n        }\r\n    };\r\n\r\n    const sampleTranslationHandler = () => {};\r\n\r\n    return (\r\n        <div className={s.root_popup}>\r\n            <div className={s.popup_header}>\r\n                <div\r\n                    className={\r\n                        GlobalStyle.BellotaFontRegular + \" \" + s.popup_label\r\n                    }\r\n                >\r\n                    {checkLanguageConst(\"Editing\", auth.translations)}\r\n                </div>\r\n                <div\r\n                    className={s.button_close}\r\n                    onClick={() => popupForm.exitHandler()}\r\n                >\r\n                    <GlobalSvgSelector id=\"close\" />\r\n                </div>\r\n            </div>\r\n            <Scrollbars\r\n                style={{ width: \"100%\", height: \"60vh\", marginTop: 18 }}\r\n            >\r\n                <div className={s.items}>\r\n                    {status ? (\r\n                        <a\r\n                            className={s.button_upload}\r\n                            href={\r\n                                httpServer +\r\n                                \"/translations/sample_translation_admin.json\"\r\n                            }\r\n                            target=\"_blank\"\r\n                        >\r\n                            <div\r\n                                className={\r\n                                    GlobalStyle.CustomFontRegular +\r\n                                    s.button_upload_text\r\n                                }\r\n                                onClick={() => sampleTranslationHandler()}\r\n                            >\r\n                                {checkLanguageConst(\r\n                                    \"JsonTemplate\",\r\n                                    auth.translations\r\n                                )}\r\n                            </div>\r\n                        </a>\r\n                    ) : null}\r\n                    {option?.fields?.map((item) => {\r\n                        return listField({\r\n                            lang: auth.language,\r\n                            translations: auth.translations,\r\n                            item: item,\r\n                            change: changeRoot,\r\n                            value: value,\r\n                            optionLanguages: auth.languages_list,\r\n                        });\r\n                    })}\r\n                </div>\r\n            </Scrollbars>\r\n            <div\r\n                className={\r\n                    GlobalStyle.CustomFontRegular +\r\n                    \" \" +\r\n                    (popupOk.length !== 0 ? s.popup_ok : s.popup_error)\r\n                }\r\n            >\r\n                {checkLanguageConst(popupOk || popupError, auth.translations)}\r\n            </div>\r\n            <div className={s.popup_liner_button}>\r\n                <div\r\n                    className={s.popup_button_ok}\r\n                    onClick={() => saveHandler()}\r\n                >\r\n                    {loading ? (\r\n                        <div className={s.popup_button_ok_loader}>\r\n                            <ClipLoader\r\n                                color={ColorsStyles.colorTextError}\r\n                                loading={true}\r\n                                css={s.loader}\r\n                                size={32}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <div\r\n                            className={\r\n                                GlobalStyle.CustomFontRegular +\r\n                                \" \" +\r\n                                s.popup_button_ok_text\r\n                            }\r\n                        >\r\n                            {checkLanguageConst(\"Save\", auth.translations)}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div\r\n                    className={s.popup_button_exit}\r\n                    onClick={() => popupForm.exitHandler()}\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular +\r\n                            \" \" +\r\n                            s.popup_button_exit_text\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\"Cancel\", auth.translations)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport s from \"./Form.module.scss\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { PushInfo } from \"../pushInfo/PushInfo\";\r\nimport Scrollbars from \"react-custom-scrollbars-2\";\r\nimport { httpServer } from \"../../const\";\r\nimport { listField, optionLanguages } from \"../../constants/OptionsTable\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const FormSelect = ({\r\n    title,\r\n    data,\r\n    value_code,\r\n    label_code,\r\n    select_handler,\r\n    selectedValue,\r\n}) => {\r\n    const popupForm = usePopupForm();\r\n    const auth = useContext(AuthContext);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [popupError, setPopupError] = useState(\"\");\r\n    const [popupOk, setPopupOk] = useState(\"\");\r\n    const [value, setValue] = useState(selectedValue);\r\n\r\n    const saveHandler = () => {\r\n        select_handler(value);\r\n        popupForm.exitHandler();\r\n    };\r\n\r\n    const clickHandler = (value) => {\r\n        setValue(value[value_code]);\r\n    };\r\n\r\n    return (\r\n        <div className={s.root_popup}>\r\n            <div className={s.popup_header}>\r\n                <div\r\n                    className={\r\n                        GlobalStyle.BellotaFontRegular + \" \" + s.popup_label\r\n                    }\r\n                >\r\n                    {checkLanguageConst(title, auth.translations)}\r\n                </div>\r\n                <div\r\n                    className={s.button_close}\r\n                    onClick={() => popupForm.exitHandler()}\r\n                >\r\n                    <GlobalSvgSelector id=\"close\" />\r\n                </div>\r\n            </div>\r\n            <Scrollbars\r\n                style={{ width: \"100%\", height: \"60vh\", marginTop: 18 }}\r\n            >\r\n                <div className={s.items}>\r\n                    {data.map((item, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className={s.button_input}\r\n                            onClick={() => clickHandler(item)}\r\n                        >\r\n                            <div\r\n                                className={\r\n                                    value === item[value_code]\r\n                                        ? s.clip_active\r\n                                        : s.clip\r\n                                }\r\n                            />\r\n                            <div className={s.clip_text}>\r\n                                {checkLanguageConst(\r\n                                    item[label_code],\r\n                                    auth.translations\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </Scrollbars>\r\n            <div\r\n                className={\r\n                    GlobalStyle.CustomFontRegular +\r\n                    \" \" +\r\n                    (popupOk.length !== 0 ? s.popup_ok : s.popup_error)\r\n                }\r\n            >\r\n                {checkLanguageConst(popupOk || popupError, auth.translations)}\r\n            </div>\r\n            <div className={s.popup_liner_button}>\r\n                <div\r\n                    className={s.popup_button_ok}\r\n                    onClick={() => saveHandler()}\r\n                >\r\n                    {loading ? (\r\n                        <div className={s.popup_button_ok_loader}>\r\n                            <ClipLoader\r\n                                color={ColorsStyles.colorTextError}\r\n                                loading={true}\r\n                                css={s.loader}\r\n                                size={32}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <div\r\n                            className={\r\n                                GlobalStyle.CustomFontRegular +\r\n                                \" \" +\r\n                                s.popup_button_ok_text\r\n                            }\r\n                        >\r\n                            {checkLanguageConst(\"Save\", auth.translations)}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div\r\n                    className={s.popup_button_exit}\r\n                    onClick={() => popupForm.exitHandler()}\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular +\r\n                            \" \" +\r\n                            s.popup_button_exit_text\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\"Cancel\", auth.translations)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport s from \"./Header.module.scss\";\r\nimport GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { FormReEmail } from \"./FormReEmail\";\r\nimport { FormRePassword } from \"./FormRePassword\";\r\nimport {\r\n  optionTranslation,\r\n  optionTranslationAdmin,\r\n  optionVersion,\r\n} from \"../../constants/OptionsTable\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { FormReTranslation } from \"./FormReTranslation\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\nimport { FormVersion } from \"./FormVersion\";\r\nimport { LogoApp } from \"../../Settings/Components/LogoApp/LogoApp\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport { FormSelect } from \"./FormSelect\";\r\n\r\nconst label_menu = [\r\n  {\r\n    label: \"Users\",\r\n    url: \"/admin_panel/users\",\r\n  },\r\n  {\r\n    label: \"Video\",\r\n    url: \"/admin_panel/video\",\r\n  },\r\n  {\r\n    label: \"Audio\",\r\n    url: \"/admin_panel/audio\",\r\n  },\r\n  {\r\n    label: \"Playlists\",\r\n    url: \"/admin_panel/playlists\",\r\n  },\r\n  {\r\n    label: \"Events\",\r\n    url: \"/admin_panel/posters\",\r\n  },\r\n\r\n  {\r\n    label: \"Tests\",\r\n    url: \"/admin_panel/tests\",\r\n  },\r\n  {\r\n    label: \"Course\",\r\n    url: \"/admin_panel/courses\",\r\n  },\r\n\r\n  // Not used\r\n  // {\r\n  //     label: '?',\r\n  //     url: '/admin_panel/consultant'\r\n  // },\r\n  // {\r\n  //     label: 'Карты',\r\n  //     url: '/admin_panel/maps'\r\n  // },\r\n];\r\n\r\nconst label_menu_fin = [\r\n  {\r\n    label: \"Users\",\r\n    url: \"/admin_panel/users_fin\",\r\n  },\r\n];\r\n\r\nexport const Header = () => {\r\n  const popupForm = usePopupForm();\r\n  const auth = useContext(AuthContext);\r\n  const { request, error, clearError, loading } = useHttp();\r\n  const [status, setStatus] = useState(false);\r\n  const [version, setVersion] = useState(null);\r\n  const [active_list_menu, set_active_list_menu] = useState(label_menu_fin);\r\n\r\n  const getVersion = async () => {\r\n    try {\r\n      const answer = await request(`/api/data/version`, \"GET\", null, {\r\n        Authorization: auth.token,\r\n      });\r\n      setVersion(answer.version);\r\n    } catch (e) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auth.type_admin === \"Администратор\") {\r\n      set_active_list_menu(label_menu);\r\n    }\r\n  }, [auth.type_admin]);\r\n\r\n  useEffect(() => {\r\n    getVersion();\r\n  }, []);\r\n\r\n  const profileHandler = () => {\r\n    setStatus(!status);\r\n  };\r\n\r\n  const reEmailHandler = () => {\r\n    profileHandler();\r\n    popupForm.openHandler(<FormReEmail />);\r\n  };\r\n\r\n  const rePasswordHandler = () => {\r\n    profileHandler();\r\n    popupForm.openHandler(<FormRePassword />);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    profileHandler();\r\n    auth.logout();\r\n  };\r\n\r\n  const translationHandler = () => {\r\n    profileHandler();\r\n    popupForm.openHandler(\r\n      <FormReTranslation\r\n        fileName={\"sample_translation.json\"}\r\n        option={optionTranslation}\r\n        status={true}\r\n      />\r\n    );\r\n  };\r\n\r\n  const translationAdminHandler = () => {\r\n    profileHandler();\r\n    popupForm.openHandler(\r\n      <FormReTranslation\r\n        fileName={\"sample_translation_admin.json\"}\r\n        option={optionTranslationAdmin}\r\n        status={true}\r\n      />\r\n    );\r\n  };\r\n\r\n  const versionHandler = () => {\r\n    profileHandler();\r\n    popupForm.openHandler(\r\n      <FormVersion\r\n        data={version}\r\n        option={optionVersion}\r\n        reload={getVersion}\r\n        status={false}\r\n      />\r\n    );\r\n  };\r\n\r\n  const selectLenHandler = () => {\r\n    popupForm.openHandler(\r\n      <FormSelect\r\n        title={\"SelectLanguage\"}\r\n        data={auth.languages_list}\r\n        value_code={\"code\"}\r\n        label_code={\"name\"}\r\n        select_handler={auth.newLanguage}\r\n        selectedValue={auth.language}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={s.root}>\r\n        <div className={s.block}>\r\n          {/* <LogoApp translations={auth.translations} /> */}\r\n          {/* <img src={logo} alt=\"Logo\" style={s.logo} />\r\n\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.BellotaFontRegular + \" \" + s.label\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\r\n                            \"ApplicationName\",\r\n                            auth.translations\r\n                        )}\r\n                    </div> */}\r\n\r\n          <div className={s.menu}>\r\n            {active_list_menu.map((item, index) => (\r\n              <NavLink\r\n                to={item.url}\r\n                key={item.label}\r\n                className={s.button_item}\r\n                activeClassName={s.button_item_active}\r\n              >\r\n                <div\r\n                  className={GlobalStyle.CustomFontRegular + \" \" + s.item_label}\r\n                >\r\n                  {checkLanguageConst(item.label, auth.translations)}\r\n                </div>\r\n              </NavLink>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className={s.lines}>\r\n          <div className={s.lang}>\r\n            <div onClick={() => selectLenHandler()} className={s.lenBut}>\r\n              {checkLanguageConst(\"Language\", auth.translations)}\r\n              {\": \"}\r\n              {auth.languages_list?.find((item) => item.code === auth.language)\r\n                ? checkLanguageConst(\r\n                    auth.languages_list?.find(\r\n                      (item) => item.code === auth.language\r\n                    ).name,\r\n                    auth.translations\r\n                  )\r\n                : \"\"}\r\n              <div\r\n                style={{\r\n                  marginLeft: 8,\r\n                }}\r\n              >\r\n                <GlobalSvgSelector id=\"edit_mini\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={status ? s.block_profile_active : s.block_profile}>\r\n            <div\r\n              className={s.block_profile_header}\r\n              onClick={() => profileHandler()}\r\n            >\r\n              {status ? (\r\n                <div className={GlobalStyle.CustomFontMedium + \" \" + s.email}>\r\n                  {auth.email}\r\n                </div>\r\n              ) : null}\r\n              <div className={s.profile}>\r\n                <div\r\n                  className={\r\n                    GlobalStyle.CustomFontRegular + \" \" + s.label_profile\r\n                  }\r\n                >\r\n                  A\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {status ? (\r\n              <div className={s.list_button}>\r\n                {auth.type_admin === \"Администратор\" ? (\r\n                  <>\r\n                    <div\r\n                      className={s.button_profile_item}\r\n                      onClick={() => versionHandler()}\r\n                    >\r\n                      <div\r\n                        className={\r\n                          GlobalStyle.CustomFontMedium +\r\n                          \" \" +\r\n                          s.button_profile_item_text\r\n                        }\r\n                      >\r\n                        {checkLanguageConst(\r\n                          \"ApplicationVersion\",\r\n                          auth.translations\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <NavLink\r\n                      to={\"/admin_panel/lengs/\"}\r\n                      className={s.button_profile_item}\r\n                      activeClassName={s.button_profile_item}\r\n                      onClick={() => profileHandler()}\r\n                    >\r\n                      <div\r\n                        className={\r\n                          GlobalStyle.CustomFontMedium +\r\n                          \" \" +\r\n                          s.button_profile_item_text\r\n                        }\r\n                      >\r\n                        {checkLanguageConst(\"Languages\", auth.translations)}\r\n                      </div>\r\n                    </NavLink>\r\n                    <div\r\n                      className={s.button_profile_item}\r\n                      onClick={() => translationHandler()}\r\n                    >\r\n                      <div\r\n                        className={\r\n                          GlobalStyle.CustomFontMedium +\r\n                          \" \" +\r\n                          s.button_profile_item_text\r\n                        }\r\n                      >\r\n                        {checkLanguageConst(\r\n                          \"ApplicationTranslations\",\r\n                          auth.translations\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      className={s.button_profile_item}\r\n                      onClick={() => translationAdminHandler()}\r\n                    >\r\n                      <div\r\n                        className={\r\n                          GlobalStyle.CustomFontMedium +\r\n                          \" \" +\r\n                          s.button_profile_item_text\r\n                        }\r\n                      >\r\n                        {checkLanguageConst(\r\n                          \"AdminTranslations\",\r\n                          auth.translations\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                ) : null}\r\n                <div\r\n                  className={s.button_profile_item}\r\n                  onClick={() => rePasswordHandler()}\r\n                >\r\n                  <div\r\n                    className={\r\n                      GlobalStyle.CustomFontMedium +\r\n                      \" \" +\r\n                      s.button_profile_item_text\r\n                    }\r\n                  >\r\n                    {checkLanguageConst(\"ChangePassword\", auth.translations)}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={s.button_profile_item}\r\n                  onClick={() => reEmailHandler()}\r\n                >\r\n                  <div\r\n                    className={\r\n                      GlobalStyle.CustomFontMedium +\r\n                      \" \" +\r\n                      s.button_profile_item_text\r\n                    }\r\n                  >\r\n                    {checkLanguageConst(\"ChangedE-mail\", auth.translations)}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={s.button_profile_item}\r\n                  onClick={() => logoutHandler()}\r\n                >\r\n                  <div\r\n                    className={\r\n                      GlobalStyle.CustomFontMedium +\r\n                      \" \" +\r\n                      s.button_profile_item_text\r\n                    }\r\n                  >\r\n                    {checkLanguageConst(\"Logout\", auth.translations)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport s from './Search.module.scss';\r\nimport {GlobalSvgSelector} from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport {checkLanguageConst} from \"../../hooks/translashion\";\r\n\r\n\r\nexport const Search = ({value, callback, placeholder, handler, translations}) => {\r\n    return (\r\n        <div className={s.root}>\r\n            <input\r\n                value={value}\r\n                type='text'\r\n                className={s.input}\r\n                placeholder={checkLanguageConst(placeholder, translations)}\r\n                onChange={(value) => callback(value.target.value)}\r\n            />\r\n            <div className={s.button} onClick={() => handler(0)}>\r\n                <GlobalSvgSelector id='search' />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport s from './Form.module.scss';\r\nimport {GlobalSvgSelector} from '../../assets/icons/global/GlobalSvgSelector';\r\nimport GlobalStyle from '../GlobalStyle.module.scss';\r\nimport {usePopupForm} from '../../hooks/usePopupForm';\r\nimport {AuthContext} from '../../context/authContext';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\nimport {ColorsStyles} from '../../constants/ColorsStyles';\r\nimport {useHttp} from '../../hooks/http.hook';\r\nimport {PushInfo} from '../pushInfo/PushInfo';\r\nimport Scrollbars from 'react-custom-scrollbars-2';\r\nimport {listField, optionCustomAccess, optionLanguages} from '../../constants/OptionsTable';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport {checkLanguageConst} from '../../hooks/translashion';\r\n\r\nexport const Form = ({data, option, reload, optionQuestionnaire, optionPassword, optionEdit, optionSettings, wigth_panel}) => {\r\n  const popupForm = usePopupForm();\r\n  const auth = useContext(AuthContext);\r\n  const {request, error, clearError, loading} = useHttp();\r\n  const [popupError, setPopupError] = useState('');\r\n  const [popupOk, setPopupOk] = useState('');\r\n  const [value, setValue] = useState({});\r\n  const [questionnaire, setQuestionnaire] = useState({});\r\n  const [password, setPassword] = useState({password: ''});\r\n  const [settings, setSettings] = useState({});\r\n  const [activeMenu, setActiveMenu] = useState(0);\r\n  const [isCustomAccess, setIsCustomAccess] = useState(false);\r\n  const [new_option, setNew_option] = useState(option);\r\n\r\n  const itemMenuHandler = (index) => {\r\n    setActiveMenu(index);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let f_option = cloneDeep(option);\r\n    if (data && data.access && data.access?.indexOf('custom') !== -1) {\r\n      f_option.fields[0].labels.push('TabAccess');\r\n      f_option.fields[0].list_menu_fields.push(optionCustomAccess);\r\n      setIsCustomAccess(true);\r\n    }\r\n    setNew_option(f_option);\r\n  }, [option]);\r\n\r\n  useEffect(() => {\r\n    let field = {};\r\n    field.custom_access = data ? data.custom_access : [];\r\n    option?.fields?.forEach((item) => {\r\n      if (item.type === 'list_menu') {\r\n        item?.list_menu_fields?.forEach((item_menu) => {\r\n          item_menu?.forEach((element) => {\r\n            if (element.type === 'double_fields') {\r\n              field[element.fields[0].value] = data ? data[element.fields[0].value] : cloneDeep(element.fields[0].default);\r\n              field[element.fields[1].value] = data ? data[element.fields[1].value] : cloneDeep(element.fields[1].default);\r\n            } else field[element.value] = data ? data[element.value] : cloneDeep(element.default);\r\n          });\r\n        });\r\n      } else if (item.type === 'double_fields') {\r\n        field[item.fields[0].value] = data ? data[item.fields[0].value] : cloneDeep(item.fields[0].default);\r\n        field[item.fields[1].value] = data ? data[item.fields[1].value] : cloneDeep(item.fields[1].default);\r\n      } else field[item.value] = data ? data[item.value] : cloneDeep(item.default);\r\n    });\r\n    setValue(field);\r\n    if (optionQuestionnaire) {\r\n      let fieldQuestionnaire = {};\r\n      optionQuestionnaire?.fields?.forEach((item) => {\r\n        fieldQuestionnaire[item.value] = data?.questionnaire ? data?.questionnaire[item.value] : item.default;\r\n      });\r\n      setQuestionnaire(fieldQuestionnaire);\r\n    }\r\n    if (optionPassword) {\r\n      setPassword({password: data?.password ? data.password : ''});\r\n    }\r\n    if (optionSettings) {\r\n      let fieldSettings = {};\r\n      optionSettings?.fields?.forEach((item) => {\r\n        fieldSettings[item.value] = data ? data[item.value] : cloneDeep(item.default);\r\n      });\r\n      setSettings(fieldSettings);\r\n    }\r\n  }, [option, popupForm.isOpen]);\r\n\r\n  const changeRoot = (data) => {\r\n    if (data.name === 'access') {\r\n      let f_option = cloneDeep(new_option);\r\n      if (data.value && data.value.length && data.value.indexOf('custom') !== -1) {\r\n        f_option.fields[0].labels.push('TabAccess');\r\n        f_option.fields[0].list_menu_fields.push(optionCustomAccess);\r\n        setNew_option(f_option);\r\n        setIsCustomAccess(true);\r\n      } else {\r\n        if (isCustomAccess) {\r\n          f_option.fields[0].labels.pop();\r\n          f_option.fields[0].list_menu_fields.pop();\r\n          setNew_option(f_option);\r\n          setIsCustomAccess(false);\r\n        }\r\n      }\r\n    }\r\n    let new_data = {...value};\r\n    new_data[data.name] = data.value;\r\n    setValue(new_data);\r\n  };\r\n\r\n  const changeQuestionnaire = (data) => {\r\n    let new_data = {...questionnaire};\r\n    new_data[data.name] = data.value;\r\n    setQuestionnaire(new_data);\r\n  };\r\n\r\n  const changeSettings = (data) => {\r\n    let new_data = {...settings};\r\n    new_data[data.name] = data.value;\r\n    setSettings(new_data);\r\n  };\r\n\r\n  const changePassword = (data) => {\r\n    let new_data = {...password};\r\n    new_data[data.name] = data.value;\r\n    setPassword(new_data);\r\n  };\r\n\r\n  const clearErrorPopup = () => {\r\n    setPopupError('');\r\n    setPopupOk('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    clearErrorPopup();\r\n  }, [popupForm.isOpen]);\r\n\r\n  const saveHandler = async () => {\r\n    clearErrorPopup();\r\n    try {\r\n      const newData = await request(\r\n        `/api/admin_panel${option?.url}`,\r\n        'POST',\r\n        {\r\n          data: value,\r\n          _id: data?._id,\r\n          password: optionPassword ? password.password : null,\r\n          questionnaire: optionQuestionnaire ? questionnaire : null,\r\n          settings: optionSettings ? settings : null,\r\n        },\r\n        {\r\n          Authorization: `${auth.token}`,\r\n        }\r\n      );\r\n      setPopupOk(data ? 'ChangesSaved' : 'Added');\r\n      reload(0, 'null');\r\n      if (!data) {\r\n        popupForm.openHandler(<Form data={newData} option={optionEdit} reload={reload} />);\r\n      }\r\n    } catch (e) {\r\n      setPopupError(data ? 'Error' : 'ErrorFields');\r\n    }\r\n  };\r\n\r\n  const deleteHandler = async () => {\r\n    clearErrorPopup();\r\n    try {\r\n      await request(\r\n        `/api/admin_panel${option?.delete_url}`,\r\n        'POST',\r\n        {_id: data?._id},\r\n        {\r\n          Authorization: `${auth.token}`,\r\n        }\r\n      );\r\n      popupForm.exitHandler();\r\n      popupForm.openHandler(<PushInfo value={'EntryDeleted'} translations={auth.translations} />);\r\n      reload(0, 'null');\r\n    } catch (e) {\r\n      setPopupError(data ? 'Error' : 'Error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{width: wigth_panel ? wigth_panel : 400}}>\r\n      <div className={s.popup_header}>\r\n        <div className={GlobalStyle.BellotaFontRegular + ' ' + s.popup_label}>\r\n          {checkLanguageConst('Editing', auth.translations)}\r\n        </div>\r\n        {option.delete_url ? (\r\n          <div className={s.block_buttons}>\r\n            <div className={s.popup_button_delete} onClick={() => deleteHandler()}>\r\n              <div className={GlobalStyle.CustomFontRegular + ' ' + s.popup_button_exit_text}>\r\n                {checkLanguageConst('Delete', auth.translations)}\r\n              </div>\r\n            </div>\r\n            <div className={s.button_close} onClick={() => popupForm.exitHandler()}>\r\n              <GlobalSvgSelector id='close' />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className={s.button_close} onClick={() => popupForm.exitHandler()}>\r\n            <GlobalSvgSelector id='close' />\r\n          </div>\r\n        )}\r\n      </div>\r\n      {optionQuestionnaire ? (\r\n        <div className={s.liner_menu}>\r\n          {['UserTab1', 'UserTab2', 'UserTab3', 'UserTab4'].map((item, index) => (\r\n            <div\r\n              onClick={() => itemMenuHandler(index)}\r\n              className={s.liner_menu_item + (activeMenu === index ? ' ' + s.liner_menu_item_active : '')}\r\n            >\r\n              {checkLanguageConst(item, auth.translations)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n      <Scrollbars\r\n        renderThumbVertical={({style, ...props}) => (\r\n          <div\r\n            {...props}\r\n            className={s.scrollThumbVertical}\r\n            style={{\r\n              ...style,\r\n              width: '6px',\r\n              borderRadius: '4px',\r\n              boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.16)',\r\n              backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n            }}\r\n          />\r\n        )}\r\n        style={{width: '100%', height: '60vh', marginTop: 18}}\r\n      >\r\n        <div className={s.items}>\r\n          {activeMenu === 0 &&\r\n            new_option?.fields?.map((item) => {\r\n              return listField({\r\n                lang: auth.language,\r\n                translations: auth.translations,\r\n                item: item,\r\n                change: changeRoot,\r\n                value: value,\r\n                optionLanguages: auth.languages_list,\r\n                id_data: data?._id,\r\n              });\r\n            })}\r\n          {activeMenu === 1 &&\r\n            optionQuestionnaire?.fields?.map((item) => {\r\n              return listField({\r\n                lang: auth.language,\r\n                translations: auth.translations,\r\n                item: item,\r\n                change: changeQuestionnaire,\r\n                value: questionnaire,\r\n                optionLanguages: auth.languages_list,\r\n              });\r\n            })}\r\n          {activeMenu === 2 &&\r\n            optionPassword?.fields?.map((item) => {\r\n              return listField({\r\n                lang: auth.language,\r\n                translations: auth.translations,\r\n                item: item,\r\n                change: changePassword,\r\n                value: password,\r\n                optionLanguages: auth.languages_list,\r\n              });\r\n            })}\r\n          {activeMenu === 3 &&\r\n            optionSettings?.fields?.map((item) => {\r\n              return listField({\r\n                lang: auth.language,\r\n                translations: auth.translations,\r\n                item: item,\r\n                change: changeSettings,\r\n                value: settings,\r\n                optionLanguages: auth.languages_list,\r\n              });\r\n            })}\r\n        </div>\r\n      </Scrollbars>\r\n      <div className={GlobalStyle.CustomFontRegular + ' ' + (popupOk.length !== 0 ? s.popup_ok : s.popup_error)}>\r\n        {checkLanguageConst(popupOk || popupError, auth.translations)}\r\n      </div>\r\n      <div className={s.popup_liner_button}>\r\n        <div className={s.popup_button_ok} onClick={() => saveHandler()}>\r\n          {loading ? (\r\n            <div className={s.popup_button_ok_loader}>\r\n              <ClipLoader color={ColorsStyles.colorTextError} loading={true} css={s.loader} size={32} />\r\n            </div>\r\n          ) : (\r\n            <div className={GlobalStyle.CustomFontRegular + ' ' + s.popup_button_ok_text}>\r\n              {checkLanguageConst(data ? 'Save' : 'Add', auth.translations)}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className={s.popup_button_exit} onClick={() => popupForm.exitHandler()}>\r\n          <div className={GlobalStyle.CustomFontRegular + ' ' + s.popup_button_exit_text}>\r\n            {checkLanguageConst('Cancel', auth.translations)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useContext, useState} from 'react';\r\nimport s from './TableCard.module.scss';\r\nimport GlobalStyle from '../GlobalStyle.module.scss';\r\nimport {usePopupForm} from '../../hooks/usePopupForm';\r\nimport {ColorsStyles} from '../../constants/ColorsStyles';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\nimport {Form} from './Forml';\r\nimport {AuthContext} from '../../context/authContext';\r\nimport {useHttp} from '../../hooks/http.hook';\r\nimport {checkLanguage, checkLanguageConst} from '../../hooks/translashion';\r\n\r\nconst string_date = (string) => {\r\n  const date = new Date(string);\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() < 9 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1;\r\n  const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\r\n  const hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\r\n  const minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\r\n  return year + '/' + month + '/' + day + '  ' + hours + ':' + minutes;\r\n};\r\n\r\nconst string_date_ = (string) => {\r\n  const date = new Date(string);\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() < 9 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1;\r\n  const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\r\n  return day + '.' + month + '.' + year;\r\n};\r\n\r\nexport const TableCard = ({\r\n  option,\r\n  data,\r\n  loading,\r\n  reload,\r\n  setData,\r\n  optionQuestionnaire,\r\n  optionPassword,\r\n  optionSettings,\r\n  optionEdit,\r\n  table_name,\r\n  wigth_panel,\r\n  page,\r\n}) => {\r\n  const popupForm = usePopupForm();\r\n  const auth = useContext(AuthContext);\r\n  const {request, error, clearError} = useHttp();\r\n  const [status, setStatus] = useState(null);\r\n  const [statusFilter, setStatusFilter] = useState(false);\r\n\r\n  const itemHandler = (item) => {\r\n    popupForm.openHandler(\r\n      <Form\r\n        data={item}\r\n        option={optionEdit ? optionEdit : option}\r\n        reload={reload}\r\n        optionQuestionnaire={optionQuestionnaire}\r\n        optionPassword={optionPassword}\r\n        optionSettings={optionSettings}\r\n        wigth_panel={wigth_panel}\r\n      />\r\n    );\r\n  };\r\n\r\n  const StringLang = (data) => {\r\n    let answer = '';\r\n    data?.forEach((item, index) => {\r\n      if (item === 'ru') answer += checkLanguageConst('rus', auth.translations);\r\n      else answer += checkLanguageConst('eng', auth.translations);\r\n      answer += data?.length - 1 > index ? ', ' : '';\r\n    });\r\n    return answer;\r\n  };\r\n\r\n  const reordering = async (item, index, status) => {\r\n    const index2 = status === 'top' ? index - 1 : index + 1;\r\n    const id_1 = item._id;\r\n    const id_2 = data[index2]._id;\r\n\r\n    let new_data = [...data];\r\n    // меняем поля number\r\n    let temp = new_data[index].number;\r\n    new_data[index].number = new_data[index2].number;\r\n    new_data[index2].number = temp;\r\n    // меняем местами\r\n    let temp_odj = {...new_data[index]};\r\n    new_data[index] = {...new_data[index2]};\r\n    new_data[index2] = {...temp_odj};\r\n    setData([...new_data]);\r\n\r\n    try {\r\n      const answer = await request(\r\n        `/api/admin_panel/reordering`,\r\n        'POST',\r\n        {\r\n          table_name,\r\n          id_1,\r\n          id_2,\r\n        },\r\n        {\r\n          Authorization: auth.token,\r\n        }\r\n      );\r\n    } catch (e) {\r\n      // меняем поля number\r\n      temp = new_data[index].number;\r\n      new_data[index].number = new_data[index2].number;\r\n      new_data[index2].number = temp;\r\n      // меняем местами\r\n      temp_odj = {...new_data[index]};\r\n      new_data[index] = {...new_data[index2]};\r\n      new_data[index2] = {...temp_odj};\r\n\r\n      setData([...new_data]);\r\n    }\r\n  };\r\n\r\n  const langsStringTo = (strings) => {\r\n    let new_string = [];\r\n    for (let i = 0; i < strings.length; i++) {\r\n      new_string.push(checkLanguageConst(strings[i], auth.translations));\r\n    }\r\n    return new_string.join(', ');\r\n  };\r\n\r\n  return (\r\n    <table className={s.table} cellSpacing='0'>\r\n      <thead>\r\n        <tr className={s.table_tr}>\r\n          {option?.fields?.map((item, index) => {\r\n            if (!item.not_see)\r\n              return (\r\n                <>\r\n                  <td key={index} className={GlobalStyle.CustomFontBold + ' ' + s.table_td}>\r\n                    <div className={s.table_td_block}>\r\n                      <div className={GlobalStyle.CustomFontBold + ' ' + s.table_td_label}>\r\n                        {checkLanguageConst(item.label, auth.translations)}\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  {/*==============Кнопки для переноса=================*/}\r\n                  {/*{(table_name && index === 1) ? (*/}\r\n                  {/*    <td key={index} className={GlobalStyle.CustomFontBold + ' ' + s.table_td}>*/}\r\n                  {/*        <div className={s.table_td_block}>*/}\r\n                  {/*            <div className={GlobalStyle.CustomFontBold + ' ' + s.table_td_label}>*/}\r\n                  {/*            </div>*/}\r\n                  {/*        </div>*/}\r\n                  {/*    </td>*/}\r\n                  {/*): null}*/}\r\n                  {/*==============Кнопки для переноса=================*/}\r\n                </>\r\n              );\r\n          })}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {loading ? (\r\n          <tr className={s.td_error}>\r\n            <td colSpan={option?.fields?.length}>\r\n              <div className={s.loader}>\r\n                <ClipLoader color={ColorsStyles.colorTextError} loading={true} css={s.loader} size={32} />\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        ) : data?.length === 0 ? (\r\n          <>\r\n            <tr className={s.td_error_block}>\r\n              <td colSpan={option?.fields?.length + 1}>\r\n                <div className={GlobalStyle.CustomFontRegular + ' ' + s.td_error_text}>\r\n                  {checkLanguageConst('NoEntries', auth.translations)}\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr className={s.td_error}>\r\n              <td colSpan={option?.fields?.length}></td>\r\n            </tr>\r\n          </>\r\n        ) : (\r\n          data.slice(page * 100, (page + 1) * 100)?.map((data_item, index) => (\r\n            <tr key={index} className={index % 2 === 0 ? s.tr_br : s.tr} onClick={() => itemHandler(data_item)}>\r\n              {option?.fields?.map((field_item, counter) => {\r\n                if (!field_item.not_see)\r\n                  return (\r\n                    <>\r\n                      <td className={GlobalStyle.CustomFontRegular + ' ' + s.td}>\r\n                        {field_item.type === 'status' ? (\r\n                          data_item[field_item.value] ? (\r\n                            checkLanguageConst('NotActive', auth.translations)\r\n                          ) : (\r\n                            ''\r\n                          )\r\n                        ) : field_item.type === 'input_tooltip_test' ? (\r\n                          <div className={s.tooltip_test}>\r\n                            <div className={s.tooltip_test_text}>{data_item[field_item.value]?.length}</div>\r\n                            {data_item[field_item.value]?.length ? (\r\n                              <div className={s.tooltip}>\r\n                                {data_item[field_item.value]?.reverse()?.map((item, index) => (\r\n                                  <div className={s.text_item} key={index}>\r\n                                    {`${string_date_(item.date_start)} ${item.user_name} - ${\r\n                                      item.result?.balls\r\n                                    } ${checkLanguageConst('points', auth.translations)}`}\r\n                                  </div>\r\n                                ))}\r\n                              </div>\r\n                            ) : null}\r\n                          </div>\r\n                        ) : field_item.type === 'input_tooltip_course' ? (\r\n                          <div className={s.tooltip_course}>\r\n                            <div className={s.tooltip_course_text}>{data_item[field_item.value]?.length}</div>\r\n                            {data_item[field_item.value]?.length ? (\r\n                              <div className={s.tooltip}>\r\n                                {data_item[field_item.value]?.reverse()?.map((item, index) => (\r\n                                  <div className={s.text_item} key={index}>\r\n                                    {`${string_date_(item.date_start)} ${item.user_name} - ${item.proc_lessons}%`}\r\n                                  </div>\r\n                                ))}\r\n                              </div>\r\n                            ) : null}\r\n                          </div>\r\n                        ) : field_item.type === 'input_tooltip_like' ? (\r\n                          <div className={s.tooltip_course}>\r\n                            <div className={s.tooltip_course_text}>{data_item[field_item.value]?.length}</div>\r\n                            {data_item[field_item.value]?.length ? (\r\n                              <div className={s.tooltip}>\r\n                                {data_item[field_item.value]?.reverse()?.map((item, index) => (\r\n                                  <div className={s.text_item} key={index}>\r\n                                    {`${string_date_(item.date)} ${item.user_name}`}\r\n                                  </div>\r\n                                ))}\r\n                              </div>\r\n                            ) : null}\r\n                          </div>\r\n                        ) : !data_item[field_item.value] ? (\r\n                          field_item.value === 'is_admin' ? (\r\n                            checkLanguageConst('Client', auth.translations)\r\n                          ) : (\r\n                            ''\r\n                          )\r\n                        ) : field_item.type === 'bool' ? (\r\n                          checkLanguageConst(\r\n                            field_item.list_value?.find((element) => element.value === data_item[field_item.value])?.label,\r\n                            auth.translations\r\n                          )\r\n                        ) : field_item.type === 'box' ? (\r\n                          field_item.value === 'language' ? (\r\n                            StringLang(data_item[field_item.value])\r\n                          ) : (\r\n                            langsStringTo(\r\n                              data_item[field_item.value].slice(\r\n                                0,\r\n                                data_item[field_item.value].length > 5 ? 5 : data_item[field_item.value].length\r\n                              )\r\n                            )\r\n                          )\r\n                        ) : field_item.type === 'date' ? (\r\n                          string_date(data_item[field_item.value])\r\n                        ) : // data_item[field_item.value]\r\n                        field_item.translation ? (\r\n                          // 'kkk'\r\n                          data_item[field_item.value].length ? (\r\n                            String(checkLanguage(data_item[field_item.value], auth.language)).length > 35 ? (\r\n                              checkLanguage(data_item[field_item.value], auth.language)?.slice(0, 35) + '...'\r\n                            ) : (\r\n                              checkLanguage(data_item[field_item.value], auth.language)\r\n                            )\r\n                          ) : (\r\n                            ''\r\n                          )\r\n                        ) : data_item[field_item.value].length ? (\r\n                          String(data_item[field_item.value]).length > 35 ? (\r\n                            data_item[field_item.value].slice(0, 35) + '...'\r\n                          ) : (\r\n                            data_item[field_item.value]\r\n                          )\r\n                        ) : (\r\n                          // ''\r\n                          data_item[field_item.value]\r\n                        )}\r\n                      </td>\r\n                      {/*==============Кнопки для переноса=================*/}\r\n                      {/*{(table_name && counter === 1) ? (*/}\r\n                      {/*    <td className={GlobalStyle.CustomFontRegular + ' ' + s.td}>*/}\r\n                      {/*        <div className={s.wrapper_buttons}>*/}\r\n                      {/*            {index > 0 ? (*/}\r\n                      {/*                <div*/}\r\n                      {/*                    className={s.button_reordering}*/}\r\n                      {/*                    onClick={(e) => {*/}\r\n                      {/*                        e.stopPropagation();*/}\r\n                      {/*                        reordering(data_item, index, \"top\");}*/}\r\n                      {/*                    }*/}\r\n                      {/*                >*/}\r\n                      {/*                    <GlobalSvgSelector id=\"reordering_top\" />*/}\r\n                      {/*                </div>*/}\r\n                      {/*            ): (<div className={s.default_reordering} />)}*/}\r\n                      {/*            {index < data.length - 1 ? (*/}\r\n                      {/*                <div*/}\r\n                      {/*                    className={s.button_reordering}*/}\r\n                      {/*                    onClick={(e) => {*/}\r\n                      {/*                        e.stopPropagation();*/}\r\n                      {/*                        reordering(data_item, index, \"bottom\");}*/}\r\n                      {/*                    }*/}\r\n                      {/*                >*/}\r\n                      {/*                    <GlobalSvgSelector id=\"reordering_bottom\" />*/}\r\n                      {/*                </div>*/}\r\n                      {/*            ): (<div className={s.default_reordering} />)}*/}\r\n                      {/*        </div>*/}\r\n                      {/*    </td>*/}\r\n                      {/*): null}*/}\r\n                      {/*==============Кнопки для переноса=================*/}\r\n                    </>\r\n                  );\r\n              })}\r\n            </tr>\r\n          ))\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport s from './PaginationTable.module.scss';\r\nimport GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport {usePopupForm} from \"../../hooks/usePopupForm\";\r\nimport logo from '../../assets/images/logo-min.png';\r\nimport {Link} from \"react-router-dom\";\r\nimport {AuthContext} from \"../../context/authContext\";\r\nimport {GlobalSvgSelector} from \"../../assets/icons/global/GlobalSvgSelector\";\r\n\r\n\r\nexport const PaginationTable = ({page, endPage, startPage, getData, setPage}) => {\r\n\r\n    return (\r\n        <div className={s.root}>\r\n            <div className={page !== startPage ? s.next_button_active : s.next_button} onClick={() => page !== startPage ? getData(page-1) : false}>\r\n                <GlobalSvgSelector id='arrow-left' />\r\n            </div>\r\n            <div className={s.liner}>\r\n                <div className={GlobalStyle.CustomFontBold + ' ' + s.current}>\r\n                    {page + 1}\r\n                </div>\r\n                <div className={GlobalStyle.CustomFontBold + ' ' + s.hr}>\r\n                    /\r\n                </div>\r\n                <div className={GlobalStyle.CustomFontMedium + ' ' + s.end}>\r\n                    {endPage + 1}\r\n                </div>\r\n            </div>\r\n            <div className={page !== endPage ? s.next_button_active : s.next_button} onClick={() => page !== endPage ? getData(page+1) : false}>\r\n                <GlobalSvgSelector id='arrow-right' />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./Search.module.scss\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport { optionAudio } from \"../../constants/OptionsTable\";\r\nimport GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport { Form } from \"../tableCard/Forml\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nconst Modal = ({\r\n    section,\r\n    value,\r\n    callback,\r\n    handler,\r\n    list,\r\n    exitHandler,\r\n    placeholder,\r\n    translations,\r\n}) => {\r\n    const [active, setActive] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setActive(value);\r\n    }, [value]);\r\n\r\n    const newActive = (data) => {\r\n        callback(data);\r\n        setActive(data);\r\n    };\r\n\r\n    const itemHandler = () => {\r\n        handler(0, \"false\", { [section]: active });\r\n        exitHandler();\r\n    };\r\n\r\n    return (\r\n        <div className={s.root_popup}>\r\n            <div className={s.popup_header}>\r\n                <div\r\n                    className={\r\n                        GlobalStyle.BellotaFontRegular + \" \" + s.popup_label\r\n                    }\r\n                >\r\n                    {checkLanguageConst(placeholder, translations)}\r\n                </div>\r\n                <div className={s.button_close} onClick={() => exitHandler()}>\r\n                    <GlobalSvgSelector id=\"close\" />\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={\r\n                    GlobalStyle.CustomFontRegular + \" \" + s.placeholder_i\r\n                }\r\n            >\r\n                {checkLanguageConst(list?.label, translations)}\r\n            </div>\r\n            <div className={s.wrapper_bool}>\r\n                <div className={s.root_click}>\r\n                    <div\r\n                        className={s.button_input}\r\n                        onClick={() => newActive(\"\")}\r\n                    >\r\n                        <div\r\n                            className={\r\n                                active?.length === 0 ? s.clip_active : s.clip\r\n                            }\r\n                        />\r\n                        <div className={s.clip_text}>\r\n                            {checkLanguageConst(\"All\", translations)}\r\n                        </div>\r\n                    </div>\r\n                    {list?.list_value\r\n                        ?.slice(0, list?.list_value.length / 2)\r\n                        .map((item, index) => (\r\n                            <div\r\n                                className={s.button_input}\r\n                                onClick={() => newActive(item.value)}\r\n                            >\r\n                                <div\r\n                                    className={\r\n                                        active === item.value\r\n                                            ? s.clip_active\r\n                                            : s.clip\r\n                                    }\r\n                                />\r\n                                <div className={s.clip_text}>\r\n                                    {checkLanguageConst(\r\n                                        item.label,\r\n                                        translations\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                </div>\r\n                <div className={s.root_click}>\r\n                    {list?.list_value\r\n                        ?.slice(\r\n                            list?.list_value.length / 2,\r\n                            list?.list_value.length\r\n                        )\r\n                        .map((item, index) => (\r\n                            <div\r\n                                className={s.button_input}\r\n                                onClick={() => newActive(item.value)}\r\n                            >\r\n                                <div\r\n                                    className={\r\n                                        active === item.value\r\n                                            ? s.clip_active\r\n                                            : s.clip\r\n                                    }\r\n                                />\r\n                                <div className={s.clip_text}>\r\n                                    {checkLanguageConst(\r\n                                        item.label,\r\n                                        translations\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                </div>\r\n            </div>\r\n            <div className={s.popup_liner_button}>\r\n                <div\r\n                    className={s.popup_button_ok}\r\n                    onClick={() => itemHandler()}\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular +\r\n                            \" \" +\r\n                            s.popup_button_ok_text\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\"Apply\", translations)}\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className={s.popup_button_exit}\r\n                    onClick={() => exitHandler()}\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular +\r\n                            \" \" +\r\n                            s.popup_button_exit_text\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\"Cancel\", translations)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Filter = ({\r\n    width,\r\n    section,\r\n    value,\r\n    callback,\r\n    placeholder,\r\n    handler,\r\n    list,\r\n    translations,\r\n}) => {\r\n    const popupForm = usePopupForm();\r\n\r\n    const exitHandler = () => {\r\n        popupForm.exitHandler();\r\n    };\r\n\r\n    const openModal = () => {\r\n        popupForm.openHandler(\r\n            <Modal\r\n                translations={translations}\r\n                section={section}\r\n                value={value}\r\n                callback={callback}\r\n                handler={handler}\r\n                list={list}\r\n                exitHandler={exitHandler}\r\n                placeholder={placeholder}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{ width: width ? width : 350 }}\r\n            className={s.root}\r\n            onClick={() => openModal()}\r\n        >\r\n            <div className={s.input}>\r\n                <div\r\n                    className={\r\n                        GlobalStyle.CustomFontRegular +\r\n                        \" \" +\r\n                        (value ? s.value : s.placeholder)\r\n                    }\r\n                >\r\n                    {checkLanguageConst(\r\n                        value\r\n                            ? list.list_value?.find(\r\n                                  (item) => item.value === value\r\n                              ).label\r\n                            : placeholder,\r\n                        translations\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className={s.button}>\r\n                <GlobalSvgSelector id=\"filter\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./TextCounter.module.scss\";\r\nimport { GlobalSvgSelector } from \"../../assets/icons/global/GlobalSvgSelector\";\r\nimport { optionAudio } from \"../../constants/OptionsTable\";\r\nimport GlobalStyle from \"../GlobalStyle.module.scss\";\r\nimport { Form } from \"../tableCard/Forml\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const TextCounter = ({ value, translations }) => {\r\n    return (\r\n        <div className={GlobalStyle.CustomFontRegular + \" \" + s.root}>\r\n            {checkLanguageConst(\"Quantity\", translations)}: {value}\r\n        </div>\r\n    );\r\n};\r\n","export const sortRoot = async (url, data, sortData, status, request, auth) => {\r\n    return await request(url, 'POST', {\r\n        data,\r\n        sortData,\r\n        status\r\n    }, {\r\n        Authorization: auth.token\r\n    });\r\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport s from \"./Users.module.scss\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { Search } from \"../../components/search/Search\";\r\nimport {\r\n  optionCreateUser,\r\n  optionUser,\r\n  optionUserView,\r\n} from \"../../constants/OptionsTable\";\r\nimport { TableCard } from \"../../components/tableCard/TableCard\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { PaginationTable } from \"../../components/paginationTable/PaginationTable\";\r\nimport GlobalStyle from \"../../components/GlobalStyle.module.scss\";\r\nimport { Form } from \"../../components/tableCard/Forml\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport { Filter } from \"../../components/filter/Filter\";\r\nimport { TextCounter } from \"../../components/textCounter/TextCounter\";\r\nimport { sortRoot } from \"../../components/tableCard/functional\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const Users = () => {\r\n  const auth = useContext(AuthContext);\r\n  const popupForm = usePopupForm();\r\n  const [data, setData] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [endPage, setEndPage] = useState(0);\r\n  const [startPage, setStartPage] = useState(0);\r\n  const { request, error, clearError, loading } = useHttp();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [is_admin, setIs_admin] = useState(\"\");\r\n  const [access, setAccess] = useState(\"\");\r\n  const [language, setLanguage] = useState(\"\");\r\n  const [data_length, set_data_length] = useState(0);\r\n\r\n  const filtersData = (new_data) => {\r\n    setData([...new_data]);\r\n  };\r\n\r\n  const getData = async (\r\n    page_,\r\n    rel,\r\n    data_search,\r\n    sort,\r\n    sortData,\r\n    sortStatus\r\n  ) => {\r\n    page_ = page_ ? page_ : page ? page : 0;\r\n    let search_ = data_search?.search\r\n      ? data_search.search\r\n      : search?.length > 0\r\n      ? search\r\n      : \"null\";\r\n    let is_admin_ = data_search?.is_admin ? data_search.is_admin : \"null\";\r\n    // typeof data_search?.is_admin === \"boolean\" ? data_search.is_admin : \"null\";\r\n    let access_ = data_search?.access ? data_search.access : \"null\";\r\n    let language_ = data_search?.language ? data_search.language : \"null\";\r\n    if (rel === \"null\") {\r\n      search_ = \"null\";\r\n      is_admin_ = \"null\";\r\n      access_ = \"null\";\r\n      setSearch(\"\");\r\n      setIs_admin(\"\");\r\n      setAccess(\"\");\r\n      setLanguage(\"\");\r\n    }\r\n\r\n    // setSearch(search ? (search?.length > 0 ? search : \"null\") : \"null\");\r\n    try {\r\n      let answer;\r\n      if (sort) {\r\n        answer = await sortRoot(\r\n          `/api/admin_panel/users/sort`,\r\n          {\r\n            page: page_,\r\n            full_name: search_,\r\n            is_admin: is_admin_,\r\n            access: access_,\r\n            language: language_,\r\n          },\r\n          sortData,\r\n          sortStatus,\r\n          request,\r\n          auth\r\n        );\r\n      } else\r\n        answer = await request(\r\n          `/api/admin_panel/users/${page_}/${search_}/${is_admin_}/${access_}/${language_}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            Authorization: auth.token,\r\n          }\r\n        );\r\n      setPage(page);\r\n      setEndPage(answer.count_page);\r\n      setData(answer.data);\r\n      set_data_length(answer.count_data);\r\n    } catch (e) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData(0, \"null\");\r\n  }, []);\r\n\r\n  const creteHandler = () => {\r\n    popupForm.openHandler(\r\n      <Form\r\n        data={null}\r\n        option={optionCreateUser}\r\n        reload={getData}\r\n        optionEdit={optionUser}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={s.root}>\r\n      <div className={s.header}>\r\n        <div className={s.wrapper_header}>\r\n          <Search\r\n            translations={auth.translations}\r\n            value={search}\r\n            callback={setSearch}\r\n            placeholder={\"SearchByLastName\"}\r\n            handler={getData}\r\n          />\r\n          <Filter\r\n            translations={auth.translations}\r\n            width={200}\r\n            section={\"is_admin\"}\r\n            value={is_admin}\r\n            callback={setIs_admin}\r\n            placeholder={\"FilterByRole\"}\r\n            handler={getData}\r\n            list={optionUserView.fields[4]}\r\n          />\r\n          <Filter\r\n            translations={auth.translations}\r\n            width={270}\r\n            section={\"access\"}\r\n            value={access}\r\n            callback={setAccess}\r\n            placeholder={\"FilterByLevel\"}\r\n            handler={getData}\r\n            list={optionUserView.fields[5]}\r\n          />\r\n          <Filter\r\n            translations={auth.translations}\r\n            width={210}\r\n            section={\"language\"}\r\n            value={language}\r\n            callback={setLanguage}\r\n            placeholder={\"FilterByLanguage\"}\r\n            handler={getData}\r\n            list={optionUser.fields[0].list_menu_fields[3][0]}\r\n          />\r\n          <TextCounter translations={auth.translations} value={data_length} />\r\n        </div>\r\n        <div className={s.create_button_ok} onClick={() => creteHandler()}>\r\n          <div\r\n            className={\r\n              GlobalStyle.CustomFontRegular + \" \" + s.create_button_ok_text\r\n            }\r\n          >\r\n            {checkLanguageConst(\"AddNewUser\", auth.translations)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <TableCard\r\n        option={optionUserView}\r\n        optionEdit={optionUser}\r\n        data={data}\r\n        loading={loading}\r\n        reload={getData}\r\n        setData={filtersData}\r\n        page={page}\r\n      />\r\n      <div className={s.footer}>\r\n        <PaginationTable\r\n          page={page}\r\n          endPage={endPage}\r\n          startPage={startPage}\r\n          getData={setPage}\r\n          search={search}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport s from \"./Poster.module.scss\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { Search } from \"../../components/search/Search\";\r\nimport {\r\n    optionCreatePoster,\r\n    optionCreateVideo,\r\n    optionPoster,\r\n    sortNumberFunction,\r\n} from \"../../constants/OptionsTable\";\r\nimport { TableCard } from \"../../components/tableCard/TableCard\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { PaginationTable } from \"../../components/paginationTable/PaginationTable\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport { Form } from \"../../components/tableCard/Forml\";\r\nimport GlobalStyle from \"../../components/GlobalStyle.module.scss\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const Poster = () => {\r\n    const auth = useContext(AuthContext);\r\n    const popupForm = usePopupForm();\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [endPage, setEndPage] = useState(0);\r\n    const [startPage, setStartPage] = useState(0);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [search, setSearch] = useState(\"null\");\r\n\r\n    const filtersData = (new_data) => {\r\n        setData([...new_data]);\r\n    };\r\n\r\n    const getData = async (page, rel) => {\r\n        page = page ? page : 0;\r\n        let search_ = search?.length > 0 ? search : \"null\";\r\n        if (rel === \"null\") {\r\n            search_ = \"null\";\r\n            setSearch(\"\");\r\n        }\r\n        try {\r\n            const answer = await request(\r\n                `/api/admin_panel/live_sound/${page}/${search_}`,\r\n                \"GET\",\r\n                null,\r\n                {\r\n                    Authorization: auth.token,\r\n                }\r\n            );\r\n            setPage(page);\r\n            setEndPage(answer.count_page);\r\n            setData(sortNumberFunction(answer.data));\r\n        } catch (e) {}\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData(0, \"null\");\r\n    }, []);\r\n\r\n    const creteHandler = () => {\r\n        popupForm.openHandler(\r\n            <Form\r\n                data={null}\r\n                option={optionCreatePoster}\r\n                reload={getData}\r\n                optionEdit={optionPoster}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={s.root}>\r\n            <div className={s.header}>\r\n                <Search\r\n                    translations={auth.translations}\r\n                    value={search}\r\n                    callback={setSearch}\r\n                    placeholder={\"SearchByName\"}\r\n                    handler={getData}\r\n                />\r\n                <div\r\n                    className={s.create_button_ok}\r\n                    onClick={() => creteHandler()}\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular +\r\n                            \" \" +\r\n                            s.create_button_ok_text\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\"AddNewPoster\", auth.translations)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <TableCard\r\n                option={optionPoster}\r\n                data={data}\r\n                loading={loading}\r\n                reload={getData}\r\n                setData={filtersData}\r\n                table_name={\"live_sound\"}\r\n                page={page}\r\n            />\r\n            <div className={s.footer}>\r\n                <PaginationTable\r\n                    page={page}\r\n                    endPage={endPage}\r\n                    startPage={startPage}\r\n                    getData={setPage}\r\n                    search={search}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport s from \"./Video.module.scss\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { Search } from \"../../components/search/Search\";\r\nimport {\r\n    optionCreateVideo,\r\n    optionEditVideo,\r\n    optionVideo,\r\n    sortNumberFunction,\r\n} from \"../../constants/OptionsTable\";\r\nimport { TableCard } from \"../../components/tableCard/TableCard\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { PaginationTable } from \"../../components/paginationTable/PaginationTable\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\nimport GlobalStyle from \"../../components/GlobalStyle.module.scss\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport { Form } from \"../../components/tableCard/Forml\";\r\nimport { TextCounter } from \"../../components/textCounter/TextCounter\";\r\nimport { sortRoot } from \"../../components/tableCard/functional\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const Video = () => {\r\n    const auth = useContext(AuthContext);\r\n    const popupForm = usePopupForm();\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [endPage, setEndPage] = useState(0);\r\n    const [startPage, setStartPage] = useState(0);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [search, setSearch] = useState(\"null\");\r\n    const [data_length, set_data_length] = useState(0);\r\n\r\n    const filtersData = (new_data) => {\r\n        setData([...new_data]);\r\n    };\r\n\r\n    const getData = async (\r\n        page,\r\n        rel,\r\n        data_search,\r\n        sort,\r\n        sortData,\r\n        sortStatus\r\n    ) => {\r\n        page = page ? page : 0;\r\n        let search_ = search?.length > 0 ? search : \"null\";\r\n        if (rel === \"null\") {\r\n            search_ = \"null\";\r\n            setSearch(\"\");\r\n        }\r\n        try {\r\n            let answer;\r\n            if (sort) {\r\n                answer = await sortRoot(\r\n                    `/api/admin_panel/video/sort`,\r\n                    {\r\n                        page,\r\n                        search: search_,\r\n                    },\r\n                    sortData,\r\n                    sortStatus,\r\n                    request,\r\n                    auth\r\n                );\r\n            } else\r\n                answer = await request(\r\n                    `/api/admin_panel/video/${page}/${search_}`,\r\n                    \"GET\",\r\n                    null,\r\n                    {\r\n                        Authorization: auth.token,\r\n                    }\r\n                );\r\n            // Выполнить сортировку по полю number\r\n            setPage(page);\r\n            setEndPage(answer?.count_page);\r\n            setData(sortNumberFunction(answer?.data));\r\n            set_data_length(answer.count_data);\r\n        } catch (e) {}\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData(0, \"null\");\r\n    }, []);\r\n\r\n    const creteHandler = () => {\r\n        popupForm.openHandler(\r\n            <Form\r\n                data={null}\r\n                option={optionCreateVideo}\r\n                reload={getData}\r\n                optionEdit={optionVideo}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={s.root}>\r\n            <div className={s.header}>\r\n                <div className={s.wrapper_header}>\r\n                    <Search\r\n                        translations={auth.translations}\r\n                        value={search}\r\n                        callback={setSearch}\r\n                        placeholder={\"SearchByName\"}\r\n                        handler={getData}\r\n                    />\r\n                    <TextCounter\r\n                        translations={auth.translations}\r\n                        value={data_length}\r\n                    />\r\n                </div>\r\n                <div\r\n                    className={s.create_button_ok}\r\n                    onClick={() => creteHandler()}\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular +\r\n                            \" \" +\r\n                            s.create_button_ok_text\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\"AddNewVideo\", auth.translations)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <TableCard\r\n                option={optionVideo}\r\n                data={data}\r\n                loading={loading}\r\n                reload={getData}\r\n                setData={filtersData}\r\n                optionEdit={optionEditVideo}\r\n                table_name={\"video\"}\r\n                page={page}\r\n            />\r\n            <div className={s.footer}>\r\n                <PaginationTable\r\n                    page={page}\r\n                    endPage={endPage}\r\n                    startPage={startPage}\r\n                    getData={setPage}\r\n                    search={search}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport s from \"./Video.module.scss\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { Search } from \"../../components/search/Search\";\r\nimport { Filter } from \"../../components/filter/Filter\";\r\nimport {\r\n    optionCreateAudio,\r\n    optionAudio,\r\n    optionEditAudio,\r\n    sortNumberFunction,\r\n} from \"../../constants/OptionsTable\";\r\nimport { TableCard } from \"../../components/tableCard/TableCard\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { PaginationTable } from \"../../components/paginationTable/PaginationTable\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { ColorsStyles } from \"../../constants/ColorsStyles\";\r\nimport GlobalStyle from \"../../components/GlobalStyle.module.scss\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport { Form } from \"../../components/tableCard/Forml\";\r\nimport { TextCounter } from \"../../components/textCounter/TextCounter\";\r\nimport { httpServer } from \"../../const\";\r\nimport { sortRoot } from \"../../components/tableCard/functional\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const Audio = () => {\r\n    const auth = useContext(AuthContext);\r\n    const popupForm = usePopupForm();\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [endPage, setEndPage] = useState(0);\r\n    const [startPage, setStartPage] = useState(0);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [search, setSearch] = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n    const [genre, setGenre] = useState(\"\");\r\n    const [newData, setNewData] = useState(null);\r\n    const [data_length, set_data_length] = useState(0);\r\n\r\n    const filtersData = (new_data) => {\r\n        setData([...new_data]);\r\n    };\r\n\r\n    const getData = async (\r\n        page,\r\n        rel,\r\n        data_search,\r\n        sort,\r\n        sortData,\r\n        sortStatus\r\n    ) => {\r\n        page = page ? page : 0;\r\n        let search_ = data_search?.search\r\n            ? data_search.search\r\n            : search?.length > 0\r\n            ? search\r\n            : \"null\";\r\n        let category_ = data_search?.category ? data_search.category : \"null\";\r\n        let genre_ = data_search?.genre ? data_search.genre : \"null\";\r\n        if (rel === \"null\") {\r\n            search_ = \"null\";\r\n            category_ = \"null\";\r\n            genre_ = \"null\";\r\n            setSearch(\"\");\r\n            setCategory(\"\");\r\n            setGenre(\"\");\r\n        }\r\n        try {\r\n            let answer;\r\n            if (sort) {\r\n                answer = await sortRoot(\r\n                    `/api/admin_panel/audio/sort`,\r\n                    {\r\n                        page,\r\n                        search: search_,\r\n                        category: category_,\r\n                        genre: genre_,\r\n                    },\r\n                    sortData,\r\n                    sortStatus,\r\n                    request,\r\n                    auth\r\n                );\r\n            } else\r\n                answer = await request(\r\n                    `/api/admin_panel/audio/${page}/${search_}/${category_}/${genre_}`,\r\n                    \"GET\",\r\n                    null,\r\n                    {\r\n                        Authorization: auth.token,\r\n                    }\r\n                );\r\n            setPage(page);\r\n            setEndPage(answer.count_page);\r\n            setData(sortNumberFunction(answer.data));\r\n            set_data_length(answer.count_data);\r\n        } catch (e) {}\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData(0, \"null\");\r\n    }, []);\r\n\r\n    const creteHandler = () => {\r\n        popupForm.openHandler(\r\n            <Form\r\n                data={null}\r\n                option={optionCreateAudio}\r\n                reload={getData}\r\n                optionEdit={optionAudio}\r\n                setNewData={setNewData}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={s.root}>\r\n            <div className={s.header}>\r\n                <div className={s.wrapper_header}>\r\n                    <Search\r\n                        translations={auth.translations}\r\n                        value={search}\r\n                        callback={setSearch}\r\n                        placeholder={\"SearchByName\"}\r\n                        handler={getData}\r\n                    />\r\n                    <Filter\r\n                        translations={auth.translations}\r\n                        width={280}\r\n                        section={\"category\"}\r\n                        value={category}\r\n                        callback={setCategory}\r\n                        placeholder={\"FilterByCategory\"}\r\n                        handler={getData}\r\n                        list={optionAudio.fields[2]}\r\n                    />\r\n                    <Filter\r\n                        translations={auth.translations}\r\n                        width={280}\r\n                        section={\"genre\"}\r\n                        value={genre}\r\n                        callback={setGenre}\r\n                        placeholder={\"FilterByGenre\"}\r\n                        handler={getData}\r\n                        list={optionAudio.fields[5]}\r\n                    />\r\n                    <TextCounter\r\n                        translations={auth.translations}\r\n                        value={data_length}\r\n                    />\r\n                </div>\r\n                <div\r\n                    className={s.create_button_ok}\r\n                    onClick={() => creteHandler()}\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular +\r\n                            \" \" +\r\n                            s.create_button_ok_text\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\"AddNewAudio\", auth.translations)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <TableCard\r\n                option={optionAudio}\r\n                data={data}\r\n                loading={loading}\r\n                reload={getData}\r\n                setData={filtersData}\r\n                optionEdit={optionEditAudio}\r\n                table_name={\"audio\"}\r\n                page={page}\r\n            />\r\n            <div className={s.footer}>\r\n                <PaginationTable\r\n                    page={page}\r\n                    endPage={endPage}\r\n                    startPage={startPage}\r\n                    getData={setPage}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport s from \"./Tests.module.scss\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { Search } from \"../../components/search/Search\";\r\nimport {\r\n    optionCreatePoster,\r\n    optionCreateTests,\r\n    optionCreateVideo,\r\n    optionEditTests,\r\n    optionPoster,\r\n    optionTests,\r\n    sortNumberFunction,\r\n} from \"../../constants/OptionsTable\";\r\nimport { TableCard } from \"../../components/tableCard/TableCard\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { PaginationTable } from \"../../components/paginationTable/PaginationTable\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport { Form } from \"../../components/tableCard/Forml\";\r\nimport GlobalStyle from \"../../components/GlobalStyle.module.scss\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const Tests = () => {\r\n    const auth = useContext(AuthContext);\r\n    const popupForm = usePopupForm();\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [endPage, setEndPage] = useState(0);\r\n    const [startPage, setStartPage] = useState(0);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [search, setSearch] = useState(\"null\");\r\n\r\n    const filtersData = (new_data) => {\r\n        setData([...new_data]);\r\n    };\r\n\r\n    const getData = async (page, rel) => {\r\n        page = page ? page : 0;\r\n        let search_ = search?.length > 0 ? search : \"null\";\r\n        if (rel === \"null\") {\r\n            search_ = \"null\";\r\n            setSearch(\"\");\r\n        }\r\n        try {\r\n            const answer = await request(\r\n                `/api/admin_panel/test/${page}/${search_}`,\r\n                \"GET\",\r\n                null,\r\n                {\r\n                    Authorization: auth.token,\r\n                }\r\n            );\r\n            setPage(page);\r\n            setEndPage(answer.count_page);\r\n            setData(sortNumberFunction(answer.data));\r\n        } catch (e) {}\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData(0, \"null\");\r\n    }, []);\r\n\r\n    const creteHandler = () => {\r\n        popupForm.openHandler(\r\n            <Form\r\n                data={null}\r\n                option={optionCreateTests}\r\n                reload={getData}\r\n                optionEdit={optionCreateTests}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={s.root}>\r\n            <div className={s.header}>\r\n                <Search\r\n                    translations={auth.translations}\r\n                    value={search}\r\n                    callback={setSearch}\r\n                    placeholder={\"SearchByName\"}\r\n                    handler={getData}\r\n                />\r\n                <div\r\n                    className={s.create_button_ok}\r\n                    onClick={() => creteHandler()}\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular +\r\n                            \" \" +\r\n                            s.create_button_ok_text\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\"AddNewTest\", auth.translations)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <TableCard\r\n                option={optionTests}\r\n                optionEdit={optionEditTests}\r\n                data={data}\r\n                loading={loading}\r\n                reload={getData}\r\n                setData={filtersData}\r\n                table_name={\"live_sound\"}\r\n                page={page}\r\n            />\r\n            <div className={s.footer}>\r\n                <PaginationTable\r\n                    page={page}\r\n                    endPage={endPage}\r\n                    startPage={startPage}\r\n                    getData={setPage}\r\n                    search={search}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport s from \"./Courses.module.scss\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { Search } from \"../../components/search/Search\";\r\nimport {\r\n    optionCourses,\r\n    optionCreateCourses,\r\n    optionCreatePoster,\r\n    optionCreateVideo,\r\n    optionEditCourses,\r\n    optionPoster,\r\n    sortNumberFunction,\r\n} from \"../../constants/OptionsTable\";\r\nimport { TableCard } from \"../../components/tableCard/TableCard\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { PaginationTable } from \"../../components/paginationTable/PaginationTable\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport { Form } from \"../../components/tableCard/Forml\";\r\nimport GlobalStyle from \"../../components/GlobalStyle.module.scss\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const Courses = () => {\r\n    const auth = useContext(AuthContext);\r\n    const popupForm = usePopupForm();\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [endPage, setEndPage] = useState(0);\r\n    const [startPage, setStartPage] = useState(0);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [search, setSearch] = useState(\"null\");\r\n\r\n    const filtersData = (new_data) => {\r\n        setData([...new_data]);\r\n    };\r\n\r\n    const getData = async (page, rel) => {\r\n        page = page ? page : 0;\r\n        let search_ = search?.length > 0 ? search : \"null\";\r\n        if (rel === \"null\") {\r\n            search_ = \"null\";\r\n            setSearch(\"\");\r\n        }\r\n        try {\r\n            const answer = await request(\r\n                `/api/admin_panel/courses/${page}/${search_}`,\r\n                \"GET\",\r\n                null,\r\n                {\r\n                    Authorization: auth.token,\r\n                }\r\n            );\r\n            setPage(page);\r\n            setEndPage(answer.count_page);\r\n            setData(sortNumberFunction(answer.data));\r\n        } catch (e) {}\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData(0, \"null\");\r\n    }, []);\r\n\r\n    const creteHandler = () => {\r\n        popupForm.openHandler(\r\n            <Form\r\n                data={null}\r\n                option={optionCreateCourses}\r\n                reload={getData}\r\n                optionEdit={optionCreateCourses}\r\n                wigth_panel={850}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={s.root}>\r\n            <div className={s.header}>\r\n                <Search\r\n                    translations={auth.translations}\r\n                    value={search}\r\n                    callback={setSearch}\r\n                    placeholder={\"SearchByName\"}\r\n                    handler={getData}\r\n                />\r\n                <div\r\n                    className={s.create_button_ok}\r\n                    onClick={() => creteHandler()}\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular +\r\n                            \" \" +\r\n                            s.create_button_ok_text\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\"AddNewCourse\", auth.translations)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <TableCard\r\n                optionEdit={optionEditCourses}\r\n                option={optionCourses}\r\n                data={data}\r\n                loading={loading}\r\n                reload={getData}\r\n                setData={filtersData}\r\n                table_name={\"live_sound\"}\r\n                wigth_panel={850}\r\n                page={page}\r\n            />\r\n            <div className={s.footer}>\r\n                <PaginationTable\r\n                    page={page}\r\n                    endPage={endPage}\r\n                    startPage={startPage}\r\n                    getData={setPage}\r\n                    search={search}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport s from \"./Users.module.scss\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { Search } from \"../../components/search/Search\";\r\nimport {\r\n    optionCreateUserFin,\r\n    optionUser,\r\n    optionUserFin,\r\n    optionUserView,\r\n} from \"../../constants/OptionsTable\";\r\nimport { TableCard } from \"../../components/tableCard/TableCard\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { PaginationTable } from \"../../components/paginationTable/PaginationTable\";\r\nimport GlobalStyle from \"../../components/GlobalStyle.module.scss\";\r\nimport { Form } from \"../../components/tableCard/Forml\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport { Filter } from \"../../components/filter/Filter\";\r\nimport { TextCounter } from \"../../components/textCounter/TextCounter\";\r\nimport { sortRoot } from \"../../components/tableCard/functional\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const UsersFin = () => {\r\n    const auth = useContext(AuthContext);\r\n    const popupForm = usePopupForm();\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [endPage, setEndPage] = useState(0);\r\n    const [startPage, setStartPage] = useState(0);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [search, setSearch] = useState(\"\");\r\n    const [is_admin, setIs_admin] = useState(\"\");\r\n    const [access, setAccess] = useState(\"\");\r\n    const [language, setLanguage] = useState(\"\");\r\n    const [data_length, set_data_length] = useState(0);\r\n\r\n    const filtersData = (new_data) => {\r\n        setData([...new_data]);\r\n    };\r\n\r\n    const getData = async (\r\n        page_,\r\n        rel,\r\n        data_search,\r\n        sort,\r\n        sortData,\r\n        sortStatus\r\n    ) => {\r\n        page_ = page_ ? page_ : page ? page : 0;\r\n        let search_ = data_search?.search\r\n            ? data_search.search\r\n            : search?.length > 0\r\n            ? search\r\n            : \"null\";\r\n        let is_admin_ = data_search?.is_admin ? data_search.is_admin : \"null\";\r\n        let access_ = data_search?.access ? data_search.access : \"null\";\r\n        let language_ = data_search?.language ? data_search.language : \"null\";\r\n        if (rel === \"null\") {\r\n            search_ = \"null\";\r\n            is_admin_ = \"null\";\r\n            access_ = \"null\";\r\n            setSearch(\"\");\r\n            setIs_admin(\"\");\r\n            setAccess(\"\");\r\n            setLanguage(\"\");\r\n        }\r\n\r\n        // setSearch(search ? (search?.length > 0 ? search : \"null\") : \"null\");\r\n        try {\r\n            let answer;\r\n            answer = await request(\r\n                `/api/admin_panel/users_fin/${page_}/${search_}/${is_admin_}/${access_}/${language_}`,\r\n                \"GET\",\r\n                null,\r\n                {\r\n                    Authorization: auth.token,\r\n                }\r\n            );\r\n            setPage(page);\r\n            setEndPage(answer.count_page);\r\n            setData(answer.data);\r\n            set_data_length(answer.count_data);\r\n        } catch (e) {}\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData(0, \"null\");\r\n    }, []);\r\n\r\n    const creteHandler = () => {\r\n        popupForm.openHandler(\r\n            <Form\r\n                data={null}\r\n                option={optionCreateUserFin}\r\n                reload={getData}\r\n                optionEdit={optionUserFin}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={s.root}>\r\n            <div className={s.header}>\r\n                <div className={s.wrapper_header}>\r\n                    <Search\r\n                        translations={auth.translations}\r\n                        value={search}\r\n                        callback={setSearch}\r\n                        placeholder={\"SearchByLastName\"}\r\n                        handler={getData}\r\n                    />\r\n                    <Filter\r\n                        translations={auth.translations}\r\n                        width={200}\r\n                        section={\"is_admin\"}\r\n                        value={is_admin}\r\n                        callback={setIs_admin}\r\n                        placeholder={\"FilterByRole\"}\r\n                        handler={getData}\r\n                        list={optionUserView.fields[4]}\r\n                    />\r\n                    <Filter\r\n                        translations={auth.translations}\r\n                        width={270}\r\n                        section={\"access\"}\r\n                        value={access}\r\n                        callback={setAccess}\r\n                        placeholder={\"FilterByLevel\"}\r\n                        handler={getData}\r\n                        list={optionUserView.fields[5]}\r\n                    />\r\n                    <Filter\r\n                        translations={auth.translations}\r\n                        width={210}\r\n                        section={\"language\"}\r\n                        value={language}\r\n                        callback={setLanguage}\r\n                        placeholder={\"FilterByLanguage\"}\r\n                        handler={getData}\r\n                        list={optionUser.fields[0].list_menu_fields[3][0]}\r\n                    />\r\n                    <TextCounter value={data_length} />\r\n                </div>\r\n                <div\r\n                    className={s.create_button_ok}\r\n                    onClick={() => creteHandler()}\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular +\r\n                            \" \" +\r\n                            s.create_button_ok_text\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\"AddNewUser\", auth.translations)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <TableCard\r\n                option={optionUserView}\r\n                optionEdit={optionUserFin}\r\n                data={data}\r\n                loading={loading}\r\n                reload={getData}\r\n                setData={filtersData}\r\n                page={page}\r\n            />\r\n            <div className={s.footer}>\r\n                <PaginationTable\r\n                    page={page}\r\n                    endPage={endPage}\r\n                    startPage={startPage}\r\n                    getData={setPage}\r\n                    search={search}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport s from \"./Lengs.module.scss\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport {\r\n    optionCreateLangs,\r\n    optionEditLangs,\r\n} from \"../../constants/OptionsTable\";\r\nimport { TableCard } from \"../../components/tableCard/TableCard\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { PaginationTable } from \"../../components/paginationTable/PaginationTable\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport { Form } from \"../../components/tableCard/Forml\";\r\nimport GlobalStyle from \"../../components/GlobalStyle.module.scss\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const Lengs = () => {\r\n    const auth = useContext(AuthContext);\r\n    const popupForm = usePopupForm();\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [endPage, setEndPage] = useState(0);\r\n    const [startPage, setStartPage] = useState(0);\r\n    const { request, error, clearError, loading } = useHttp();\r\n\r\n    const filtersData = (new_data) => {\r\n        setData([...new_data]);\r\n    };\r\n\r\n    const getData = async (page, rel) => {\r\n        try {\r\n            const answer = await request(\r\n                `/api/admin_panel/lengs/`,\r\n                \"GET\",\r\n                null,\r\n                {\r\n                    Authorization: auth.token,\r\n                }\r\n            );\r\n            setData(answer);\r\n        } catch (e) {}\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData(0, \"null\");\r\n    }, []);\r\n\r\n    const creteHandler = () => {\r\n        popupForm.openHandler(\r\n            <Form\r\n                data={null}\r\n                option={optionCreateLangs}\r\n                reload={getData}\r\n                optionEdit={optionEditLangs}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={s.root}>\r\n            <div className={s.header}>\r\n                <div\r\n                    className={\r\n                        GlobalStyle.CustomFontRegular + \" \" + s.header_text\r\n                    }\r\n                >\r\n                    {checkLanguageConst(\"Languages\", auth.translations)}\r\n                </div>\r\n                <div\r\n                    className={s.create_button_ok}\r\n                    onClick={() => creteHandler()}\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular +\r\n                            \" \" +\r\n                            s.create_button_ok_text\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\r\n                            \"AddNewLanguage\",\r\n                            auth.translations\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <TableCard\r\n                option={optionEditLangs}\r\n                data={data}\r\n                loading={loading}\r\n                reload={getData}\r\n                setData={filtersData}\r\n                // table_name={\"live_sound\"}\r\n                page={page}\r\n            />\r\n            <div className={s.footer}>\r\n                <PaginationTable\r\n                    page={page}\r\n                    endPage={endPage}\r\n                    startPage={startPage}\r\n                    getData={setPage}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport s from \"./Playlist.module.scss\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { Search } from \"../../components/search/Search\";\r\nimport {\r\n    optionCreatePlaylist,\r\n    optionCreateTests,\r\n    optionEditTests,\r\n    optionPlaylist,\r\n    optionTests,\r\n    sortNumberFunction,\r\n} from \"../../constants/OptionsTable\";\r\nimport { TableCard } from \"../../components/tableCard/TableCard\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\nimport { PaginationTable } from \"../../components/paginationTable/PaginationTable\";\r\nimport { usePopupForm } from \"../../hooks/usePopupForm\";\r\nimport { Form } from \"../../components/tableCard/Forml\";\r\nimport GlobalStyle from \"../../components/GlobalStyle.module.scss\";\r\nimport { checkLanguageConst } from \"../../hooks/translashion\";\r\n\r\nexport const Playlist = () => {\r\n    const auth = useContext(AuthContext);\r\n    const popupForm = usePopupForm();\r\n    const [data, setData] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [endPage, setEndPage] = useState(0);\r\n    const [startPage, setStartPage] = useState(0);\r\n    const { request, error, clearError, loading } = useHttp();\r\n    const [search, setSearch] = useState(\"null\");\r\n\r\n    const filtersData = (new_data) => {\r\n        setData([...new_data]);\r\n    };\r\n\r\n    const getData = async (page, rel) => {\r\n        page = page ? page : 0;\r\n        let search_ = search?.length > 0 ? search : \"null\";\r\n        if (rel === \"null\") {\r\n            search_ = \"null\";\r\n            setSearch(\"\");\r\n        }\r\n        try {\r\n            const answer = await request(\r\n                `/api/admin_panel/playlist/${search_}`,\r\n                \"GET\",\r\n                null,\r\n                {\r\n                    Authorization: auth.token,\r\n                }\r\n            );\r\n            setPage(page);\r\n            setEndPage(answer.count_page);\r\n            setData(sortNumberFunction(answer.data));\r\n        } catch (e) {}\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData(0, \"null\");\r\n    }, []);\r\n\r\n    const creteHandler = () => {\r\n        popupForm.openHandler(\r\n            <Form\r\n                data={null}\r\n                option={optionCreatePlaylist}\r\n                reload={getData}\r\n                optionEdit={optionCreatePlaylist}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={s.root}>\r\n            <div className={s.header}>\r\n                <Search\r\n                    translations={auth.translations}\r\n                    value={search}\r\n                    callback={setSearch}\r\n                    placeholder={\"SearchByName\"}\r\n                    handler={getData}\r\n                />\r\n                <div\r\n                    className={s.create_button_ok}\r\n                    onClick={() => creteHandler()}\r\n                >\r\n                    <div\r\n                        className={\r\n                            GlobalStyle.CustomFontRegular +\r\n                            \" \" +\r\n                            s.create_button_ok_text\r\n                        }\r\n                    >\r\n                        {checkLanguageConst(\r\n                            \"AddNewPlaylist\",\r\n                            auth.translations\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <TableCard\r\n                option={optionPlaylist}\r\n                optionEdit={optionCreatePlaylist}\r\n                data={data}\r\n                loading={loading}\r\n                reload={getData}\r\n                setData={filtersData}\r\n                table_name={\"live_sound\"}\r\n                page={page}\r\n            />\r\n            <div className={s.footer}>\r\n                <PaginationTable\r\n                    page={page}\r\n                    endPage={endPage}\r\n                    startPage={startPage}\r\n                    getData={setPage}\r\n                    search={search}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, {useState} from \"react\";\r\nimport {PopupFormContext} from '../context/PopupFormContext';\r\n\r\nexport const PopupFormProvider = ({children, ...props}) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [data, setData] = useState(null);\r\n\r\n    const openHandler = (new_data) => {\r\n        setData(new_data);\r\n        setIsOpen(true);\r\n    }\r\n\r\n    const exitHandler = () => {\r\n        setData(null);\r\n        setIsOpen(false);\r\n    }\r\n\r\n    return <PopupFormContext.Provider\r\n        value={{\r\n            isOpen,\r\n            data,\r\n            openHandler,\r\n            exitHandler,\r\n        }}\r\n        {...props}\r\n    >\r\n        {children}\r\n    </PopupFormContext.Provider>\r\n}\r\n","import React from 'react';\r\nimport s from './PopupForm.module.scss';\r\nimport {usePopupForm} from \"../../hooks/usePopupForm\";\r\n\r\n\r\nexport const PopupForm = () => {\r\n    const rootPopup = usePopupForm();\r\n\r\n    if (!rootPopup.isOpen) {\r\n        return null;\r\n    }\r\n\r\n    const folHandler = (e) => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div className={s.blur} onClick={() => rootPopup.exitHandler()}>\r\n            <div className={s.root} onClick={(e) => folHandler(e)}>\r\n                {rootPopup.data}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport './Settings/styles/index.scss';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport {AuthContext} from './context/authContext';\r\nimport {createTheme} from '@mui/material/styles';\r\nimport ThemeProvider from '@mui/material/styles/ThemeProvider';\r\nimport {useAuth} from './hooks/auth.hook';\r\nimport {useRoutes} from './Routes';\r\nimport {PopupFormProvider} from './provider/PopupFormProvider';\r\nimport {PopupForm} from './components/popupForm/PopupForm';\r\nimport DateAdapter from '@mui/lab/AdapterDayjs';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport {ColorsStyles} from './constants/ColorsStyles';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#FEDAD0',\r\n      main: ColorsStyles.colorButton,\r\n      dark: ColorsStyles.colorButton,\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#99D9F0',\r\n      main: '#009FDA',\r\n      dark: '#12B2ED',\r\n      contrastText: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const {\r\n    token,\r\n    login,\r\n    logout,\r\n    ready,\r\n    email,\r\n    newEmail,\r\n    type_admin,\r\n    name,\r\n    language,\r\n    newLanguage,\r\n    translations,\r\n    languages_list,\r\n    get_list_lengs,\r\n  } = useAuth();\r\n\r\n  const isAuthenticated = !!token;\r\n  const isAdmin = type_admin === 'Администратор';\r\n  const routes = useRoutes(isAuthenticated, isAdmin);\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={DateAdapter}>\r\n      <ThemeProvider theme={theme}>\r\n        <AuthContext.Provider\r\n          value={{\r\n            token,\r\n            login,\r\n            logout,\r\n            isAuthenticated,\r\n            email,\r\n            newEmail,\r\n            type_admin,\r\n            name,\r\n            language,\r\n            newLanguage,\r\n            translations,\r\n            languages_list,\r\n            get_list_lengs,\r\n          }}\r\n        >\r\n          <PopupFormProvider>\r\n            <PopupForm />\r\n            <Router>{routes}</Router>\r\n          </PopupFormProvider>\r\n        </AuthContext.Provider>\r\n      </ThemeProvider>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport {Auth} from './pages/Auth/Auth';\r\nimport {Header} from './components/header/Header';\r\nimport {Users} from './pages/Users/Users';\r\nimport {Poster} from './pages/Poster/Poster';\r\nimport {Video} from './pages/Video/Video';\r\nimport {Audio} from './pages/Audio/Audio';\r\n// import {Maps} from \"./pages/Maps/Maps\";\r\nimport {Tests} from './pages/Tests/Tests';\r\nimport {Courses} from './pages/Courses/Courses';\r\nimport {UsersFin} from './pages/Users/UsersFin';\r\nimport {Lengs} from './pages/Lengs/Lengs';\r\nimport {Playlist} from './pages/Playlist/Playlist';\r\n\r\nexport const useRoutes = (isAuthenticated, isAdmin) => {\r\n  if (isAuthenticated) {\r\n    if (isAdmin)\r\n      return (\r\n        <>\r\n          <Header />\r\n          <Switch>\r\n            <Route path='/koleznev/admin_panel/users' exact>\r\n              <Users />\r\n            </Route>\r\n            <Route path='/koleznev/admin_panel/video' exact>\r\n              <Video />\r\n            </Route>\r\n            <Route path='/koleznev/admin_panel/audio' exact>\r\n              <Audio />\r\n            </Route>\r\n            <Route path='/koleznev/admin_panel/posters' exact>\r\n              <Poster />\r\n            </Route>\r\n            <Route path='/koleznev/admin_panel/tests' exact>\r\n              <Tests />\r\n            </Route>\r\n            <Route path='/koleznev/admin_panel/courses' exact>\r\n              <Courses />\r\n            </Route>\r\n            {/*<Route path=\"/koleznev/admin_panel/maps\" exact>*/}\r\n            {/*    <Maps />*/}\r\n            {/*</Route>*/}\r\n            {/*<Route path=\"/koleznev/admin_panel/consultant\" exact>*/}\r\n            {/*    <Test />*/}\r\n            {/*</Route>*/}\r\n            <Route path='/koleznev/admin_panel/lengs' exact>\r\n              <Lengs />\r\n            </Route>\r\n            <Route path='/koleznev/admin_panel/playlists' exact>\r\n              <Playlist />\r\n            </Route>\r\n            <Redirect to='/koleznev/admin_panel/users' />\r\n          </Switch>\r\n        </>\r\n      );\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Switch>\r\n          <Route path='/koleznev/admin_panel/users_fin' exact>\r\n            <UsersFin />\r\n          </Route>\r\n          <Redirect to='/koleznev/admin_panel/users_fin' />\r\n        </Switch>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path='/koleznev/admin_panel/auth' exact>\r\n        <Auth />\r\n      </Route>\r\n      <Redirect to='/koleznev/admin_panel/auth' />\r\n    </Switch>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter><App/></BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root__\":\"Form_root____2gOD2\",\"root___\":\"Form_root_____15Uhm\",\"root___l\":\"Form_root___l__3MP1I\",\"blur__\":\"Form_blur____5fvMN\",\"dropList\":\"Form_dropList__3mGEw\",\"statisctics_view_label\":\"Form_statisctics_view_label__1S-lj\",\"statisctics_label\":\"Form_statisctics_label__18hXB\",\"diagramma\":\"Form_diagramma__3-KH6\",\"statisctics_item\":\"Form_statisctics_item__2gpdD\",\"statisctics_item_text\":\"Form_statisctics_item_text__3H-yQ\",\"root_statistics\":\"Form_root_statistics__1A3Ee\",\"statisctics_block\":\"Form_statisctics_block__3JVtd\",\"statisctics_view\":\"Form_statisctics_view__3bdeY\",\"statisctics_view_active\":\"Form_statisctics_view_active__1Zq-4\",\"root_statistics_item_active\":\"Form_root_statistics_item_active__12Z4b\",\"statisctics_result\":\"Form_statisctics_result__1YEGu\",\"dropListItem\":\"Form_dropListItem__6wmKX\",\"root_file\":\"Form_root_file__dQBda\",\"marginBottom\":\"Form_marginBottom__2DJz4\",\"drop\":\"Form_drop__xRgmC\",\"button_add_function\":\"Form_button_add_function__17n1k\",\"wrapper_full\":\"Form_wrapper_full__26E6j\",\"block_field\":\"Form_block_field__3PSGv\",\"wrapper_bool\":\"Form_wrapper_bool__3Hh39\",\"root_click_\":\"Form_root_click___1YBoA\",\"root_click\":\"Form_root_click__2bkYo\",\"root_click_b\":\"Form_root_click_b__2ZZL_\",\"block_wrapper_b\":\"Form_block_wrapper_b__1cy1R\",\"wrapper_box\":\"Form_wrapper_box__k_Xdb\",\"block_root\":\"Form_block_root__2gTMz\",\"button_input\":\"Form_button_input__1qiiw\",\"button_input_b\":\"Form_button_input_b__E0bGG\",\"button_input_b_\":\"Form_button_input_b___3Mc3f\",\"box\":\"Form_box__3WTAO\",\"box_active\":\"Form_box_active__1JJVb\",\"clip\":\"Form_clip__3sY2C\",\"clip_active\":\"Form_clip_active__196v0\",\"clip_text\":\"Form_clip_text__2JkAm\",\"open_input\":\"Form_open_input__3qyJM\",\"input_file\":\"Form_input_file__L7axQ\",\"button_file\":\"Form_button_file__AmRcl\",\"step\":\"Form_step__3jn5-\",\"root_popup\":\"Form_root_popup__3B5kB\",\"root_popup_\":\"Form_root_popup___3oghz\",\"popup_header\":\"Form_popup_header__1tZuj\",\"popup_label\":\"Form_popup_label__5m5SH\",\"button_close\":\"Form_button_close__1JaPV\",\"placeholder\":\"Form_placeholder__14U83\",\"button_open\":\"Form_button_open__26cD9\",\"wrappe_center\":\"Form_wrappe_center__DCJUQ\",\"markdown\":\"Form_markdown__3ilIB\",\"wrapper_date\":\"Form_wrapper_date__1bAO7\",\"additional_item\":\"Form_additional_item__3x9FA\",\"additional_item_text\":\"Form_additional_item_text__7DEln\",\"additional_item_placeholder\":\"Form_additional_item_placeholder__1z70-\",\"button_delet\":\"Form_button_delet__1LdL2\",\"button_delet_\":\"Form_button_delet___sKABo\",\"st_date\":\"Form_st_date__3RwuQ\",\"placeholder_max\":\"Form_placeholder_max__1Rbl2\",\"wrpper_field_header\":\"Form_wrpper_field_header__1cW8W\",\"wrapper_language_label\":\"Form_wrapper_language_label__3p__w\",\"language_label\":\"Form_language_label__2jZSS\",\"box_translation\":\"Form_box_translation__3xbs4\",\"list_language\":\"Form_list_language__3sdCo\",\"list_language_active\":\"Form_list_language_active__1RJlO\",\"wrapper_language_label_default\":\"Form_wrapper_language_label_default__2cNxW\",\"item_language_\":\"Form_item_language___3lSbP\",\"item_language\":\"Form_item_language__giV8C\",\"popup_error\":\"Form_popup_error__1TLrn\",\"popup_ok\":\"Form_popup_ok__fPHaf\",\"lin_b\":\"Form_lin_b__C1H9P\",\"inputarrea\":\"Form_inputarrea__322F9\",\"jin\":\"Form_jin__aGc5y\",\"jinl\":\"Form_jinl__3O7aZ\",\"input\":\"Form_input__29Oxa\",\"input_color\":\"Form_input_color__30WGc\",\"input_text_color\":\"Form_input_text_color___v-y_\",\"input_wil\":\"Form_input_wil__34ZBB\",\"input_set\":\"Form_input_set__2hJP_\",\"popup_liner_button\":\"Form_popup_liner_button__2uLGY\",\"wrapper_st\":\"Form_wrapper_st__32WD9\",\"wrapper_st_s\":\"Form_wrapper_st_s__1eXHr\",\"wrapper_st_\":\"Form_wrapper_st___2ilpb\",\"text_list\":\"Form_text_list__3N6CL\",\"popup_button_ok\":\"Form_popup_button_ok__2T9qV\",\"popup_button_exit\":\"Form_popup_button_exit__ENrUf\",\"popup_button_delete\":\"Form_popup_button_delete__zmcBs\",\"block_buttons\":\"Form_block_buttons__2GF7t\",\"popup_button_ok_text\":\"Form_popup_button_ok_text__3oV7L\",\"popup_button_exit_text\":\"Form_popup_button_exit_text__3MiPQ\",\"block_loader\":\"Form_block_loader__Mj9Cs\",\"loader\":\"Form_loader__1cr23\",\"root\":\"Form_root__m5VLe\",\"blur\":\"Form_blur__24tP1\",\"block\":\"Form_block__1smx7\",\"label\":\"Form_label__1sNcR\",\"menu\":\"Form_menu__3tlJS\",\"button_item\":\"Form_button_item__CkbR6\",\"button_item_active\":\"Form_button_item_active__3TBao\",\"block_profile_active\":\"Form_block_profile_active__Nc8h9\",\"block_profile_header\":\"Form_block_profile_header__18IaG\",\"email\":\"Form_email__17G4x\",\"profile\":\"Form_profile__1Hupj\",\"list_button\":\"Form_list_button__2OXoM\",\"button_profile_item\":\"Form_button_profile_item__I_XDf\",\"button_profile_item_text\":\"Form_button_profile_item_text__1jY4q\",\"label_profile\":\"Form_label_profile__3MpI8\",\"liner_menu\":\"Form_liner_menu__K48JN\",\"liner_menu_item\":\"Form_liner_menu_item__2G5XO\",\"liner_menu_item_active\":\"Form_liner_menu_item_active__m6x7K\",\"items\":\"Form_items__2QOb0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Users_root__3RcLT\",\"header\":\"Users_header__Zo8-Y\",\"wrapper_header\":\"Users_wrapper_header__1bF5p\",\"footer\":\"Users_footer__2KA0x\",\"create_button_ok\":\"Users_create_button_ok__31Vs1\",\"create_button_ok_text\":\"Users_create_button_ok_text__BsyQe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Auth_main__cITQv\",\"mainG\":\"Auth_mainG__3wFrN\",\"inp\":\"Auth_inp__1kPxX\",\"but\":\"Auth_but__2pl4e\",\"top\":\"Auth_top__2VbxX\",\"top_input\":\"Auth_top_input__19uBU\",\"footer\":\"Auth_footer__3Sym7\",\"button_footer\":\"Auth_button_footer__3m7Zi\",\"button_footer_text\":\"Auth_button_footer_text__18ECP\",\"root\":\"Auth_root__OKcLT\",\"block\":\"Auth_block__1k8xj\",\"text_foot\":\"Auth_text_foot__1O40-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PaginationTable_root__invng\",\"liner\":\"PaginationTable_liner__1vtwx\",\"hr\":\"PaginationTable_hr__2-l3p\",\"current\":\"PaginationTable_current__3FwyG\",\"end\":\"PaginationTable_end___NLUh\",\"next_button\":\"PaginationTable_next_button__2UoBq\",\"next_button_active\":\"PaginationTable_next_button_active__1Hr80\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CustomFontLite\":\"GlobalStyle_CustomFontLite__14bNq\",\"CustomFontRegular\":\"GlobalStyle_CustomFontRegular__1nMdC\",\"CustomFontMedium\":\"GlobalStyle_CustomFontMedium__2G-jW\",\"CustomFontBold\":\"GlobalStyle_CustomFontBold__3KhRF\",\"BellotaFontLite\":\"GlobalStyle_BellotaFontLite__1DnHJ\",\"BellotaFontRegular\":\"GlobalStyle_BellotaFontRegular__3hQmN\",\"BellotaFontBold\":\"GlobalStyle_BellotaFontBold__2fjku\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root_file\":\"PushInfo_root_file__3ujZE\",\"root_click\":\"PushInfo_root_click__1nlXw\",\"button_input\":\"PushInfo_button_input__2dgLe\",\"clip\":\"PushInfo_clip__2Cq9X\",\"clip_active\":\"PushInfo_clip_active__19X-L\",\"clip_text\":\"PushInfo_clip_text__3k3zt\",\"open_input\":\"PushInfo_open_input__3FEFU\",\"input_file\":\"PushInfo_input_file__wI0aM\",\"button_file\":\"PushInfo_button_file__-ysXO\",\"step\":\"PushInfo_step__KsoWb\",\"root_popup\":\"PushInfo_root_popup__1oBlq\",\"popup_header\":\"PushInfo_popup_header__3Os4F\",\"popup_label\":\"PushInfo_popup_label__3kP_B\",\"button_close\":\"PushInfo_button_close__239Pg\",\"placeholder\":\"PushInfo_placeholder__1uWgi\",\"popup_error\":\"PushInfo_popup_error__3RGp1\",\"popup_ok\":\"PushInfo_popup_ok__BoRUj\",\"inputarrea\":\"PushInfo_inputarrea__1UIkv\",\"input\":\"PushInfo_input__3Zm0L\",\"popup_liner_button\":\"PushInfo_popup_liner_button__1K5uk\",\"popup_value\":\"PushInfo_popup_value__2hXIo\",\"popup_button_ok\":\"PushInfo_popup_button_ok__YMQq4\",\"popup_button_exit\":\"PushInfo_popup_button_exit__3lW7S\",\"popup_button_delete\":\"PushInfo_popup_button_delete__285NY\",\"block_buttons\":\"PushInfo_block_buttons__1jg_w\",\"blcok_buttons\":\"PushInfo_blcok_buttons__SkChf\",\"popup_button_ok_text\":\"PushInfo_popup_button_ok_text__3kPI1\",\"popup_button_exit_text\":\"PushInfo_popup_button_exit_text__2WlWM\",\"block_loader\":\"PushInfo_block_loader__3SMOD\",\"loader\":\"PushInfo_loader__27Hm_\",\"root\":\"PushInfo_root__3xm7L\",\"blur\":\"PushInfo_blur__j43YS\",\"block\":\"PushInfo_block__3wm_n\",\"label\":\"PushInfo_label__2El_G\",\"menu\":\"PushInfo_menu__VZogu\",\"button_item\":\"PushInfo_button_item__1ykyz\",\"button_item_active\":\"PushInfo_button_item_active__2xfC2\",\"block_profile_active\":\"PushInfo_block_profile_active__Rt0Ku\",\"block_profile_header\":\"PushInfo_block_profile_header__2u2x3\",\"email\":\"PushInfo_email__2Ms3J\",\"profile\":\"PushInfo_profile__1mihF\",\"list_button\":\"PushInfo_list_button__2X3Sw\",\"button_profile_item\":\"PushInfo_button_profile_item__3onZi\",\"button_profile_item_text\":\"PushInfo_button_profile_item_text__3efZf\",\"label_profile\":\"PushInfo_label_profile__Tm_Oc\"};"],"sourceRoot":""}